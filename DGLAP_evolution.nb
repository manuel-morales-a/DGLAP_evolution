(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    774128,      16392]
NotebookOptionsPosition[    764312,      16114]
NotebookOutlinePosition[    764667,      16130]
CellTagsIndexPosition[    764624,      16127]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "MSTW", " ", "initial", " ", "distributions"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xu", "[", "x_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Au", "*", 
       RowBox[{"x", "^", 
        RowBox[{"(", "eta1", ")"}]}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "^", 
        RowBox[{"(", "eta2", ")"}]}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", " ", 
         RowBox[{"epsu", "*", 
          SqrtBox["x"]}], " ", "+", " ", 
         RowBox[{"gammau", "*", "x"}]}], ")"}]}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Au", " ", "\[Rule]", " ", 
         RowBox[{"14335", "/", "10000"}]}], ",", " ", 
        RowBox[{"eta1", " ", "\[Rule]", " ", 
         RowBox[{"45232", "/", "100000"}]}], ",", " ", 
        RowBox[{"eta2", " ", "\[Rule]", " ", 
         RowBox[{"30409", "/", "10000"}]}], ",", " ", 
        RowBox[{"epsu", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "23737"}], "/", "10000"}]}], ",", " ", 
        RowBox[{"gammau", " ", "\[Rule]", " ", 
         RowBox[{"89924", "/", "10000"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xd", "[", "x_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Ad", "*", 
       RowBox[{"x", "^", 
        RowBox[{"(", "eta3", ")"}]}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "^", 
        RowBox[{"(", "eta4", ")"}]}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", " ", 
         RowBox[{"epsd", "*", 
          SqrtBox["x"]}], " ", "+", " ", 
         RowBox[{"gammad", "*", "x"}]}], ")"}]}], "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ad", " ", "\[Rule]", " ", 
         RowBox[{"50903", "/", "10000"}]}], ",", " ", 
        RowBox[{"eta3", " ", "\[Rule]", " ", 
         RowBox[{"71978", "/", "100000"}]}], ",", " ", 
        RowBox[{"eta4", " ", "\[Rule]", " ", 
         RowBox[{"51244", "/", "10000"}]}], ",", " ", 
        RowBox[{"epsd", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "43654"}], "/", "10000"}]}], ",", " ", 
        RowBox[{"gammad", " ", "\[Rule]", " ", 
         RowBox[{"74730", "/", "10000"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xs", "[", "x_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"As", "*", 
       RowBox[{"x", "^", 
        RowBox[{"(", "deltas", ")"}]}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "^", 
        RowBox[{"(", "etas", ")"}]}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", " ", 
         RowBox[{"epss", "*", 
          SqrtBox["x"]}], " ", "+", " ", 
         RowBox[{"gammas", "*", "x"}]}], ")"}]}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"As", " ", "\[Rule]", " ", 
         RowBox[{"59964", "/", "100000"}]}], ",", " ", 
        RowBox[{"deltas", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "16276"}], "/", "100000"}]}], ",", " ", 
        RowBox[{"etas", " ", "\[Rule]", " ", 
         RowBox[{"88801", "/", "10000"}]}], ",", " ", 
        RowBox[{"epss", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "29012"}], "/", "10000"}]}], ",", " ", 
        RowBox[{"gammas", " ", "\[Rule]", " ", 
         RowBox[{"16865", "/", "1000"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xdelta", "[", "x_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Adelta", "*", 
       RowBox[{"x", "^", 
        RowBox[{"(", "etadelta", ")"}]}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"etas", " ", "+", "2"}], ")"}]}], "*", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"gammadelta", "*", "x"}], " ", "+", " ", 
         RowBox[{"deltadelta", "*", 
          RowBox[{"x", "^", "2"}]}]}], ")"}]}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Adelta", " ", "\[Rule]", " ", 
         RowBox[{"89413", "/", "10000"}]}], ",", " ", 
        RowBox[{"etadelta", " ", "\[Rule]", " ", 
         RowBox[{"18760", "/", "10000"}]}], ",", " ", 
        RowBox[{"etas", " ", "\[Rule]", " ", 
         RowBox[{"88801", "/", "10000"}]}], ",", " ", 
        RowBox[{"gammadelta", " ", "\[Rule]", " ", 
         RowBox[{"84703", "/", "10000"}]}], ",", " ", 
        RowBox[{"deltadelta", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "36507"}], "/", "1000"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xg", "[", "x_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Ag", "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", "deltag", ")"}]}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], "^", 
         RowBox[{"(", "etag", ")"}]}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", " ", 
          RowBox[{"epsg", "*", 
           SqrtBox["x"]}], " ", "+", " ", 
          RowBox[{"gammag", "*", "x"}]}], ")"}]}], " ", "+", " ", 
       RowBox[{"Agp", "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", "deltagp", ")"}]}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], "^", 
         RowBox[{"(", "etagp", ")"}]}]}]}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Ag", " ", "\[Rule]", " ", 
         RowBox[{"12216", "/", "10000000"}]}], ",", " ", 
        RowBox[{"deltag", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "83657"}], "/", "100000"}]}], ",", " ", 
        RowBox[{"etag", " ", "\[Rule]", " ", 
         RowBox[{"23882", "/", "10000"}]}], ",", " ", 
        RowBox[{"epsg", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "38997"}], "/", "1000"}]}], ",", " ", 
        RowBox[{"gammag", " ", "\[Rule]", " ", 
         RowBox[{"14455", "/", "10"}]}], ",", " ", 
        RowBox[{"Agp", " ", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"deltagp", " ", "\[Rule]", " ", "0"}], ",", "  ", 
        RowBox[{"etagp", " ", "\[Rule]", " ", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xsplus", "[", "x_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Aplus", "*", 
       RowBox[{"x", "^", 
        RowBox[{"(", "deltas", ")"}]}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "^", 
        RowBox[{"(", "etaplus", ")"}]}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", " ", 
         RowBox[{"epss", "*", 
          SqrtBox["x"]}], " ", "+", " ", 
         RowBox[{"gammas", "*", "x"}]}], ")"}]}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Aplus", " ", "\[Rule]", " ", 
         RowBox[{"10302", "/", "100000"}]}], ",", " ", 
        RowBox[{"deltas", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "16276"}], "/", "100000"}]}], ",", " ", 
        RowBox[{"etaplus", " ", "\[Rule]", " ", 
         RowBox[{"13242", "/", "1000"}]}], ",", " ", 
        RowBox[{"epss", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "29012"}], "/", "10000"}]}], ",", " ", 
        RowBox[{"gammas", " ", "\[Rule]", " ", 
         RowBox[{"16865", "/", "1000"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xsminus", "[", "x_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Aminus", "*", 
       RowBox[{"x", "^", 
        RowBox[{"(", "deltaminus", ")"}]}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "^", 
        RowBox[{"(", "etaminus", ")"}]}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"x", "/", "xzero"}]}], ")"}]}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Aminus", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "11523"}], "/", "1000000"}]}], ",", " ", 
        RowBox[{"deltaminus", " ", "\[Rule]", " ", 
         RowBox[{"2", "/", "10"}]}], ",", " ", 
        RowBox[{"etaminus", " ", "\[Rule]", " ", 
         RowBox[{"10285", "/", "1000"}]}], ",", " ", 
        RowBox[{"xzero", " ", "\[Rule]", " ", 
         RowBox[{"17414", "/", "1000000"}]}]}], "}"}]}]}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.782979146994423*^9, 3.782979147699306*^9}, {
  3.7829792255571003`*^9, 3.782979226326448*^9}, {3.782979301080214*^9, 
  3.782979349783738*^9}, {3.7829842946031427`*^9, 3.782984302542595*^9}, {
  3.783186596984427*^9, 3.783186598024506*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xu", "[", "x", "]"}], ",", " ", 
     RowBox[{"xd", "[", "x", "]"}], ",", " ", 
     RowBox[{"xs", "[", "x", "]"}], ",", " ", 
     RowBox[{"xdelta", "[", "x", "]"}], ",", " ", 
     RowBox[{"xg", "[", "x", "]"}], ",", " ", 
     RowBox[{"xsplus", "[", "x", "]"}], ",", " ", 
     RowBox[{"xsminus", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783186632923624*^9, 3.783186654538262*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
b40axwtdw8yMuACYfeA4JJM+jtY1rjJtMf6oG3fO+MwYR3D2zC/BDF9kSr/b
Zds1Dj2Zi5sNQnzx8OqSop/vxzE//JQnxd4XF6Yjavj6x8H1ku9rsqIvfrOz
+9XGx/H6xXYVjgof7Jib5Iv/Mw6+y/f+qfbdQ+wSM6fjkhN4c95kq5ysN/5d
3KhEl5rAy1aSfWu1Nyyrad8NZCbQ1vPtxMScF3Z6a948qjCB94rROatqvNCw
IO2uqzKB7mcmczHnvfDj9+xdQn8ChtelKkMTPHFyJvC+rNMEBGWPSBw4egel
hpr6L10m0NPyulxb7A4kcuZXSLtNIP40V7TX7G2w7exDt96ZwBcRd9vg+Nvw
ZRo/EAuYgPDP4EPTU7eQPy4aw584AfP7jS9eR3pg3cCbFM6aCYxeUVf3Wu6G
0BW3bxfWTeBcTqy19GdX8B7QOm3TOAG2lFDDkkJXcMYyVna3TSBiW4+b6UVX
fDUiXV9+mMDgtVTte2U3QauVNjAkJ3B1w/lvQXdcEJyV8CdJaBK/w0K3X5Z0
AnefRfdxkUkIhO+TtVrkBB9e2dfLxCbx2dvlaFSfIzwuF1nd2DqJWx6i5vei
HGEt3kXX2jkJoYTus/E8jtCNWvViWnsSQTzH4sN/38DS217G+25MopZ5NInv
rz3yZ5i/yh0nsWt8W929GntYWp1+rOMyCbemQDnNYHvUGOyYOuExiYp/87kp
wvbwkei/a+c7iYid+q/71e2wpEElIzVuEobCfj+Wx9iAc90XjlVVk9AaCO8L
d72KXP9zzyNrJnHartfoq+5VWMzX6W+qn0S56YRMjOBVVI0mxUi3TGLHil3L
00uuwLvoiLxm9yRmQnI7WZxXwGH2/LTr1CTqv5rTCpOssOilWfbQ2ilEOcpl
ZHBaUvee93aPN0zBS83QIf/9RQTvNFIwFZjChrRDdouzLmJjkWZWl8gU5MMf
dzucvgiFeumMBukpvP34WS4s1wKmo1/TXhFT6BRfdOOWozneivs/creeQnx5
8sVD+ma4c2mRmbLtFPJX8y3UcplB66WbyDf7KfAl7Ygtq/wPtJ02ibbOU8h6
/tVv077/MAGj+AueU8jdYfLOSd4U/GabonWipyDW758mLXcWDvHZIWurphAg
F/iq9vZJFM7H+1fVTMH+6+Afp0MnMW/m5+VQP4XUoZwtgWtOwn/Lf86MlimM
25BcA2kmSMzk/S/i/RSS8p/oynUbo7bsktxa1hQyqxN5WDonwCtuJFVF/n//
xXzZ/CdgeE9VzOHrFI4neYu3jR3Hx0Pr1jN+TMF37ugd8YDj1Duk4s8Dzmk4
dhU38LUbQWB4U/MagWnIfzD5nmxriP+0l9VWCk1DYbZg+vdBQ6Q8/1p2Q2Qa
cQdTrqQLGELOpjGXLjGNlPKzxOogA2h8d4l/ID+NTalrz1/UPAbrZYyrazSn
ETspUZ7deQTvtgdwr7GbRmNKxLmX1w5hb+fG1ojr0+AY80m2UjiEnFvPH6x3
nMbNsIjdyTM6SGmtExJwncbKe/levm46CLBfKi/qPY2uAsnKpWHaOJ7nbSQf
PQ13vn1cOjRNNJ9by58dO400xeqVN+M1obUk5ePOhGl47q94KXhJE8omlRcV
k6exR20j5+s/ByH8Y8H5QPo0eI+vX8qvcBDj+2/HHy6bRq4445bMc3VcGF5x
vrliGqNdJrZSrur4eD9xy9HqaXS3bygKOqyOlr6STMOGaTiU+5St7AVy7/wu
O8WYhltyip6rE4FbVTeHL41NY9XGu95bWg5gjZ6DnPcqJuSadcbcuZSRXMm3
fP8aJjpzzOSWF+/Fzn1ZkzPrmPCnG3Wa2+3FMemJNHNBJlrLfsSaflBCEJeZ
uIYkE5aXbtlfKFLEkurD/Iv2M/GwqqTzatxuPNw//q1QlYmm2lznotO7IZHr
02EPJk4u2XOuUGA31J+Uhw9qMfFGO+NRRfwu3L6rtLzcgIlT1X8X96XtxNwB
8UV3LjGh4ircuLVUHr55ZQNKV5gQ9duf+MBAHuu3m75jWTMBkjtJcUQOe4Ri
3P+7zoSJxzMl/jVyuP5zxXdVDyaCHd/UcrrJYjL/5+SfcCYqCw2mLe5ug6tc
dEPeQyY2M2d3iWzdBu6ne55fi2aiwmSd3ESzFKQe2ln2JlDxKSIXPReWgsWN
kYHiNCZ6FdT2BTRJok+e1uFWysTu+zo5QyYSeDy95vbicib+M9na6rlaAhYv
T0iFVDIRI6D7mtUsjknJ967JdUy0Z6Z9ltMWx9ymAZF6GhPTc7p9qzXEsIaX
eXn9KBMOn03UmG+F0Vkvv+bROHX+hG3J1oeEEetrX7xtiolGgQxBo+5N2Mwx
u+IAycR70azAwz+FIPfz12vzX0x0bV7RF6YvCJ2xZfOvVrLAMSmgU7qHHzxP
Dz9TWc1CZiNPgnb3BrSY3z9WtZaFsUcrPy5134AT/auedG1kIf7EwnnR2vW4
0LlBZ16chSM7RjwuXV0Hj6ot4Yf3shCSK69dPb4ahOelfR0qLDhMKERbJq4G
J/F8yPQAC5+Dqwf5jq9GwFtZpevqLKz9Pmc568mH6JxdH6P1WAh+GC3/5PhK
5DyC5IgZC28f3WyOMuLBrPvsMnNzFiY1NEYXermx99Tz6f6LLMQkTEwIXeFG
CR9f3vsrLPhtd/Y28l2GOs8BjWYHFrKyu65rdiwF938RW3WdWVi57PzGQuul
OLJPh6f2JgvzZ16uLVq8FLSZLFrZLRbohjWNhvuXoNfi9vlcPxYKLT5vtXrL
ic3YpbkjkIWhDa6yraacuLBpVCrzPgvvk3bVP+bgxFiHPvtZOAtnRz2dbxpw
4IuW8O24eBbKuWpHFuYWCK5tJfGer1jI1zr6edWWP8ThxfZ3/uawsE6IvSv+
4W8ieFDCwj2PhdaQzDhPrt/EmtggGaciFkokPOI0Zn8Swjxniy5XUfnJ8Oxu
Hp8jzo+uTBypYeGF1oNfVtZzREpl5V3zehaCGsycJMnvxDZ3mUPnWliouNIi
MP3vG7F7+mfXsW4WzidL507tnSWc6zPfNvewcFwzrr638StRlHohSbeXhac0
1/G3Zl8JNdMGy4OfWDAean6yJXSG0G2NmVWaYoGLfs5+nvML8V/23jUi/1gY
Gb7K13Vniig4+3MVbREbXUe4mibaJolVXMUr7i1m40zDudZkiUmiwlSNe5Kb
jRWF/i9rOscJCV6thfx1bJgOhp80thgl3N8s/XuZn43ybev/cLSNEB0X6n8L
CbIRosvtNKo6QvgU6s15bmbD5leNuqDkMDFmacTSl2HDz3D2TDP/Z4JYvW56
YTsbazz7q97FfyJiSjonchXYoLleVPIU/0Torj09IqDIhrz/Qnqg3QCRXm7W
O0Kw4U4uIhYv7SU4r4l9iNGg5rO5vtxQ+SNxjn+oW0+LDe0XzWLedh+IFbaX
GDmH2TDYzYpXm35P2AnZNN4yZuP4jcNS+Zu6iLpa+fodp9jgUZmqbnboJERv
kDVDZ9iIeaciuLmtg6DVO1TonmfD7uhyY4kHDGK3s1vhems2ZJa1uXnr0Igg
sQNv6m3YEFpRvDHMvZ0Ybp7Pdbdn4+NQYedp+zYiUsLz1ScnNnwvZioK2rUQ
P9r9nmXeZaOq9b2xdWkDYeihm3remw29iE9veT/VEy+keJ+s9WWDua9zhsFT
T5y9HZLoGsTGFxfpR6fsa4lcaYP47SFUPCI4IzrSa4jlnatjB8LYeLbC+uTc
dDVRKhv5UCuKjSiZy7L5d6qI9d0mD37EsOG5olZtLa2SsPXaGJYez0Za9eS2
JKlKYnNPfNDqZDYSy0KCAmrLCU/fJ1596WxovhG+5yxdQqy8uUzPPIsNr6j2
5AKZYiL+iu3asWw2Rmb/ZLvufkvkHdmXSuazIfl+g0f3mUJCXe3xNadCNqwM
HLaLuhYQLQpLFX+9ZUNXQir/YNIbYmwNvYaznI3PFXWD7n/yCIfFyiH+lWw8
GfE+rKGYRyx8SzRZUcOGS7ncRh3HXEKg58rYhkZqf/tTx50WvyaOPFrELdPB
RrP16Oo+WibRE2ZFy+piI6lmco/xowzC0qsldncPG++mhET5XNKJO5axMqr9
VL7MOvK1NV8QvCf/zVQMsrGSOWWorvKciDlkWaw9xMbNmFWRHnvTiBzZnUcM
xtnonODrfnf0KaEmHL2uc5KN7B0LF/StUommlfO9p5ls1I+3pMn6pxDDX+pt
LGbY6I8dWPjyKZngLzwf6vyHDXX6y227+hOI1Be1J3//ZYOfOz1Uwj+e2Bm/
XfTuIhLcQnGpx4k44vDtH9kBS0kcOuMjPsKIJrrt/nNdyU1iQ8/Bvz7ZUYTF
hWr1CF4SL+/cvDgcE0nc0gyjJ/CRCHk95WwTFEHwKH2PE1tL4kvVz6jRhw+I
aKlzFs/Wkzj4H4fo2+fhRDbPttlXgtR6Gyvi1D+GEKp/gkv2CJOIusJ4Ka4a
TDQwv94r2kzieYgy1/acIGKovWx91RYS7m/vhxq2+BP2lZL9OlIkjmdWqBx0
9CPmc4OeNUuTuMSSF1wm60tsiD65t0uehNZhN7WPNd5Ein/pvzM7SWifFwzp
ee5FKLhJ1A/sJvFEJW5jUKwnoWvKPjWhTMLJzEdp/cHbROdRYzHb/SQW3tf9
rbb3IMxRPDGjSmLJQ//qhXw3wl3Cz+2PBon2Jz/+3PN2IZatZ2p4apEQ8mCm
8PE4E5FLj/MuPURinYhlYFaqI5E1IZKwSp9E0OUmpbE1N4iAJN8LA8dINM8I
/Bq6Z09YHmdtfWVEIlGP+WbJKltCfZnJ9G1jEozevvwdFdaEcGlpztFTJH5v
90t1iL1C/Lwu6SJylpov6IgfM9KK6NgafIBlSsLKb5tTS54lERR2ri7YgsQg
syis0cicsNKqvm96iVrP7k3F1oTzxMFfskZyV0h0/+r+sqfJlNj8KoJ/3pqE
wK6S0Hz5s8Qvi9+9zbYkftl5XiqpOkV0brR4knCdhKXs7BNXPxMip6XR6poj
CZXjxYdUXE4QV/bGzfC6kYh5HxLPemRAaE0vKvzoQWKxTD2n9BV9QjT5yq30
OySe3eO6MOB8mPhtTNNw9yJhblJQ96pah+jmUVmm50PizBMhmytHtYjcssct
gv4kLuxTCOHlO0iEOi6LmAwk8TB4nUn1EnXCWtr+1NtgElltqn79JqqEdn+3
cGAYtb7ZT7Ht8yqEWAQxdDqChHPLou0935WIeZ2059JRJAzWKv+XorqH6Pmz
0vZnDIn7qksPxjftJPJznHc3xJOQ1FeZ11CUJ8Iv9f+ISSIxEnJuV8sRGeKa
kPa7y8kkZk5c8muibyV02jO9lVNJaJY+1GgolSAkfNbrLksj8UPQX+jTYjHi
n8qtle9fkJBvSgyzV9tEfGANM9IySPyJFRH4wbuRyE85EuvyikRkQY9vnvk6
IvxU3n86r0nIvi7snd+zmrBZsWkLfz6J19XiSw5M8RK6ld4TowUkbOImKyN2
cxGSLlNZb95S9TxWMieznZNYkD3u6FtKQvfRc4Xcu3/VPg6+VTEpJ9ESKuUv
V/pDrSBS/J9kFQnj2Fur6ie/qkUcDqz+VkPCi9zn+Y3BUrP79yWgpp7Eh0fV
0qLEuJpe3uljkU0krnufNZr//Flt65WKdZatVHyaaSMi4r1qi0SkP+yhUfFf
UldqqNGp1kcPe7S4g4REmohiQEGrWpHfj4sdXSTaIqWvm5nWqkUeOC+T2kNC
zjXYkntpmdr1L3Vsh14SJTkK8tbB+WpHninkHxyg+kdhuX7b4Qw1qbPRbms/
U/ri+tC22+OJGiffP2JomMTNg+8Ko12j1AaqLy3JHaPiXx78/vDyQLVi19ZG
r0kSJ0OnnReueKhFyyuFGTFJTDROZHpnXlO7MZRoLE5S/W0ZaO++5YyafswS
oZkZEg8y+x0EajTVpPVtBiu+Uf1i5ydwWllGbQlH59PwHyRyz/GuPyu8TO3T
mwPWF36T6Ppmmp0u+1611Dp1x86/JOyjn4voafuqxogu/76wQCJzdMK5TZNL
5X9Lo44e
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aW1nhwpPGZTH+Cd/nv0/iO0zAA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
DrX/Awo+keE=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
2jg8PMLflDekyg1c/R8Mkxlw
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
36KQ349/0926Ra5vzKowgSUKkb6ZhZ+yJ0KbeFi1o3skUnX8+NeRe0Twu/1U
0cnnNXKAb4wzdibCJ71wxUrDV4jiD5/Hfa7kfEOiH+9Iv0RaAqaVOjyJYNbZ
nXnsTARCb/VWSNObCP0/zYoMeJ8jOnLqR5t9/6f3KLO5CBbp/ZnfW/uUCKk3
BbTzb4QhE3Z+NsVhRNgnGMfLHw9GzsAlFYnnREjWVrkXrh+E2J5aOpf3gpyf
x2JTelwgsjygS8qIJEIsh/1td9kARLiQop8/mggLnHzyjkL+iPPLktLkWCJw
Cn50WlvyQzZUefzeJRLBa8x9VfP5E+QKX68t5wciFP7mZXV0foz4/AtWjU4m
gs59zte0po+QvVI846tPRHA4soK5oe+LHDlflRjwhQjDzAiVcf4DRIva/dm/
QiK8DdmuURr3RF7O8Ns9/kqEDNriMonjnghLQoSIVwURnmkfbO68uY8Ye6HH
flYSYSTQWjW5zB2JM/i14VpDhMdrUYHyFm4Iz1HziruNRBB+qk11vdMZsVk6
lrTYRARu6h85S/FOSFpDg/+tViKITI+3R7o7Iucfi2hYdBLhfGpkeaDSXeQy
fmfo2jARek88sq5xsEe8W/O+dYyS/ffrg9laqB1SkW77QXOCCKvepz0EC28h
iOUPB+VZIhy9eOaE5xlbJED2qWbdPNn/AS4V7d+tkUZ2STHMEhF8XzUwaJtb
IZpd8b+vrpH1ZP6p2PbVHInI0RkpJhAh6Ok6X6G3GdIVelgpsU4EaU7RwH+q
pogRejdIZJMIBqWVvB1HbyCx3KfuZP4hz29lULbJgTEy+qdbS2CXCEeyfWks
Dq4jVgXSLKcPyP3N1u3g5DVCysx3mHspSNB+k/+EnZghwnykkimYmgQSmFpG
cTUDpN4SoV+lJwF71dDlYnE95CT9IW0SIwno/Q9jEpJ1EI+v9dT6zCSIvbzy
X6+ANsLPoHpYwkaCUY+5ojk7DeRxKe2/u5wk+G4zVXCeRx0ZsG39y81Fgvhd
35+xS6pISLn2n4AzJDiUZaXjzFRGJu2YNq/wkaD8I91k93sl5Cpz989lARLc
FhLy+/dREVl2MCTqipCgpGdaKiMOQdD/2PCHF0iwG9Chn7WsgMRXDeKKxUlw
Ru7A/UBXHtFkNV08KUUCUBM+iDaVQVJquOY7pEkg9uCGyNzeVWT33sTMMzkS
PGOQZ08pkkJy66wnFlES2Mq4/vhncBmhcj47Fq9EAmkq4vKO7CXEgnN+WFuV
BIsY/+bTkpIIk+vt/kItEhj5LRttR4khDifP99rrkuBnnOOvrH5RpOY7rotT
nwRTWrbHhcVEEDdul7anxuR4mSzHygTPIS3NF1slbpKgqZ4nw7tBEOH1WG+a
NyOBZiEz311PAeQhT1FjrCUJxu4LCARL8yO9rZ71mjYkcB2RE+xm4kOEH0jV
7t0igWPiif0CHC8SeOZP1RcHEljz+f/yGT2NXPZ+VM7uRAIHGw5eKzZuJOKs
QmmrCwnqXtFc1rM4iSx07Bc/didB1P0LeZE1nAjGt7bwoicJvrT7cNXKciAx
/AFfZr1IQMymEvDrYEOIXUp50b4kGP+UORHqxYqoP6LOVX9Mgocni1hTLrMg
2z1hGXn+JLBPSqVe7j+GGDzRTLcJIkEkjjeUvp4RyT7HkMoaSoKwMyKN+d1H
Ecr+jo/N4STAnWWn3NinQ8z9XiU9jCCBydB4P6XWEaRYWD/xwisSdDov0V4s
okEYB/9LmH5DAt4bGWl9V6iRatGYaNVYEvCXyr+4H0SBsA+bRG3Hk6BF4e40
f/wBxjXwxJvcRBKUedPpkYz2MS1iYy+tPpBgKKV9tPnqX8yZ0cSI/1LI9Vqw
1+shOxifYEvs9zQS5PDqP9W++wfTI34mzCeDBF1aVqrJRZuYgNDUwMlcEmgx
nvjnlvwTc8yXTvtWPgkevzV4c2CygUm858q6XED2j9cXQo8qCXPOfGDcqZgE
l78kuVcfIWC+6silr5eQwJv3RrXO+ipGEUl29ion71eINhXeX8F0itNK7X4j
z1fdtyKeC8uYZZa+Jqo6Epg+omI4tjKPOdxMMmFqIoGIHvvHcrZZzMnRe8sc
bSRYKPokU6k+gblcJeXL203uZxqj5CO2EYzORwp6kQESZF+6FTLtO4BxCOxM
uDxKgh1MMNNr217MM4cEEcwUCfYipnPrHnZg4jUcKtXmSeCpsL+hv9OCKRSV
1NFfIfv99RHHI0LfMQsbrS52P8ksfbmLaFyJ4Sy3ee29RwKmLRzh1HgRJj27
+cbffyS49uWfxUWRQoxk4gVef4p1ODslwX9RIR+j5bddgKVdh6djJ0+fGM7C
PFV50/f++DrI7jDl0+slY+Z7atkbBdZBWdg72S30Oca9QXBK/dw6uEUiLHVf
wjD7xREZHcLrQEdPE9jGF4LhiLshPXRxHS4H//WHWH+MpiXpJk5mHdiHOUoH
OR5g8nGn3zPrrkM+cytOsMQMg/0Qajt9bR0aclZfRU+bYByMiEJfDNdBq8Uo
n+uNEYanurpQ7+Y6bPM/Jo4Fa2Mi3li0vLRbB+uVcOeXZ+Ux96Tf/WR4tA64
Dbq5wCccGP4Qdk26zHUYUdFZem9XqnAg+/TYSPY6sIXdmTCY/qIwRlzoz/y8
Dt7OG6dfMmQqRN78aqVetA4JDf6D0l9jFQ5FjR6EVq+D4BHNpd4eD4XJvjcf
qQfI8fneWlZ+ZlGoCNu2HxhahwuieguhUlQKMQo2Iumj6zD1dYTqwdpPeZ0M
8RLl6XVIs1qJJNh1yVc+7GoLXCXXT9nZP8ftKh938eobQ8I6hGsn6jP568l7
zCcZ862vw9zzI1aouLC8sK7LTP3mOjRxwP0dYqscDeXgp8jtdYit+ADPZoLl
ZksVnGz/rkOU2IMLfdkCctVO6RKS/8jxjbmQNKEA2Xhexq3Dw3Xwy46+0D/+
UOL/AF385NQ=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xu", "(", "x", ")"}], 
       RowBox[{"xd", "(", "x", ")"}], 
       RowBox[{"xs", "(", "x", ")"}], 
       RowBox[{"xdelta", "(", "x", ")"}], 
       RowBox[{"xg", "(", "x", ")"}], 
       RowBox[{"xsplus", "(", "x", ")"}], 
       RowBox[{"xsminus", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.782984296889628*^9, 3.782984306000187*^9}, 
   3.782985055500458*^9, {3.782985118845068*^9, 3.7829851452265577`*^9}, {
   3.7829852609207363`*^9, 3.7829852844334183`*^9}, 3.782986230319131*^9, 
   3.7830032606323643`*^9, 3.7830046955002127`*^9, 3.783086691096706*^9, 
   3.7831866567085114`*^9, 3.783253578905539*^9, 3.783259754311226*^9, 
   3.7834222913660297`*^9, 3.7964008481917133`*^9, 3.7964013952426643`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"xu", "[", "x", "]"}], "/", "x"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"xd", "[", "x", "]"}], "/", "x"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"xs", "[", "x", "]"}], "/", "x"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"delta", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"xdelta", "[", "x", "]"}], "/", "x"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"splus", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"xsplus", "[", "x", "]"}], "/", "x"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sminus", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"xsminus", "[", "x", "]"}], "/", "x"}]}]}], "Input",
 CellChangeTimes->{
  3.7829796227930107`*^9, {3.78298070231668*^9, 3.782980705029459*^9}, {
   3.782980735061339*^9, 3.782980735787086*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Define", " ", "Ellis", " ", "Stirling", " ", "distributions", " ", "at", 
    " ", 
    RowBox[{"Q0", "^", "2"}]}], " ", "=", " ", 
   RowBox[{"1", " ", 
    RowBox[{"Gev", "^", "2"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.782979411921422*^9, 3.7829794396565323`*^9}, {
  3.78298043169643*^9, 3.782980436541306*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"V_i", " ", "distributions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V1", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{"u", "[", "x", "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V2", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{"d", "[", "x", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V3", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{"sminus", "[", "x", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V4", "[", "x_", "]"}], " ", ":=", " ", "0"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V5", "[", "x_", "]"}], " ", ":=", " ", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.782979447007298*^9, 3.782979450001384*^9}, {
  3.782979524138652*^9, 3.78297953181218*^9}, {3.782979603711822*^9, 
  3.782979690293119*^9}, {3.782980661195949*^9, 3.782980667339612*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"T_i", " ", "distributions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"T3", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"u", "[", "x", "]"}], " ", "-", " ", 
     RowBox[{"d", "[", "x", "]"}], " ", "-", " ", 
     RowBox[{"2", "*", 
      RowBox[{"delta", "[", "x", "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T8", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"u", "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"d", "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"s", "[", "x", "]"}], " ", "-", " ", 
     RowBox[{"3", "*", 
      RowBox[{"splus", "[", "x", "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T15", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"u", "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"d", "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"s", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T24", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"u", "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"d", "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"s", "[", "x", "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.782979747470196*^9, 3.782979760246707*^9}, {
  3.782979806770088*^9, 3.7829798118416643`*^9}, {3.782979877077139*^9, 
  3.7829799189950733`*^9}, {3.7829802946901693`*^9, 3.782980312174552*^9}, {
  3.782980351116643*^9, 3.782980357768407*^9}, {3.782980497158668*^9, 
  3.782980514564522*^9}, {3.7829805642237463`*^9, 3.782980604162075*^9}, {
  3.782980669691824*^9, 3.7829806765979147`*^9}, {3.783259617139007*^9, 
  3.783259617354162*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Singlet", " ", "and", " ", "gluon", " ", "distributions"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7829806444461107`*^9, 3.782980646033633*^9}, {
  3.782980685608449*^9, 3.7829806916007442`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sigma0", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"u", "[", "x", "]"}], " ", "+", " ", 
   RowBox[{"d", "[", "x", "]"}], " ", "+", " ", 
   RowBox[{"s", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"xg", "[", "x", "]"}], "/", "x"}]}]}], "Input",
 CellChangeTimes->{{3.782980718321412*^9, 3.782980740002035*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Procedure", " ", "with", " ", "V_i"}], "*)"}]], "Input",
 CellChangeTimes->{{3.782980776898284*^9, 3.782980815428834*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "anomalous", " ", "dimension"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"gammaqq", "[", "j_", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"CF", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], " ", "+", " ", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"j", "*", 
           RowBox[{"(", 
            RowBox[{"j", "+", "1"}], ")"}]}], ")"}]}], "-", 
        RowBox[{"2", "*", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"1", "/", "k"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"k", ",", "2", ",", "j"}], "}"}]}], "]"}]}]}], ")"}]}], 
     " ", "/.", 
     RowBox[{"CF", " ", "\[Rule]", " ", 
      RowBox[{"4", "/", "3"}]}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.782983369607457*^9, 3.782983376082632*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mellin", " ", "transforms"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MellinV1", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}]}], "*", 
        RowBox[{"V1", "[", "x", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"j", ">", "1"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinV2", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}]}], "*", 
        RowBox[{"V2", "[", "x", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"j", ">", "1"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinV3", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}]}], "*", 
        RowBox[{"V3", "[", "x", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"j", ">", "1"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinV4", "[", "j_", "]"}], " ", "=", " ", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinV5", "[", "j_", "]"}], " ", "=", " ", "0"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.782983483036291*^9, 3.782983539716466*^9}, {
  3.78298358579772*^9, 3.782983606629713*^9}, {3.782983691178281*^9, 
  3.782983702896771*^9}, {3.7829837425245647`*^9, 3.782983749788354*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Define", " ", "running", " ", "coupling"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7829838068714046`*^9, 3.782983813606003*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Q0", " ", "=", " ", 
   RowBox[{"10", "^", "9"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Qfinal", " ", "=", " ", 
    RowBox[{"10", "^", "11"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mCharm", " ", "=", " ", 
   RowBox[{"1.4", "*", 
    RowBox[{"10", "^", "9"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mBottom", " ", "=", " ", 
   RowBox[{"4.75", "*", 
    RowBox[{"10", "^", "9"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massZ", " ", "=", " ", 
   RowBox[{"91.1876", "*", 
    RowBox[{"10", "^", "9"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha0", " ", "=", " ", "0.68183"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta0aux3", " ", "=", " ", 
   RowBox[{"11", "-", 
    RowBox[{
     RowBox[{"2", "/", "3"}], "*", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta0aux4", " ", "=", " ", 
   RowBox[{"11", "-", 
    RowBox[{
     RowBox[{"2", "/", "3"}], "*", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"beta0aux5", " ", "=", " ", 
    RowBox[{"11", "-", 
     RowBox[{
      RowBox[{"2", "/", "3"}], "*", "5"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alphaS3", "[", "Q2_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"beta0aux3", "*", 
        RowBox[{"Log", "[", 
         RowBox[{"Q2", "/", 
          RowBox[{"Q0", "^", "2"}]}], "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", "\[Pi]"}], ")"}], "/", "alpha0"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}]}], "*", 
    RowBox[{"(", 
     RowBox[{"4", "\[Pi]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaCharm", " ", "=", " ", 
   RowBox[{"alphaS3", "[", 
    RowBox[{"mCharm", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alphaS4", "[", "Q2_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"beta0aux4", "*", 
        RowBox[{"Log", "[", 
         RowBox[{"Q2", "/", 
          RowBox[{"mCharm", "^", "2"}]}], "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", "\[Pi]"}], ")"}], "/", "alphaCharm"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}]}], "*", 
    RowBox[{"(", 
     RowBox[{"4", "\[Pi]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaBottom", " ", "=", " ", 
   RowBox[{"alphaS4", "[", 
    RowBox[{"mBottom", "^", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alphaS5", "[", "Q2_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"beta0aux5", "*", 
         RowBox[{"Log", "[", 
          RowBox[{"Q2", "/", 
           RowBox[{"mBottom", "^", "2"}]}], "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"4", "\[Pi]"}], ")"}], "/", "alphaBottom"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}], "*", 
     RowBox[{"(", 
      RowBox[{"4", "\[Pi]"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "alphaS", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alphaS", "[", "Q2_", "]"}], " ", "=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"alphaS3", "[", "Q2", "]"}], ",", 
        RowBox[{"0", "\[LessEqual]", "Q2", "\[LessEqual]", 
         RowBox[{"mCharm", "^", "2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"alphaS4", "[", "Q2", "]"}], ",", 
        RowBox[{
         RowBox[{"mCharm", "^", "2"}], "\[LessEqual]", "Q2", "\[LessEqual]", 
         RowBox[{"mBottom", "^", "2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"alphaS5", "[", "Q2", "]"}], ",", 
        RowBox[{
         RowBox[{"mBottom", "^", "2"}], "\[LessEqual]", "Q2", "\[LessEqual]", 
         "\[Infinity]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.78298386502098*^9, 3.782983869316104*^9}, {
  3.7829839098486433`*^9, 3.7829839302191887`*^9}, {3.7829839892128277`*^9, 
  3.782984020750168*^9}, {3.782985077526594*^9, 3.782985138068412*^9}, {
  3.7829851835375957`*^9, 3.782985281191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"alphaS", "[", "Q2", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"Q2", ",", " ", 
     RowBox[{"Q0", "^", "2"}], ",", " ", 
     RowBox[{"Qfinal", "^", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7829842167551193`*^9, 3.782984269504341*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
AaQpdo8=
       "]]}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.1372337121532645},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{1000000000000000000, 10000000000000000000000}, {
     0.1372337121532645, 0.18664288544381022`}}, {{
     1000000000000000000, 1.*^22}, {0.1372337121532645, 
     0.18664288544381022`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.782984269934278*^9, 3.782985059390769*^9, {3.782985122899797*^9, 
   3.782985149039168*^9}, {3.782985264900732*^9, 3.7829852882785673`*^9}, 
   3.782986234129966*^9, 3.7830032684310102`*^9, 3.783004704200457*^9, 
   3.783086697250494*^9, 3.783253608783017*^9, 3.783422427224889*^9, 
   3.796401006915595*^9, 3.796401399158122*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"b3", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"33", "-", 
      RowBox[{"2", "*", "3"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"12", "\[Pi]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b4", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"33", "-", 
      RowBox[{"2", "*", "4"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"12", "\[Pi]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b5", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"33", "-", 
      RowBox[{"2", "*", "5"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"12", "\[Pi]"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.782984793152814*^9, 3.782984811005205*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Make", " ", "V_i", " ", "evolve", " ", "to", " ", "Q"}], " ", "=",
    " ", "mCharm"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.782984641980549*^9, 3.782984676898549*^9}, {
  3.782984848939302*^9, 3.7829848574966927`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinV1Ev1", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinV1", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alpha0", "/", 
       RowBox[{"alphaS3", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b3"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV2Ev1", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinV2", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alpha0", "/", 
       RowBox[{"alphaS3", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b3"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV3Ev1", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinV3", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alpha0", "/", 
       RowBox[{"alphaS3", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b3"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV4Ev1", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV5Ev1", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", "0"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.782984956502472*^9, 3.782984990944683*^9}, 
   3.78298533077083*^9, {3.782985371655117*^9, 3.7829854721631937`*^9}, {
   3.783423627317733*^9, 3.783423627436428*^9}, {3.78342373139077*^9, 
   3.783423731514677*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinV1mC", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinV1Ev1", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV2mC", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinV2Ev1", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV3mC", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinV3Ev1", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV4mC", "[", "j_", "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV5mC", "[", "j_", "]"}], " ", "=", " ", "0"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7829855402133837`*^9, 3.78298566642454*^9}, {
  3.783422561045682*^9, 3.783422562080106*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Make", " ", "V_i", " ", "evolve", " ", "to", " ", "Q"}], " ", "=",
    " ", "mBottom"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.782985678768209*^9, 3.782985689393217*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinV1Ev2", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinV1mC", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaCharm", "/", 
       RowBox[{"alphaS4", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b4"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV2Ev2", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinV2mC", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaCharm", "/", 
       RowBox[{"alphaS4", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b4"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV3Ev2", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinV3mC", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaCharm", "/", 
       RowBox[{"alphaS4", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b4"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV4Ev2", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV5Ev2", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", "0"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.782985731120906*^9, 3.782985795259768*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinV1mB", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinV1Ev2", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV2mB", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinV2Ev2", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV3mB", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinV3Ev2", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV4mB", "[", "j_", "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV5mB", "[", "j_", "]"}], " ", "=", " ", "0"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.782985936508731*^9, 3.782985970863577*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Make", " ", "V_i", " ", "evolve", " ", "to", " ", "Q"}], " ", "=",
    " ", "Qfinal"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7829860287873983`*^9, 3.782986031860445*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinV1Ev3", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinV1mB", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaBottom", "/", 
       RowBox[{"alphaS5", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b5"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV2Ev3", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinV2mB", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaBottom", "/", 
       RowBox[{"alphaS5", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b5"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV3Ev3", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinV3mB", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaBottom", "/", 
       RowBox[{"alphaS5", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b5"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV4Ev3", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV5Ev3", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", "0"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.782986060017194*^9, 3.782986138461192*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinV1f", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinV1Ev3", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV2f", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinV2Ev3", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV3f", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinV3Ev3", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV4f", "[", "j_", "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinV5f", "[", "j_", "]"}], " ", "=", " ", "0"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.782986290013541*^9, 3.782986336522492*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Calculate", " ", "inverse", " ", "Mellin", " ", "Transforms"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.782986569227878*^9, 3.782986581226035*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]", " ", "=", " ", 
   RowBox[{"3", "*", 
    RowBox[{"\[Pi]", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.78298660300721*^9, 3.782986603718946*^9}, {
  3.782986873920632*^9, 3.782986900018405*^9}, {3.782986948969281*^9, 
  3.7829869491103373`*^9}, {3.782987008032645*^9, 3.782987008141385*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "xV1f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xV1f", "[", 
    RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "c", "-", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
        "*", 
        RowBox[{"MellinV1f", "[", 
         RowBox[{"c", "+", 
          RowBox[{"z", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7829866554894457`*^9, 3.7829866989682417`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xV1f", "[", "x", "]"}], ",", 
     RowBox[{"xu", "[", "x", "]"}]}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.05", ",", "1", ",", " ", "0.2"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.782986788840446*^9, 3.782986811153167*^9}, {
  3.7829868614214478`*^9, 3.782986861544662*^9}, {3.782986933587772*^9, 
  3.782986933717725*^9}, {3.782987151761745*^9, 3.782987166616212*^9}, {
  3.7964012284888783`*^9, 3.7964012287060337`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.3903388904650229}, {0.05, 0}}, {{0.25, 
              0.37218388294928617`}, {0.25, 0}}, {{0.45, 
              0.15363287544141363`}, {0.45, 0}}, {{0.6500000000000001, 
              0.030790390035540835`}, {0.6500000000000001, 0}}, {{
              0.8500000000000001, 0.0011438098602939383`}, {
              0.8500000000000001, 0}}}, VertexColors -> None]}}}}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[{}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.012833333333333334`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.29068161333061326`}, {0.05, 0}}, {{0.25, 
              0.6580795368385975}, {0.25, 0}}, {{0.45, 0.560224254000824}, {
              0.45, 0}}, {{0.6500000000000001, 0.23894312189659095`}, {
              0.6500000000000001, 0}}, {{0.8500000000000001, 
              0.026850422889332846`}, {0.8500000000000001, 0}}}, VertexColors -> 
            None]}}}}}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {{}, Null, 
          
          PointBox[{{0.05, 0.3903388904650229}, {0.25, 
           0.37218388294928617`}, {0.45, 0.15363287544141363`}, {
           0.6500000000000001, 0.030790390035540835`}, {0.8500000000000001, 
           0.0011438098602939383`}}], {}}}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {{}, Null, 
          
          PointBox[{{0.05, 0.29068161333061326`}, {0.25, 
           0.6580795368385975}, {0.45, 0.560224254000824}, {
           0.6500000000000001, 0.23894312189659095`}, {0.8500000000000001, 
           0.026850422889332846`}}], {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0.05, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, 
     PlotRange -> {{0.05, 0.8500000000000001}, {0, 0.6580795368385975}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xV1f", "(", "x", ")"}], 
       RowBox[{"xu", "(", "x", ")"}]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.782986998293378*^9, 3.782987019499346*^9}, {
   3.782987161116067*^9, 3.7829871710418577`*^9}, 3.783003282020731*^9, 
   3.783004707916016*^9, 3.783086701223143*^9, {3.7964012213839684`*^9, 
   3.79640123549607*^9}, 3.7964014001925507`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "xV2f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xV2f", "[", 
    RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "c", "-", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
        "*", 
        RowBox[{"MellinV2f", "[", 
         RowBox[{"c", "+", 
          RowBox[{"z", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.782987110661037*^9, 3.782987119949513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xV2f", "[", "x", "]"}], ",", 
     RowBox[{"xd", "[", "x", "]"}]}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.05", ",", "1", ",", " ", "0.01"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.782987138335166*^9, 3.782987138487574*^9}, {
  3.782987214696006*^9, 3.782987214843684*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{1., -1.0871036508908505`*^-18}, {1., 0}}}, VertexColors -> 
            None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.19053249850610743`}, {0.05, 0}}, {{
              0.060000000000000005`, 0.19299858085201418`}, {
              0.060000000000000005`, 0}}, {{0.07, 0.19481903669755365`}, {
              0.07, 0}}, {{0.08, 0.19608812519686536`}, {0.08, 0}}, {{0.09, 
              0.19682270511064595`}, {0.09, 0}}, {{0.1, 
              0.19701417686419587`}, {0.1, 0}}, {{0.11, 
              0.19665051105939127`}, {0.11, 0}}, {{0.12000000000000001`, 
              0.19572528116564814`}, {0.12000000000000001`, 0}}, {{0.13, 
              0.19424079591767893`}, {0.13, 0}}, {{0.14, 
              0.19220850943694742`}, {0.14, 0}}, {{0.15000000000000002`, 
              0.18964822058804826`}, {0.15000000000000002`, 0}}, {{0.16, 
              0.18658678663535955`}, {0.16, 0}}, {{0.16999999999999998`, 
              0.18305671188403055`}, {0.16999999999999998`, 0}}, {{0.18, 
              0.1790947797670786}, {0.18, 0}}, {{0.19, 0.1747408074253341}, {
              0.19, 0}}, {{0.2, 0.17003655154108127`}, {0.2, 0}}, {{
              0.21000000000000002`, 0.16502476960425336`}, {
              0.21000000000000002`, 0}}, {{0.22000000000000003`, 
              0.159748428924147}, {0.22000000000000003`, 0}}, {{
              0.22999999999999998`, 0.1542500512239889}, {
              0.22999999999999998`, 0}}, {{0.24, 0.14857117806222972`}, {
              0.24, 0}}, {{0.25, 0.14275194140078332`}, {0.25, 0}}, {{0.26, 
              0.13683072630603363`}, {0.26, 0}}, {{0.27, 
              0.1308439115287514}, {0.27, 0}}, {{0.28, 
              0.12482567965130112`}, {0.28, 0}}, {{0.29, 
              0.11880788296435323`}, {0.29, 0}}, {{0.3, 
              0.11281995799805795`}, {0.3, 0}}, {{0.31, 0.1068888822058879}, {
              0.31, 0}}, {{0.32, 0.10103916563954667`}, {0.32, 0}}, {{0.33, 
              0.09529286807997553}, {0.33, 0}}, {{0.33999999999999997`, 
              0.08966964340848209}, {0.33999999999999997`, 0}}, {{0.35, 
              0.08418680122000678}, {0.35, 0}}, {{0.36, 
              0.07885938664773404}, {0.36, 0}}, {{0.37, 
              0.07370026851697345}, {0.37, 0}}, {{0.38, 
              0.06872024111310113}, {0.38, 0}}, {{0.39, 
              0.06392813058436102}, {0.39, 0}}, {{0.4, 0.05933090981631271}, {
              0.4, 0}}, {{0.41, 0.054933813453748745`}, {0.41, 0}}, {{0.42, 
              0.050740456880722234`}, {0.42, 0}}, {{0.43, 
              0.04675295614462659}, {0.43, 0}}, {{0.44, 
              0.04297204452796431}, {0.44, 0}}, {{0.45, 
              0.039397194408462954`}, {0.45, 0}}, {{0.46, 
              0.036026730266153835`}, {0.46, 0}}, {{0.47, 
              0.03285794241171428}, {0.47, 0}}, {{0.48, 
              0.029887196772387093`}, {0.48, 0}}, {{0.49, 
              0.02711004095361826}, {0.49, 0}}, {{0.5, 0.02452130620168202}, {
              0.5, 0}}, {{0.51, 0.022115204978622547`}, {0.51, 0}}, {{0.52, 
              0.019885423830488098`}, {0.52, 0}}, {{0.53, 
              0.017825211597143686`}, {0.53, 0}}, {{0.54, 
              0.015927462503919635`}, {0.54, 0}}, {{0.55, 
              0.014184794313323174`}, {0.55, 0}}, {{0.56, 
              0.012589621382243527`}, {0.56, 0}}, {{0.5700000000000001, 
              0.011134222631191258`}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.00981080444402254}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.008611558543148878}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.007528714908579702}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.006554589829653803}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.0056816291963111415`}, {
              0.6200000000000001, 0}}, {{0.63, 0.004902447152503376}, {
              0.63, 0}}, {{0.64, 0.004209860248178463}, {0.64, 0}}, {{0.65, 
              0.0035969172382226008`}, {0.65, 0}}, {{0.66, 
              0.003056924687296347}, {0.66, 0}}, {{0.67, 
              0.0025834685485220782`}, {0.67, 0}}, {{0.68, 
              0.002170431891810639}, {0.68, 0}}, {{0.6900000000000001, 
              0.0018120089642934675`}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 0.00150271577097266}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              0.0012373973684221419`}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 0.0010112320682451332`}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              0.0008197327495621106}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 0.0006587454859871618}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              0.0005244456836188585}, {0.7500000000000001, 0}}, {{0.76, 
              0.0004133319443503155}, {0.76, 0}}, {{0.77, 
              0.0003222178550411298}, {0.77, 0}}, {{0.78, 
              0.00024822191058615327`}, {0.78, 0}}, {{0.79, 
              0.00018875577674875598`}, {0.79, 0}}, {{0.8, 
              0.00014151109817373507`}, {0.8, 0}}, {{0.81, 
              0.00010444505591921554`}, {0.81, 0}}, {{0.8200000000000001, 
              0.00007576487737747168}, {0.8200000000000001, 0}}, {{
              0.8300000000000001, 0.000053911499600719626`}, {
              0.8300000000000001, 0}}, {{0.8400000000000001, 
              0.0000375425848163174}, {0.8400000000000001, 0}}, {{
              0.8500000000000001, 0.00002551508430566549}, {
              0.8500000000000001, 0}}, {{0.8600000000000001, 
              0.00001686754382597731}, {0.8600000000000001, 0}}, {{
              0.8700000000000001, 0.000010802340359572706`}, {
              0.8700000000000001, 0}}, {{0.8800000000000001, 
              6.668036158472415*^-6}, {0.8800000000000001, 0}}, {{0.89, 
              3.94203177901672*^-6}, {0.89, 0}}, {{0.9, 
              2.2136950239615886`*^-6}, {0.9, 0}}, {{0.91, 
              1.1681373612367836`*^-6}, {0.91, 0}}, {{0.92, 
              5.708033775037422*^-7}, {0.92, 0}}, {{0.93, 
              2.5303202293976163`*^-7}, {0.93, 0}}, {{0.9400000000000001, 
              9.874062970198953*^-8}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 3.2373675896615154`*^-8}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              8.247621182395908*^-9}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 1.4102238468913069`*^-9}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              1.1647800166726747`*^-10}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 1.6272208165687957`*^-12}, {
              0.9900000000000001, 0}}}, VertexColors -> None]}}}}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[{{{1., 0.}, {1., 0}}}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.18009034573866015`}, {0.05, 0}}, {{
              0.060000000000000005`, 0.18548467839891547`}, {
              0.060000000000000005`, 0}}, {{0.07, 0.19053188752736966`}, {
              0.07, 0}}, {{0.08, 0.19574564808039677`}, {0.08, 0}}, {{0.09, 
              0.20136619488490337`}, {0.09, 0}}, {{0.1, 
              0.20747203274537235`}, {0.1, 0}}, {{0.11, 
              0.21404448636220044`}, {0.11, 0}}, {{0.12000000000000001`, 
              0.2210070887010885}, {0.12000000000000001`, 0}}, {{0.13, 
              0.22825056302782704`}, {0.13, 0}}, {{0.14, 
              0.2356490923962635}, {0.14, 0}}, {{0.15000000000000002`, 
              0.2430710866679344}, {0.15000000000000002`, 0}}, {{0.16, 
              0.25038635167854695`}, {0.16, 0}}, {{0.16999999999999998`, 
              0.25747083936544773`}, {0.16999999999999998`, 0}}, {{0.18, 
              0.26420973479816934`}, {0.18, 0}}, {{0.19, 
              0.2704993797040637}, {0.19, 0}}, {{0.2, 0.27624837129393737`}, {
              0.2, 0}}, {{0.21000000000000002`, 0.28137807131897336`}, {
              0.21000000000000002`, 0}}, {{0.22000000000000003`, 
              0.2858226914249801}, {0.22000000000000003`, 0}}, {{
              0.22999999999999998`, 0.2895290741596744}, {
              0.22999999999999998`, 0}}, {{0.24, 0.29245625665647446`}, {
              0.24, 0}}, {{0.25, 0.29457488122925063`}, {0.25, 0}}, {{0.26, 
              0.2958665007866081}, {0.26, 0}}, {{0.27, 0.2963228151060421}, {
              0.27, 0}}, {{0.28, 0.2959448652656481}, {0.28, 0}}, {{0.29, 
              0.2947422070131803}, {0.29, 0}}, {{0.3, 0.29273207893983316`}, {
              0.3, 0}}, {{0.31, 0.2899385775869438}, {0.31, 0}}, {{0.32, 
              0.28639184874201656`}, {0.32, 0}}, {{0.33, 
              0.28212730195676855`}, {0.33, 0}}, {{0.33999999999999997`, 
              0.2771848535852984}, {0.33999999999999997`, 0}}, {{0.35, 
              0.27160820227832755`}, {0.35, 0}}, {{0.36, 
              0.26544413979339004`}, {0.36, 0}}, {{0.37, 
              0.25874189912618195`}, {0.37, 0}}, {{0.38, 
              0.2515525412863134}, {0.38, 0}}, {{0.39, 0.2439283814942806}, {
              0.39, 0}}, {{0.4, 0.23592245513716456`}, {0.4, 0}}, {{0.41, 
              0.22758802346638296`}, {0.41, 0}}, {{0.42, 
              0.21897811873466558`}, {0.42, 0}}, {{0.43, 
              0.21014512823792686`}, {0.43, 0}}, {{0.44, 
              0.20114041654032225`}, {0.44, 0}}, {{0.45, 
              0.19201398500915312`}, {0.45, 0}}, {{0.46, 
              0.18281416766379074`}, {0.46, 0}}, {{0.47, 
              0.1735873622440929}, {0.47, 0}}, {{0.48, 
              0.16437779532462268`}, {0.48, 0}}, {{0.49, 
              0.1552273202378871}, {0.49, 0}}, {{0.5, 0.1461752465199971}, {
              0.5, 0}}, {{0.51, 0.13725819955332708`}, {0.51, 0}}, {{0.52, 
              0.1285100090510614}, {0.52, 0}}, {{0.53, 
              0.11996162500643197`}, {0.53, 0}}, {{0.54, 
              0.11164105971370922`}, {0.54, 0}}, {{0.55, 
              0.10357335445759076`}, {0.55, 0}}, {{0.56, 
              0.09578056946166401}, {0.56, 0}}, {{0.5700000000000001, 
              0.08828179568440406}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.08109318705211573}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.0742280117218465}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.06769672097318495}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.06150703433567687}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.05566403956805696}, {
              0.6200000000000001, 0}}, {{0.63, 0.05017030611638233}, {
              0.63, 0}}, {{0.64, 0.045026010690263865`}, {0.64, 0}}, {{0.65, 
              0.04022907360957614}, {0.65, 0}}, {{0.66, 
              0.03577530458814872}, {0.66, 0}}, {{0.67, 
              0.031658556635906686`}, {0.67, 0}}, {{0.68, 
              0.02787088677665014}, {0.68, 0}}, {{0.6900000000000001, 
              0.02440272229508309}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 0.02124303124377612}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              0.018379495958447747`}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 0.015798688348262133`}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              0.013486245746766469`}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 0.011427046128645365`}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              0.009605381517678653}, {0.7500000000000001, 0}}, {{0.76, 
              0.008005128432197684}, {0.76, 0}}, {{0.77, 
              0.0066099142360008896`}, {0.77, 0}}, {{0.78, 
              0.005403278285189056}, {0.78, 0}}, {{0.79, 
              0.004368826784809265}, {0.79, 0}}, {{0.8, 
              0.003490380293674693}, {0.8, 0}}, {{0.81, 
              0.00275211284140056}, {0.81, 0}}, {{0.8200000000000001, 
              0.0021386816487472555`}, {0.8200000000000001, 0}}, {{
              0.8300000000000001, 0.0016353464710122919`}, {
              0.8300000000000001, 0}}, {{0.8400000000000001, 
              0.0012280776147408337`}, {0.8400000000000001, 0}}, {{
              0.8500000000000001, 0.0009036517107756624}, {
              0.8500000000000001, 0}}, {{0.8600000000000001, 
              0.0006497343620779906}, {0.8600000000000001, 0}}, {{
              0.8700000000000001, 0.0004549488233774185}, {
              0.8700000000000001, 0}}, {{0.8800000000000001, 
              0.00030892991227378526`}, {0.8800000000000001, 0}}, {{0.89, 
              0.00020236239886506965`}, {0.89, 0}}, {{0.9, 
              0.00012700317458843522`}, {0.9, 0}}, {{0.91, 
              0.00007568656248571464}, {0.91, 0}}, {{0.92, 
              0.000042312203006371564`}, {0.92, 0}}, {{0.93, 
              0.00002181503532704815}, {0.93, 0}}, {{0.9400000000000001, 
              0.000010116999411398409`}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 4.0602172122425655`*^-6}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              1.3215868420897966`*^-6}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 3.0896698503863684`*^-7}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              3.949161084256757*^-8}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 1.1554893810026288`*^-9}, {
              0.9900000000000001, 0}}}, VertexColors -> None]}}}}}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJw1lAlMFGccxVctaUQltoutgnjVikewWKBtOOZ5UqiNIBhbuWQRRLdVAaGL
YI2AgiAU8ODSEgriSRcQULAILteywFoEga1cOxzLcsNGbESqZb/5/CeTSSaZ
9/3f+72Z1V4nnHzm8ng8z9lLe09L1c4dKPa/9PM4VIuSFeeH9xaLYRIl8jMp
rMXI3uLZJ/kwicmIej5ei1B98bdsSCEmDh4TCpfJoNuW5Wej+xD5j6XnTm+R
gdMrwfcnbQoqvpZhg1t8xdT6Ugg0XQsVm2RUvwyFf8pvRy6S4cbs221ZT/Dm
9Zx+tuP9eRL8UKTTZp9WC3Mz7VRiRf3VK96278+vwozI6ii/R4pZ8dkTquEl
Ovbu8HEp3UeK7ZP/qS6P1MBJK7e3Fpfir65Ru9fQ/WTQM3n3WlJZjZ4QrWAd
dotsDC6srMZGsm8DlkSqNZkBVSDr+cnRqy78SlRWCSJX/BQ/qU4eFHxQCR6Z
RliwSv79XRXUTyNCt9s734uQwI7VHvAM30gD7M6UP6H+nqEuW37o8styxBMD
TbgnaY3YIiwDsWvWjLjFE/IqthTETlszDrgIOj9y/4v6f44I0Xx1QWcJVmrX
WdGCR3qaD418imkeLXA27nmd9PIBDpNpxfy7bz/fGVdE82nDb6LMV6tMC6FV
0xe34cuMGSedrvs0LwWe/my872ZyPl5p5aYUqD9trJfinkfz+wd7Vl+bTvcU
g8Rj8wIqTaDablUOiF32BXJ0ayxuTd8BWe98Oza37ujlTdyifeiA3nXpxeO8
m5A3aKcDKQ/4oV2bbsCfCHbiVHVs8NKATBC7+l0o0qxNkTRl0Py7ID/V3FSe
lg4i59aN8xrjRaUV1ygPJaBTxTNankr9KHHnSridR3YS5aNE9lm+ucLtCvWn
xGfhwoLqrZcoLxZhBluH7B0SqF8WecojnUML4yg/FnXJCs+k2mgwxH8PYsei
F8fII5FAAPTAzVHJ5n56jvarB1sfhTaNZ4bRPveCMZinc7z1DCJJPr1wMHR0
mFGEQEHw9MK0z7MkfZeI5tUHiWRBVpJ+IOXfB2+Nl8SV8af59SHLVWNtJzpG
+9CPdx6dky26R2me/Wh/m2k0usEHlaQf/egaqysvkQqwhOSrgjUv+G+jPHf4
kr6oMOXYXq1I/5F+rypUXs/bo2O7DwtIfwYQkeyyUZjoCHeS/wDCpwdyhB3f
IZf0aQCWTP36qau7MIfwUOOmQ1aUxxfbKA81gmomN8d/YkV5qJEdtHvdsJEF
5aEG6zA1E7zTlPIYhNXDvJrkx+spj0GUnpXznWPXUB6DWJwu8zEVGFIeQ5i2
/l18poNPeQwhzjtQh92xkPIYgjB7vzcrnkd5DMPXaQFjLJlmOB7DyHdeJlPk
TjIcj2HcNbvh8sstFcP9H0YQ7prWVP5vO8PxGMELNPiXXGhkOB4jYM1uF3Un
VjAcj1G4RMdeX55awHA8RmFoL1VtMM5iOB6jWOeqd03vTQLD8RiDj2J1lG9Y
CMPxGENMxZEgX4GA4XiMgW8X/KvJg20Mx2Mcc2cU/ZaWSxmOxzhOrO1ONJ+r
tOF4jENsa9t9IOO0Dfd9TEDwx8c5BYvMS/8H66D5RQ==
           "]], {}}}}, {{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJw1lAtQlFUcxVdwIJ4lkPJKYJRMhdTACJ3dU5pkiAa0DOqgJQQSmAiawRJj
gywQoDzUckkJgShHgSERUJGnvOS1+4EsICz7YHntAo4KWKHE3r3+Z3a+mW9m
z/2f8zv3cwiM8A3WYbFYXy/9NM9sgWauo2gqz9vFpBl3VvNVPpXFsH8m/GTu
fjPUPpVLb0ox4K7wPhDUgliL4s9kvDL8Ex0ev8W0FYbi/BNswwq085rMDje1
Qqt3B2bTVecizz/E+oD0+tn3qnDAM9SzK7iN6lcjSG7+aPbzdhQs/VucXwtJ
Xc0Zb7cOel4dajx+GaxZ3wlXF800wL9R9eZz2y56/gPsrn4ew9UTYkl86YRG
XFWUvAjhCek+zehJS3/aNS6Er0bOpwWmZQevDX4hovu1Inx+RaFJsQhynkbw
Ifyskjda6TDYQPZtR/ei/g6VJwOy3okOGERtfl6QxIDIVXbi79DTUdkVDFhk
hFBmeWR7DzDUjxAnV7gZ82YY7JZpDhBhn/XC/LM5hvoTIc8o4l79EwbpxACD
rN75MNMhBsSuSzeG9gdy7aoYEDvibkSEO/588DxD/fdgq74xj8NlYKdZZ/Uj
fJvXceMrU4bm8Qjv2HikBN8XIYRML/pXJh3WDxTRfMRwnO0JM3gphEbNolgM
Dr/8/W3pr/PqQ7/72Z4IKyHmNHKzffBtTMkycu+i+fVjVVD2q7IPOkHiYQ9g
s3q4PNuhA8SubADX8j8WxOi3g6zHf4y1hgJrg9HXfRjEd8pomxfVreho18wg
hJdeGU9eaEEkERzCvZ3FQadCmkHsWkjg4KTys/2oieYvwYWOcwquYSOIXMAw
Qt+YWRMnaaA8pNgjKxBLbtdTP1L8xbbcXpRZR/lIMZBjuGr5yVrqTwpFjLNl
5+1qykuGHd8HOMVfrKJ+ZZDJHVJazt6l/GSAzfG95vxKcIh/ORKf7qnLE5Qj
gwCQw9HNZ5JfX0b7JYfR0MPA31i3aJ8V0P0yNz6LW4pEko8CfptHBP1xJegj
eBSoslu+ffHMTZrXCEJWsuzVJdcp/xGk/P7gw0KTP2l+IwhvZFWMXS6gfVAi
qy1cb61PHs1TifzMZnna1lw0kH4oURE+lLYp5QreJvmOgsdteKH38jKOkr6M
4se53tJ7tZfofR1F2eh2S3MmC0akP2NYWGWtn+ycgUMk/zG4Th7bWZSTihLS
pzEczvXa+NbRJCwjPMaR4DUcu3DjLOUxjm1+ye+++uYnymMcqQGZ/otmsZTH
OBLbw6JrHE5THhPAlmwdY2Uk5TEBf+eWwse/HqM8JsD2rOcKUkMoj0kkWFyd
X8M/QnlM4lS8xdiatoOUxyR+0N3nNb2aS3moIE2/u+vIlb2UhwrzywxUhzx3
UR4qsG7t92kSsun3QQ3buHLJfxxXykMNqfe6xnWJGygPNaxVUXMJf9hTHlPI
HDPnsMXmlMcUHAJy3I036VEeU5DOGwinhuc4Wh7TsMgo7+K7KTlaHtP4NNhb
J1dfxNHymAbPSWDl5FTO0fKYQZLjzY26VRc5Wh4zMFPXJJW4BHO0PGZw/F91
oLLfnKO9H0/oPWGx/gdBFew5
           "]], {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0.05, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, 
     PlotRange -> {{0.05, 1.}, {-1.0871036508908505`*^-18, 
      0.2963228151060421}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xV2f", "(", "x", ")"}], 
       RowBox[{"xd", "(", "x", ")"}]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.782987221324779*^9, 3.7830032951154003`*^9, 
  3.783004711902483*^9, 3.783086705132999*^9, 3.7964014048246107`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "xV3f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xV3f", "[", 
    RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "c", "-", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
        "*", 
        RowBox[{"MellinV3f", "[", 
         RowBox[{"c", "+", 
          RowBox[{"z", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7829872641252403`*^9, 3.782987272129915*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xV3f", "[", "x", "]"}], ",", 
     RowBox[{"xsminus", "[", "x", "]"}]}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.05", ",", "1", ",", " ", "0.01"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.782987269336933*^9, 3.782987293644198*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.9900000000000001, -2.635630664018277*^-22}, {
              0.9900000000000001, 0}}, {{1., -3.854708583539218*^-22}, {
              1., 0}}}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.007906415544088592}, {0.05, 0}}, {{
              0.060000000000000005`, 0.008032721390229513}, {
              0.060000000000000005`, 0}}, {{0.07, 0.007932371822522597}, {
              0.07, 0}}, {{0.08, 0.007677298665804533}, {0.08, 0}}, {{0.09, 
              0.007319309652096312}, {0.09, 0}}, {{0.1, 
              0.006896223010185292}, {0.1, 0}}, {{0.11, 
              0.006435815704810081}, {0.11, 0}}, {{0.12000000000000001`, 
              0.005958492305224001}, {0.12000000000000001`, 0}}, {{0.13, 
              0.005479157140801806}, {0.13, 0}}, {{0.14, 
              0.005008565495118894}, {0.14, 0}}, {{0.15000000000000002`, 
              0.0045543205961673695`}, {0.15000000000000002`, 0}}, {{0.16, 
              0.00412162204303672}, {0.16, 0}}, {{0.16999999999999998`, 
              0.0037138352244758034`}, {0.16999999999999998`, 0}}, {{0.18, 
              0.003332929035462681}, {0.18, 0}}, {{0.19, 
              0.002979814965940519}, {0.19, 0}}, {{0.2, 
              0.002654611236310597}, {0.2, 0}}, {{0.21000000000000002`, 
              0.0023568492744759015`}, {0.21000000000000002`, 0}}, {{
              0.22000000000000003`, 0.002085635391113509}, {
              0.22000000000000003`, 0}}, {{0.22999999999999998`, 
              0.0018397773573939156`}, {0.22999999999999998`, 0}}, {{0.24, 
              0.0016178833064222173`}, {0.24, 0}}, {{0.25, 
              0.0014184386989649733`}, {0.25, 0}}, {{0.26, 
              0.0012398658378020646`}, {0.26, 0}}, {{0.27, 
              0.001080569463498754}, {0.27, 0}}, {{0.28, 
              0.0009389712349366318}, {0.28, 0}}, {{0.29, 
              0.0008135353327162647}, {0.29, 0}}, {{0.3, 
              0.0007027869813588891}, {0.3, 0}}, {{0.31, 
              0.0006053253373367058}, {0.31, 0}}, {{0.32, 
              0.0005198319125700893}, {0.32, 0}}, {{0.33, 
              0.0004450754810005702}, {0.33, 0}}, {{0.33999999999999997`, 
              0.0003799142370757654}, {0.33999999999999997`, 0}}, {{0.35, 
              0.00032329583025398354`}, {0.35, 0}}, {{0.36, 
              0.00027425578232480807`}, {0.36, 0}}, {{0.37, 
              0.00023191469725473778`}, {0.37, 0}}, {{0.38, 
              0.00019547459682531902`}, {0.38, 0}}, {{0.39, 
              0.0001642146485596332}, {0.39, 0}}, {{0.4, 
              0.00013748650046542602`}, {0.4, 0}}, {{0.41, 
              0.00011470939401482087`}, {0.41, 0}}, {{0.42, 
              0.00009536518988052293}, {0.42, 0}}, {{0.43, 
              0.0000789934119439028}, {0.43, 0}}, {{0.44, 
              0.00006518639060832988}, {0.44, 0}}, {{0.45, 
              0.000053584566495809545`}, {0.45, 0}}, {{0.46, 
              0.00004387199909026188}, {0.46, 0}}, {{0.47, 
              0.0000357721125317724}, {0.47, 0}}, {{0.48, 
              0.000029043697304718232`}, {0.48, 0}}, {{0.49, 
              0.000023477181633577843`}, {0.49, 0}}, {{0.5, 
              0.000018891176146457554`}, {0.5, 0}}, {{0.51, 
              0.000015129291458993295`}, {0.51, 0}}, {{0.52, 
              0.000012057223566159294`}, {0.52, 0}}, {{0.53, 
              9.560098666335988*^-6}, {0.53, 0}}, {{0.54, 
              7.540066568444028*^-6}, {0.54, 0}}, {{0.55, 
              5.914130071115766*^-6}, {0.55, 0}}, {{0.56, 
              4.61219635715403*^-6}, {0.56, 0}}, {{0.5700000000000001, 
              3.575336193503987*^-6}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 2.7542353994098733`*^-6}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              2.1078242091146895`*^-6}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 1.6020693802921488`*^-6}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              1.208914772263502*^-6}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 9.05356514691037*^-7}, {
              0.6200000000000001, 0}}, {{0.63, 6.726395503145332*^-7}, {
              0.63, 0}}, {{0.64, 4.95563059937373*^-7}, {0.64, 0}}, {{0.65, 
              3.618830537054891*^-7}, {0.65, 0}}, {{0.66, 
              2.618012245439106*^-7}, {0.66, 0}}, {{0.67, 
              1.8752997458590214`*^-7}, {0.67, 0}}, {{0.68, 
              1.329243505927561*^-7}, {0.68, 0}}, {{0.6900000000000001, 
              9.31724266538264*^-8}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 6.453645617996511*^-8}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              4.413786718879022*^-8}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 2.9779890899810168`*^-8}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              1.980228943640016*^-8}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 1.2963281137306964`*^-8}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              8.344349875833461*^-9}, {0.7500000000000001, 0}}, {{0.76, 
              5.274167058850836*^-9}, {0.76, 0}}, {{0.77, 
              3.2683515961992224`*^-9}, {0.77, 0}}, {{0.78, 
              1.982244711160131*^-9}, {0.78, 0}}, {{0.79, 
              1.1742841401495394`*^-9}, {0.79, 0}}, {{0.8, 
              6.779276538553674*^-10}, {0.8, 0}}, {{0.81, 
              3.804008095243925*^-10}, {0.81, 0}}, {{0.8200000000000001, 
              2.068306614118301*^-10}, {0.8200000000000001, 0}}, {{
              0.8300000000000001, 1.0857815563304854`*^-10}, {
              0.8300000000000001, 0}}, {{0.8400000000000001, 
              5.479971795269826*^-11}, {0.8400000000000001, 0}}, {{
              0.8500000000000001, 2.6455679367355064`*^-11}, {
              0.8500000000000001, 0}}, {{0.8600000000000001, 
              1.2142382400501761`*^-11}, {0.8600000000000001, 0}}, {{
              0.8700000000000001, 5.2587267152391434`*^-12}, {
              0.8700000000000001, 0}}, {{0.8800000000000001, 
              2.1291879438569046`*^-12}, {0.8800000000000001, 0}}, {{0.89, 
              7.965516088007991*^-13}, {0.89, 0}}, {{0.9, 
              2.7122627994913517`*^-13}, {0.9, 0}}, {{0.91, 
              8.240320048985608*^-14}, {0.91, 0}}, {{0.92, 
              2.1745604550160583`*^-14}, {0.92, 0}}, {{0.93, 
              4.7999762162757295`*^-15}, {0.93, 0}}, {{0.9400000000000001, 
              8.386187215635426*^-16}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 1.0645530580136315`*^-16}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              8.506863691494845*^-18}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 3.267444784036085*^-19}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              3.1027244500291083`*^-21}, {0.9800000000000001, 0}}}, 
            VertexColors -> None]}}}}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[{{{1., 0.}, {1., 0}}}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.0069884257648897595`}, {0.05, 0}}, {{
              0.060000000000000005`, 0.008495405158920548}, {
              0.060000000000000005`, 0}}, {{0.07, 0.009691787709720427}, {
              0.07, 0}}, {{0.08, 0.010600345466302473`}, {0.08, 0}}, {{0.09, 
              0.01124887544605072}, {0.09, 0}}, {{0.1, 
              0.011666958772166015`}, {0.1, 0}}, {{0.11, 
              0.01188412192466379}, {0.11, 0}}, {{0.12000000000000001`, 
              0.011928769597060953`}, {0.12000000000000001`, 0}}, {{0.13, 
              0.01182757185135746}, {0.13, 0}}, {{0.14, 
              0.011605131719702746`}, {0.14, 0}}, {{0.15000000000000002`, 
              0.011283831521070471`}, {0.15000000000000002`, 0}}, {{0.16, 
              0.010883795204372894`}, {0.16, 0}}, {{0.16999999999999998`, 
              0.010422926479594407`}, {0.16999999999999998`, 0}}, {{0.18, 
              0.009916996068646261}, {0.18, 0}}, {{0.19, 
              0.009379759960639845}, {0.19, 0}}, {{0.2, 
              0.008823096140660345}, {0.2, 0}}, {{0.21000000000000002`, 
              0.00825715101764295}, {0.21000000000000002`, 0}}, {{
              0.22000000000000003`, 0.007690489368302317}, {
              0.22000000000000003`, 0}}, {{0.22999999999999998`, 
              0.007130243439757032}, {0.22999999999999998`, 0}}, {{0.24, 
              0.006582258162394191}, {0.24, 0}}, {{0.25, 
              0.0060512303762535625`}, {0.25, 0}}, {{0.26, 
              0.005540840673869221}, {0.26, 0}}, {{0.27, 
              0.005053876980931984}, {0.27, 0}}, {{0.28, 
              0.004592349382119923}, {0.28, 0}}, {{0.29, 
              0.004157595987248444}, {0.29, 0}}, {{0.3, 
              0.003750379847007232}, {0.3, 0}}, {{0.31, 
              0.003370977085771471}, {0.31, 0}}, {{0.32, 
              0.003019256534418415}, {0.32, 0}}, {{0.33, 
              0.002694751228552914}, {0.33, 0}}, {{0.33999999999999997`, 
              0.002396722194466593}, {0.33999999999999997`, 0}}, {{0.35, 
              0.0021242149822026197`}, {0.35, 0}}, {{0.36, 
              0.0018761094266608832`}, {0.36, 0}}, {{0.37, 
              0.0016511631271809279`}, {0.37, 0}}, {{0.38, 
              0.0014480491361761785`}, {0.38, 0}}, {{0.39, 
              0.0012653883402962}, {0.39, 0}}, {{0.4, 
              0.0011017770049653564`}, {0.4, 0}}, {{0.41, 
              0.0009558099363492464}, {0.41, 0}}, {{0.42, 
              0.0008260996949316139}, {0.42, 0}}, {{0.43, 
              0.0007112922728296704}, {0.43, 0}}, {{0.44, 
              0.000610079623451052}, {0.44, 0}}, {{0.45, 
              0.0005212094076810703}, {0.45, 0}}, {{0.46, 
              0.00044349229595350744`}, {0.46, 0}}, {{0.47, 
              0.00037580714068086754`}, {0.47, 0}}, {{0.48, 
              0.00031710430890531264`}, {0.48, 0}}, {{0.49, 
              0.0002664074409228289}, {0.49, 0}}, {{0.5, 
              0.000222813877223112}, {0.5, 0}}, {{0.51, 
              0.00018549397352658027`}, {0.51, 0}}, {{0.52, 
              0.00015368950210291736`}, {0.52, 0}}, {{0.53, 
              0.0001267113170081517}, {0.53, 0}}, {{0.54, 
              0.00010393644144029688`}, {0.54, 0}}, {{0.55, 
              0.00008480471712693044}, {0.55, 0}}, {{0.56, 
              0.00006881513854425888}, {0.56, 0}}, {{0.5700000000000001, 
              0.00005552197883393559}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.00004453079952657164}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.000035494422584580965`}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.00002810893081818311}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.000022109751376368728`}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.0000172678667328585}, {
              0.6200000000000001, 0}}, {{0.63, 0.000013386188334232965`}, {
              0.63, 0}}, {{0.64, 0.000010296119808338014`}, {0.64, 0}}, {{
              0.65, 7.854329297654843*^-6}, {0.65, 0}}, {{0.66, 
              5.939744034178981*^-6}, {0.66, 0}}, {{0.67, 
              4.450774657484707*^-6}, {0.67, 0}}, {{0.68, 
              3.3027719429920196`*^-6}, {0.68, 0}}, {{0.6900000000000001, 
              2.425714499382239*^-6}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 1.7621225588691415`*^-6}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              1.2651901681294136`*^-6}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 8.971258382323225*^-7}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              6.276899768902374*^-7}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 4.329161549576709*^-7}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              2.9400240192678257`*^-7}, {0.7500000000000001, 0}}, {{0.76, 
              1.9635823441463554`*^-7}, {0.76, 0}}, {{0.77, 
              1.2879295133513138`*^-7}, {0.77, 0}}, {{0.78, 
              8.283083559569513*^-8}, {0.78, 0}}, {{0.79, 
              5.213924287609442*^-8}, {0.79, 0}}, {{0.8, 
              3.205609370421539*^-8}, {0.8, 0}}, {{0.81, 
              1.9203978370762683`*^-8}, {0.81, 0}}, {{0.8200000000000001, 
              1.1178900406763236`*^-8}, {0.8200000000000001, 0}}, {{
              0.8300000000000001, 6.302591105555926*^-9}, {
              0.8300000000000001, 0}}, {{0.8400000000000001, 
              3.4282952293914745`*^-9}, {0.8400000000000001, 0}}, {{
              0.8500000000000001, 1.7909295826364177`*^-9}, {
              0.8500000000000001, 0}}, {{0.8600000000000001, 
              8.93527241799969*^-10}, {0.8600000000000001, 0}}, {{
              0.8700000000000001, 4.2287932030070457`*^-10}, {
              0.8700000000000001, 0}}, {{0.8800000000000001, 
              1.8825437457640166`*^-10}, {0.8800000000000001, 0}}, {{0.89, 
              7.799684410812229*^-11}, {0.89, 0}}, {{0.9, 
              2.966692664917398*^-11}, {0.9, 0}}, {{0.91, 
              1.0174418107570063`*^-11}, {0.91, 0}}, {{0.92, 
              3.07039108457911*^-12}, {0.92, 0}}, {{0.93, 
              7.878993732043857*^-13}, {0.93, 0}}, {{0.9400000000000001, 
              1.6352534071906322`*^-13}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 2.5398445049837856`*^-14}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              2.591965783841012*^-15}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 1.3618136026623314`*^-16}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              2.1303221513789874`*^-18}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 1.728709722188922*^-21}, {
              0.9900000000000001, 0}}}, VertexColors -> None]}}}}}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJwtlAlMVFcUhkeUYoXGKoMgrSyCiSISqRakzLt/lVKxhr2miCC4AaagDIuF
ARWokmoFBWIVIxSlYZF2UERlqdaFgrZAAR0GEIGBYR8WUYhDC5S5953k5eW9
5P3n/P937jPff9TrkJZAIAicvzT3K5maKoR8cbI5Z5uAcpPTw55lUniP786K
jkyAyrNs/s0tnMyLVrWQBMQJpdsVklK47lu63jHiJJbIc8O5Jffw2V4/h7bp
42B65fCaultlh3is8zv/eHLt7+i4dMVU7Cfh9R+gpmx35mhwDH6Z/1qe+xAh
GUW6HuJjfL9H2FCtfaH9+yhs3qSpJ7C8tdUsJT+C71+FTzpWnpApwjEvPt/h
T7imZRtLQo/w89RA/+C1vALXb+GlkfN8ipOno6dND4fw8z1D54+2qaZ/HEK3
RCP4FzZGVTcWuR2AFZ23Fu9nSNRKg32g44XXocCd9F603AsqV1aPDeMT75SJ
vhDQaoCN1e23ftw3vJ8GrBneXx/g8TVcFJoGjSi1OJojKvXk/TWiWSEJKKxy
w3lqoAnZdVNNYQVfgdrd9BwvnEfOBetsB7Ujf44Pr55wapY58f5fIH2pzQ83
Fm+FqWYcExkum2ReN1vP8XnIkDWxxaG/dwuCaDUj5GDGogUbP+XzkcM3Ny8L
alto1IRSOe46pwmrDtnwebXgTfsOwZKf12FKIzfZglUPDAzNk9fw+bXCZHmr
rov2atB4uDZUbrPYv2i5CahdRRvOJl2Pb50zAh3v9Es4NNXGrb0j5PehHbu8
nxVeXLEMdbWaaodtUWTxnKEexFTwFWIjlx0OEuiA2hV2gFgfCfv8kRaffwfS
Z4Kke6JmCZXz60TdTaPcj7LfEcajC03V/veX/vOGMD9dsNi8+r/YijHC+HRh
4R73jdY7Bgnz14W5IunbM3pKwngpsFJ99J5BTidhfhVImVlQgvoWwvgpoH6Y
onDzeU4I9d+NGPe+l+qZOnKBAuhG+tNI1a/GNYTtVzemWg2yTkkfEbbPPags
ThyUdVWQZJpPD27a722FSylpoXh6IA6q1nkbKCUsLyXONZ9aOJqWRxh/Jey9
km615eQQlp8SPx2LSjDecZmwfejFGmfvqTtpaYTlOf/sKFsZt/4MeUL3oxdD
ln1viDyRGNB8+/Akc7LwsVYsCab70oe6OYHPoJeYsPPah9bOCEunkmCiS/en
HxkTomSZOoD40/z7MV7ixtk57SLFdJ/64Vv+d05u806ygPIYwN0To3Lf4a08
jwH4X23Q08q343kMIEz9b6CNvjXPYwARMX5pAh1znscgfLJDg1OthTyPQexy
2e2/aqcOz2MQZ/OLXgstpznGYwjppnemN4epOMZjCLPenFVSyyuO8RiC2Re2
QwFm9RzjMYzU1xevXF1xn2M8hiG9Zl2ecvsGx3gMw+M7SU2t2SWO/R9U8A+S
uiRWJHGMhwrilyGTJe+FcoyHClgdJp428OYYjxEELtN/WG1rzzEeI7D40j3k
QZwRx3iMYLlzs2o2a1LEeIwitiI/RmlXL2I8RhHW5dy5sDhbxHiMwifVovdC
1gER4zEG7aAjPjofG4kYjzFIk0YOj7j+5sh4jGFbgpfhB0ORlex8jKMofkpk
aHa88n8LaN+8
           "]], {}}}}, {{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJw1lAtMU1ccxiu+cSCvaSbMQRTE8VADOJXe8ynoQJkiYIQxHIpbZeOhiGOI
M/MFRUQhokNBHspWA2N1FR2tOkUpQZxuCrIWkApIKYWChgnzQXX0nrN/0tzk
Jv3O//t+37lOMdtDvzQTCASbx36mZ8Fp05RDK65boS35DorZ6f0hcilGffJf
TRXthyFEPvZGhu2LJl1Z3XIQe+ykAZ1pl+A+pznw3OV0mKvKdnDm1ciT+e2X
TBWD6imgE45cVHeLMT8q59aw6zXICqzUVRszmf512AtjIx0SM/Hj2L9VZTUo
2hreaLE0k513E7F7ir5KVIrh7WWaWnzk17rslb2Yna9EQFilP1mTgTHxsRPq
oHDWHCiK+H+fehil66VRwYcQapILuY15dV42F30Osv0a8NbJ2KeyPoCuNJPg
HUQWnn3HUb8PH/L73oVtve9Eq33fg19vxz3IPD1dCrz3gpeT/4muxeWpb4fT
IODnPo5XWjW4N6QyP/fxm3vDzDeyFAR2mg54gDPOxXXRVbuYvwf4erFYlPDX
TuTwBhoxf5HC/djkJPB2vZrgkRPU8r4iEbwdVRNuXlZnJRfFMf8PEVcUaaa6
GosPTOvMboYnkWevtRWxPJohq3RLXHNuK0T8/I0Ze2cJ74m2sHxU6BOIXF9e
+xwmNTupCvIF8b1pFp+xvNRoWnmp/5giHCMmuWE1blQlx8Rf3cDya0ESN81i
oUUo+Hi4Vmja0nz6QoLB2+1shUf9nB+arIPAr5fehmunozJq1gWwPjyCwX9g
vNzoj3t3TfMICi9H6RK7FWO6JsF2JGqW9eZaceDt2mmQoH61+W3pEpa/BtUv
2s453vYGLxf1GLs/mYi8bxYxHh3YGV159gtvD+anA0Py7Pec17syPh046elX
NzJ3LvPXAQ+ZyqAodGS8OuG04Py3lrBnfjtROWn1kLPvDMavE9rwUVt7cxsQ
3n8XVspOV0xxsEAuD6AL8QuNxY0Rk1m/uuDW1GjzutCM9fkJko6mTNi+20gy
+HyeIFxTeMR8wb9EzeN5gusn5ynX2Q8Rmlc3Rg1e1edtDITy70ZLTOzghXwt
ofl1QxF26O6t1A5C+6DFxQnxsTV6NaF5auHW7F/yuqKR1PL90MLB2G4rufQH
eZfPtwdhXg4Sz0+VZBvflx7Aegnxy/2d0Pvag1a1/dp/ll4m0/j+6FCcoz6x
fJaUbOLz1+FG+/K2+9N/Ihf4PungVnA4JsmiiIzjefRC0P5MaLiSRyiPXrw5
+3PQg8gsQnn0wnNyY/2a1fsJ5dGLOw9DU2cKUwjloYf4cF76iDGOUB56JOSG
im/6bCGUhx4PSzeqbhRvIJRHHz7OkGyqGBdIKI8+SBJWXaiz9iWURx+2xdaW
9ez0IJRHP5TV/sn5ytmMRz/sXpqlZVdZMh790Mctc4mebuTo98GAl87Hy888
1nOUhwFHk3f5Zu1o5igPAzS6yl8QXMNRHgNwvN3m8Wu0hKM8BmA2FPFcN+4I
R3kMQFM86qeUx3GUxyDMAywtS8YHcJTHIFqwJ6XglANHeQxiyonnWRUROiHl
8RSiYZeT3qVlQsrjKTJPvVDYSfyFlMdTBO8r3lsbVupL78czdk8Egv8A3JXc
3A==
           "]], {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0.05, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, 
     PlotRange -> {{0.05, 1.}, {-3.854708583539218*^-22, 
      0.011928769597060953`}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xV3f", "(", "x", ")"}], 
       RowBox[{"xsminus", "(", "x", ")"}]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7829872801358967`*^9, 3.7829872997405033`*^9}, 
   3.783003306106678*^9, 3.7830047180908947`*^9, 3.7830867116969147`*^9, 
   3.796401410467072*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Procedure", " ", "with", " ", "T_i"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783001261023756*^9, 3.7830012613226843`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mellin", " ", "transforms"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MellinT3", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}]}], "*", 
        RowBox[{"T3", "[", "x", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"j", ">", "1"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinT8", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}]}], "*", 
        RowBox[{"T8", "[", "x", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"j", ">", "2"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinT15", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}]}], "*", 
        RowBox[{"T15", "[", "x", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"j", ">", "2"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinT24", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}]}], "*", 
        RowBox[{"T24", "[", "x", "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"j", ">", "2"}], "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.78300142028778*^9, 3.783001496950412*^9}, {
  3.783003740752932*^9, 3.78300374089738*^9}, {3.783003788274948*^9, 
  3.783003790668356*^9}, {3.783086515085681*^9, 3.783086530088871*^9}, {
  3.78342570666463*^9, 3.783425708457206*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Make", " ", "T_i", " ", "evolve", " ", "to", " ", "Q"}], " ", "=",
    " ", "mCharm"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783001427852614*^9, 3.783001429023664*^9}, {
  3.783001758049224*^9, 3.783001769946866*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT3Ev1", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinT3", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alpha0", "/", 
       RowBox[{"alphaS3", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b3"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT8Ev1", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinT8", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alpha0", "/", 
       RowBox[{"alphaS3", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b3"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinT15Ev1", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"MellinT15", "[", "j", "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alpha0", "/", 
         RowBox[{"alphaS3", "[", "t", "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gammaqq", "[", "j", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "b3"}], ")"}]}], ")"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MellinT24Ev1", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"MellinT24", "[", "j", "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alpha0", "/", 
         RowBox[{"alphaS3", "[", "t", "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gammaqq", "[", "j", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "b3"}], ")"}]}], ")"}]}]}]}], ";"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.783001778655079*^9, 3.783001830875485*^9}, {
  3.783086520946727*^9, 3.783086534072575*^9}, {3.78342585739995*^9, 
  3.783425884354372*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT3mC", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT3Ev1", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT8mC", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT8Ev1", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinT15mC", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"MellinT15Ev1", "[", 
      RowBox[{"j", ",", " ", 
       RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MellinT24mC", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"MellinT24Ev1", "[", 
      RowBox[{"j", ",", " ", 
       RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7830019687140627`*^9, 3.783002009154134*^9}, {
  3.7830865371649923`*^9, 3.7830865392985*^9}, {3.7834254159408617`*^9, 
  3.783425420352675*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Make", " ", "T_i", " ", "evolve", " ", "to", " ", "Q"}], " ", "=",
    " ", "mBottom"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783002013279316*^9, 3.783002027166349*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT3Ev2", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinT3mC", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaCharm", "/", 
       RowBox[{"alphaS4", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b4"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT8Ev2", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinT8mC", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaCharm", "/", 
       RowBox[{"alphaS4", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b4"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinT15Ev2", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"MellinT15mC", "[", "j", "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alphaCharm", "/", 
         RowBox[{"alphaS4", "[", "t", "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gammaqq", "[", "j", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "b4"}], ")"}]}], ")"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MellinT24Ev2", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"MellinT24mC", "[", "j", "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alphaCharm", "/", 
         RowBox[{"alphaS4", "[", "t", "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gammaqq", "[", "j", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "b4"}], ")"}]}], ")"}]}]}]}], ";"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.783002106487033*^9, 3.783002152734015*^9}, {
  3.783086545613566*^9, 3.783086548518046*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT3mB", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT3Ev2", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT8mB", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT8Ev2", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinT15mB", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"MellinT15Ev2", "[", 
      RowBox[{"j", ",", " ", 
       RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MellinT24mB", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"MellinT24Ev2", "[", 
      RowBox[{"j", ",", " ", 
       RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.783002219186061*^9, 3.783002282348267*^9}, {
  3.783086551862715*^9, 3.7830865541388063`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Make", " ", "T_o", " ", "evolve", " ", "to", " ", "Q"}], " ", "=",
    " ", "Qfinal"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783002317170429*^9, 3.783002324201508*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT3Ev3", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinT3mB", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaBottom", "/", 
       RowBox[{"alphaS5", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b5"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT8Ev3", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinT8mB", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaBottom", "/", 
       RowBox[{"alphaS5", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b5"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinT15Ev3", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"MellinT15mB", "[", "j", "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alphaBottom", "/", 
         RowBox[{"alphaS5", "[", "t", "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gammaqq", "[", "j", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "b5"}], ")"}]}], ")"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MellinT24Ev3", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"MellinT24mB", "[", "j", "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alphaBottom", "/", 
         RowBox[{"alphaS5", "[", "t", "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gammaqq", "[", "j", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "b5"}], ")"}]}], ")"}]}]}]}], ";"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7830024281110992`*^9, 3.783002478492278*^9}, {
  3.7830865590114594`*^9, 3.7830865618164263`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT3f", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT3Ev3", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT8f", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT8Ev3", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MellinT15f", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"MellinT15Ev3", "[", 
      RowBox[{"j", ",", " ", 
       RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MellinT24f", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"MellinT24Ev3", "[", 
      RowBox[{"j", ",", " ", 
       RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.783002500284668*^9, 3.783002544740734*^9}, {
  3.783086564426464*^9, 3.783086566510035*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Calculate", " ", "inverse", " ", "Mellin", " ", "transforms"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.783002337099749*^9, 3.7830023463148108`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "xT3f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xT3f", "[", 
    RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "c", "-", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
        "*", 
        RowBox[{"MellinT3f", "[", 
         RowBox[{"c", "+", 
          RowBox[{"z", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.783002849762106*^9, 3.783002868334195*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xT3f", "[", "x", "]"}], ",", 
     RowBox[{"x", "*", 
      RowBox[{"T3", "[", "x", "]"}]}]}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.05", ",", "1", ",", " ", "0.01"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.783002877415846*^9, 3.783002944677218*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{1., -3.1329795724634936`*^-19}, {1., 0}}}, VertexColors -> 
            None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.5115231780229121}, {0.05, 0}}, {{
              0.060000000000000005`, 0.5292653690285511}, {
              0.060000000000000005`, 0}}, {{0.07, 0.5446703716435486}, {
              0.07, 0}}, {{0.08, 0.5581097075050208}, {0.08, 0}}, {{0.09, 
              0.5697088564410571}, {0.09, 0}}, {{0.1, 0.5794826420487981}, {
              0.1, 0}}, {{0.11, 0.587402675300017}, {0.11, 0}}, {{
              0.12000000000000001`, 0.5934322441761051}, {
              0.12000000000000001`, 0}}, {{0.13, 0.5975443523956214}, {
              0.13, 0}}, {{0.14, 0.5997305257331172}, {0.14, 0}}, {{
              0.15000000000000002`, 0.600004361031829}, {
              0.15000000000000002`, 0}}, {{0.16, 0.5984020187618311}, {
              0.16, 0}}, {{0.16999999999999998`, 0.5949809469510812}, {
              0.16999999999999998`, 0}}, {{0.18, 0.5898175984533922}, {
              0.18, 0}}, {{0.19, 0.5830046555378363}, {0.19, 0}}, {{0.2, 
              0.5746480448183944}, {0.2, 0}}, {{0.21000000000000002`, 
              0.5648639577952609}, {0.21000000000000002`, 0}}, {{
              0.22000000000000003`, 0.5537759982057836}, {
              0.22000000000000003`, 0}}, {{0.22999999999999998`, 
              0.5415125361206596}, {0.22999999999999998`, 0}}, {{0.24, 
              0.5282043142243134}, {0.24, 0}}, {{0.25, 0.5139823305378424}, {
              0.25, 0}}, {{0.26, 0.49897600567532757`}, {0.26, 0}}, {{0.27, 
              0.4833116239478996}, {0.27, 0}}, {{0.28, 
              0.46711105672600234`}, {0.28, 0}}, {{0.29, 
              0.45049072603006124`}, {0.29, 0}}, {{0.3, 
              0.43356079439854506`}, {0.3, 0}}, {{0.31, 0.4164245841600647}, {
              0.31, 0}}, {{0.32, 0.39917816602428824`}, {0.32, 0}}, {{0.33, 
              0.38191011899934935`}, {0.33, 0}}, {{0.33999999999999997`, 
              0.3647014352588822}, {0.33999999999999997`, 0}}, {{0.35, 
              0.3476255216773513}, {0.35, 0}}, {{0.36, 0.3307483634569979}, {
              0.36, 0}}, {{0.37, 0.31412869103053653`}, {0.37, 0}}, {{0.38, 
              0.29781826298268244`}, {0.38, 0}}, {{0.39, 
              0.28186220942971935`}, {0.39, 0}}, {{0.4, 
              0.26629935927255194`}, {0.4, 0}}, {{0.41, 0.2511626442219134}, {
              0.41, 0}}, {{0.42, 0.23647952280662285`}, {0.42, 0}}, {{0.43, 
              0.22227234180215252`}, {0.43, 0}}, {{0.44, 
              0.2085587720129658}, {0.44, 0}}, {{0.45, 
              0.19535220609029313`}, {0.45, 0}}, {{0.46, 
              0.18266214575270207`}, {0.46, 0}}, {{0.47, 
              0.17049457693224238`}, {0.47, 0}}, {{0.48, 
              0.15885232529375834`}, {0.48, 0}}, {{0.49, 
              0.14773539344467448`}, {0.49, 0}}, {{0.5, 
              0.13714127545967786`}, {0.5, 0}}, {{0.51, 
              0.12706525109303163`}, {0.51, 0}}, {{0.52, 
              0.11750065448905389`}, {0.52, 0}}, {{0.53, 
              0.10843912471261417`}, {0.53, 0}}, {{0.54, 
              0.09987083306623878}, {0.54, 0}}, {{0.55, 
              0.09178469034041217}, {0.55, 0}}, {{0.56, 
              0.08416853491348363}, {0.56, 0}}, {{0.5700000000000001, 
              0.07700930633201203}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.0702931777434415}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.0640057346626629}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.05813205651715651}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.052656847649740525`}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.047564531706924866`}, {
              0.6200000000000001, 0}}, {{0.63, 0.04283933973273233}, {
              0.63, 0}}, {{0.64, 0.03846538892742845}, {0.64, 0}}, {{0.65, 
              0.03442675310468611}, {0.65, 0}}, {{0.66, 
              0.03070752579322649}, {0.66, 0}}, {{0.67, 
              0.027291876777068336`}, {0.67, 0}}, {{0.68, 
              0.024164103045527876`}, {0.68, 0}}, {{0.6900000000000001, 
              0.021308674420327915`}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 0.018710274810200656`}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              0.016353839431697787`}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 0.014224588461720106`}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              0.012308057494996477`}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 0.010590125079864562`}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              0.009057037902127111}, {0.7500000000000001, 0}}, {{0.76, 
              0.007695433053016776}, {0.76, 0}}, {{0.77, 
              0.006492358699648953}, {0.77, 0}}, {{0.78, 
              0.005435292544761537}, {0.78, 0}}, {{0.79, 
              0.0045121583878185096`}, {0.79, 0}}, {{0.8, 
              0.0037113410990840113`}, {0.8, 0}}, {{0.81, 
              0.0030217000283772146`}, {0.81, 0}}, {{0.8200000000000001, 
              0.002432581003527568}, {0.8200000000000001, 0}}, {{
              0.8300000000000001, 0.0019338270473359396`}, {
              0.8300000000000001, 0}}, {{0.8400000000000001, 
              0.001515787940417919}, {0.8400000000000001, 0}}, {{
              0.8500000000000001, 0.001169328756698596}, {
              0.8500000000000001, 0}}, {{0.8600000000000001, 
              0.000885837497744554}, {0.8600000000000001, 0}}, {{
              0.8700000000000001, 0.0006572319507739254}, {
              0.8700000000000001, 0}}, {{0.8800000000000001, 
              0.00047596589230576504`}, {0.8800000000000001, 0}}, {{0.89, 
              0.00033503475402226195`}, {0.89, 0}}, {{0.9, 
              0.0002279808584734679}, {0.9, 0}}, {{0.91, 
              0.00014889831861817667`}, {0.91, 0}}, {{0.92, 
              0.00009243767513935272}, {0.92, 0}}, {{0.93, 
              0.00005381031563213417}, {0.93, 0}}, {{0.9400000000000001, 
              0.000028792676699296483`}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 0.000013730163704455167`}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              5.540620249827219*^-6}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 1.7170039481602198`*^-6}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              3.28598340710677*^-7}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 1.9374137966459037`*^-8}, {
              0.9900000000000001, 0}}}, VertexColors -> None]}}}}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[{{{1., 0.}, {1., 0}}}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.42135068897473}, {0.05, 0}}, {{
              0.060000000000000005`, 0.4401375975921591}, {
              0.060000000000000005`, 0}}, {{0.07, 0.4580794281061981}, {
              0.07, 0}}, {{0.08, 0.4764583771456424}, {0.08, 0}}, {{0.09, 
              0.4960356898065392}, {0.09, 0}}, {{0.1, 0.5172194809279252}, {
              0.1, 0}}, {{0.11, 0.5401660017028663}, {0.11, 0}}, {{
              0.12000000000000001`, 0.5648472648898875}, {
              0.12000000000000001`, 0}}, {{0.13, 0.5911000053777039}, {
              0.13, 0}}, {{0.14, 0.6186632906286335}, {0.14, 0}}, {{
              0.15000000000000002`, 0.6472085611910858}, {
              0.15000000000000002`, 0}}, {{0.16, 0.6763641596195115}, {
              0.16, 0}}, {{0.16999999999999998`, 0.7057355352545902}, {
              0.16999999999999998`, 0}}, {{0.18, 0.7349218613109442}, {
              0.18, 0}}, {{0.19, 0.763529564198687}, {0.19, 0}}, {{0.2, 
              0.7911831402982591}, {0.2, 0}}, {{0.21000000000000002`, 
              0.8175335692787123}, {0.21000000000000002`, 0}}, {{
              0.22000000000000003`, 0.8422645971723146}, {
              0.22000000000000003`, 0}}, {{0.22999999999999998`, 
              0.8650971415048243}, {0.22999999999999998`, 0}}, {{0.24, 
              0.8857920565744696}, {0.24, 0}}, {{0.25, 0.9041514850964554}, {
              0.25, 0}}, {{0.26, 0.9200190106775294}, {0.26, 0}}, {{0.27, 
              0.9332788129710181}, {0.27, 0}}, {{0.28, 0.9438540135809937}, {
              0.28, 0}}, {{0.29, 0.9517043858967629}, {0.29, 0}}, {{0.3, 
              0.9568235862931868}, {0.3, 0}}, {{0.31, 0.959236047855039}, {
              0.31, 0}}, {{0.32, 0.9589936613187949}, {0.32, 0}}, {{0.33, 
              0.9561723515994238}, {0.33, 0}}, {{0.33999999999999997`, 
              0.9508686423737163}, {0.33999999999999997`, 0}}, {{0.35, 
              0.9431962859712849}, {0.35, 0}}, {{0.36, 0.9332830214783233}, {
              0.36, 0}}, {{0.37, 0.92126751063949}, {0.37, 0}}, {{0.38, 
              0.9072964889584936}, {0.38, 0}}, {{0.39, 0.8915221584170114}, {
              0.39, 0}}, {{0.4, 0.8740998384885593}, {0.4, 0}}, {{0.41, 
              0.8551858836227128}, {0.41, 0}}, {{0.42, 0.8349358680940021}, {
              0.42, 0}}, {{0.43, 0.8135030330061452}, {0.43, 0}}, {{0.44, 
              0.7910369852563973}, {0.44, 0}}, {{0.45, 0.7676826343238956}, {
              0.45, 0}}, {{0.46, 0.7435793497674982}, {0.46, 0}}, {{0.47, 
              0.7188603202135949}, {0.47, 0}}, {{0.48, 0.6936520932896849}, {
              0.48, 0}}, {{0.49, 0.6680742753204618}, {0.49, 0}}, {{0.5, 
              0.6422393695555121}, {0.5, 0}}, {{0.51, 0.6162527321493577}, {
              0.51, 0}}, {{0.52, 0.590212625976962}, {0.52, 0}}, {{0.53, 
              0.5642103535570322}, {0.53, 0}}, {{0.54, 0.5383304517933052}, {
              0.54, 0}}, {{0.55, 0.5126509328585365}, {0.55, 0}}, {{0.56, 
              0.48724355727195934`}, {0.56, 0}}, {{0.5700000000000001, 
              0.46217412700052635`}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.4375027881964673}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.413284334925057}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.38956850690058153`}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.36640027580581164`}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.34382011619795205`}, {
              0.6200000000000001, 0}}, {{0.63, 0.32186425828533094`}, {
              0.63, 0}}, {{0.64, 0.3005649209830643}, {0.64, 0}}, {{0.65, 
              0.2799505246169152}, {0.65, 0}}, {{0.66, 0.2600458834415198}, {
              0.66, 0}}, {{0.67, 0.24087237877530315`}, {0.67, 0}}, {{0.68, 
              0.22244811403642845`}, {0.68, 0}}, {{0.6900000000000001, 
              0.2047880533017811}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 0.18790414521641974`}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              0.17180543416813798`}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 0.15649816062611535`}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              0.14198585244023218`}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 0.12826940872497808`}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              0.11534717772539194`}, {0.7500000000000001, 0}}, {{0.76, 
              0.10321502979803822`}, {0.76, 0}}, {{0.77, 
              0.0918664263527558}, {0.77, 0}}, {{0.78, 0.08129248530479266}, {
              0.78, 0}}, {{0.79, 0.07148204329461341}, {0.79, 0}}, {{0.8, 
              0.06242171465530777}, {0.8, 0}}, {{0.81, 
              0.054095946854679326`}, {0.81, 0}}, {{0.8200000000000001, 
              0.04648707191869147}, {0.8200000000000001, 0}}, {{
              0.8300000000000001, 0.03957535316133317}, {
              0.8300000000000001, 0}}, {{0.8400000000000001, 
              0.03333902640804137}, {0.8400000000000001, 0}}, {{
              0.8500000000000001, 0.02775433480927393}, {
              0.8500000000000001, 0}}, {{0.8600000000000001, 
              0.02279555630055185}, {0.8600000000000001, 0}}, {{
              0.8700000000000001, 0.018435022777921906`}, {
              0.8700000000000001, 0}}, {{0.8800000000000001, 
              0.014643130126625869`}, {0.8800000000000001, 0}}, {{0.89, 
              0.011388338371106477`}, {0.89, 0}}, {{0.9, 
              0.008637161415900535}, {0.9, 0}}, {{0.91, 
              0.006354146137132092}, {0.91, 0}}, {{0.92, 
              0.004501840996019884}, {0.92, 0}}, {{0.93, 
              0.003040754940741657}, {0.93, 0}}, {{0.9400000000000001, 
              0.0019293082606749168`}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 0.0011237785012539856`}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              0.0005782470753857767}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 0.0002445571386654693}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              0.00007230443889335089}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 8.914354279358976*^-6}, {
              0.9900000000000001, 0}}}, VertexColors -> None]}}}}}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJw1lAlQE2ccxQM6qJxVQkFsQaC2QPGAqK3S5E0VKB6oYDyGI+Uo4EwVwdKq
oAaPUBEotqBtRaVVW4QBBA/EQkFuUGC4EyBANuGIQIhA0ToqlHz5+p/Z2Zmd
2ff93/u9XZvgwz6huiwWK3Du0tyv/KqZLMzYWfSECmR4ZCUa9S7KQ/zn/qq/
1TKMeRfNPSmA3qBDyvNDDGLZeV8wMfchMcpWLJQy0BffjOTqP8Tyt/zFxq5y
aPUewS8wfpV1ohwO/ikV0/YlcFTMFrAa5FS/FPmWH1wPfSvHrbm3xTcf465f
xB4zawU9rxwd/3otmVmjwFqOZipR2XVm/2ccBT2/Cqfsf3i77EMF5sTnTqhG
dMnVWDN9Bd2nFtGNMx/V98vho5HzrsPFg1ZBrzL/368eLj8NbTsXIoc8RiP4
BOURK9MCTOVwJPs2IHMXJ+p8EQOyXmQjBF8tX7qEz4DIFTUhLXio2HBYBhaZ
Zpz4NGlJ4hEZ9dOMsp1HjTeo++HJaA5ogcXp27LU8T7qrwV+PJOaFYO9SCEG
WhHXJjUSt0tB7HLaMAvnmm/LekDsiNvwYCJ5+70/u6n/dmyMezfNNqkL1pp1
rDoQ4VFr90mUhObRAafDO/Pd9okRRqYT8W8K3xeik+Yjxrn176x+7dgBjRo7
TwzP87kb7li207wkuBU4wo82acMLjdy0BKaZfU8W6LfS/LpgICg/amjQAhIP
txtHuX/FGpo2g9hlupEetmv+C7cmkPVEPVC5Hkz8+psG2gcpPI8l1hndfYLG
Bs1I4fZmJdtLpx5RRLAXtk3v2R0PqgWxy+7DItlCp6rWapp/H8z75ync91SB
yPn3I5eb6TWjrKA8ZOC9OhsmSS6nfmQQnJ9Ky9n8mPKRwVNnq1TELqX+ZJgV
4Hp2RTHlxSBQR5Jg++Mj6pfBVsstqRzhQ8qPgZjXlL846QF4xL8cUt3VVUzh
PVwkAOTgcC+0Fc8U0H7JcWzCZlFecD7tswJ7t66yO1GZi3iSjwLJnTbXOqez
ISF4FOh/uUkS6Hub5jWAQ9VuhYvUf1D+AxC6TXiUFNyk+Q3A2Dd4RfBvv9M+
DGJVgrnT06gMmucgrvU2S8Im01FJ+jGI8H3up4+X/gIzku8QdFL11M9bLiGc
9GUIzQ03ttTbp9LvdQjVxeaXTcouwoD0ZxjZI+qJWptkBJD8hxGSs//sy7UJ
uEP6NIxTOxZ875Evgg7hoYRJzX1DYdIZykOJqflZbIiElIcSGTsy3Ip/jqE8
lChwv+Tqvfk7yuMZlgb6b9sXe4TyeAbrshtshEdQHs9gtim968XjA5THCNL3
+r8+qQqhPEYgbHd4bXznS8pjBPyeCGVOx37KYxRXH3zsLLLfTXmM4mRC4oUJ
PS/KYxQxT3X7NiW40//DGCbb500EOYPyGINLbvnOqX/WUR5jUF6+klXFrKQ8
VOBd821xOWdHeaggWHHLMcTVgvJQoaSuO2D7ekPKYxwHptblvlozw9PyGEci
9zp/99MxnpbHOLrMJy1cuGKelocakYY+TcebSnhaHmoM9DrXexhd5ml5qJHO
WlYhauTztN/Hc2wMj5teYGVe8h+yZO1f
           "]], {}}}}, {{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJwtlAlQlHUYxldGyQFR4jCzspAmj4gcQUSDffIMgrIFGs3WkUiuEF0DD8DA
RpCKARyCBEVHAQ+GBhaEWMkTwcDlFJBrF/Zg2ftbslBzcGz37/vO7Hwz38w+
//d5fs//84jaHxZtx+PxIq0/2/N0iW0qgfYwZdyTEVxbkmUUSKqxOX1Y5fe+
DCaBxPqmFjWWqkgvgRxpbtWfKFPrUdlk2RqSPgaHwXJRoEMjknO2p867NY6X
etdQ5bxvbEGuAiuE+c3Ty69j2+onaxyClaR/EyMzgQXrXVWosP57sPw2/ox9
mvepQUXn3YFTzoLphR1q+PrY5i6a/Y81cQ0TdH4LnFz9k+5VaGAVt57Qisw9
B8RRRZO0z1/AFm44NVOLMJucoA07Yo7kDuzT0X7tyAp67fPdAj1UqTbB+/DQ
mJcHrDBgJdu3AwZFoqr/HwPYeqJOiB0ifBTVRjA5SRfksRuK4naYwGPTg6bu
bxd1cyby04NQuaBBKjIjSGk7oBe3w49kJ8jN5K8XHxidv3Ty5ZDPDDyA867S
O8JkDsyuTx88D0VnhJ7jwOwM9mFnz4B0QR1H/vvRa8lNcRVzeNu2zpIBnK/Z
1/y4mKM8BiD8cJ1rZiKHGDYP4V7Af1bpzVE+g2hcqdmZbN3HpuZWPYhuxzKe
fZqZ8hpC+ta0iwVzzXhsk5seQjO3IfWrbBPlN4xE/eF1558aweIJHMEbS7e0
V+8ygtlVjiDc9cleaaMBbL2sURRX8o+vnWugPsjwIuiq1OsLPTo7bCND3eLZ
XqMndTjABOWI33/ZGCPVgtl1G4Nj/R9fa3layn8MadGW8ejVk2BywnGYzqR8
Jo/UEA8F5qyfX7gud4L8KBA+FnFpu0RNfBRwDmj7bY5aRf4UcHvkMm43X0W8
lBAXlrbx1ivJrxKFWTJzWayC+ClxVG4oeeE9Dj7zr8JHv3rc31gox0kGQAXz
mc5aR56M+qXCjr9LPT9OGqE+q5Hn4XVLzA3hBMtHjVrfg+8uThrEEMOjRsz1
2oXvzXpIeU3APq81Z29JP/GfwLyzRy8lB/RRfhP4uYA73WDopT5oMNW15odT
FT2UpwZRd35/rO3vwl3WDw1OPEp4xTulA+4s30k0HGy9mu53H7GsL5O4/g1/
Ld+pje7rJPYcPS6SPG+FI+uPFitmVBKPuS3YxfLXIkMmvHLKqxk1rE9axP90
r90j4TZmMR46FPvNztyTfYN46JCySjQcureJeOiw1L1dkZfZSDx0kCVKi4q6
64mHHt+d9am+GFpHPPSYSrLzvjFdQzz0yMjxaj1UV0U8DMiRLAtZ1nmZeBiQ
lvxmhv+mCuJhQNtN30U9r14gHkZkTm1TXkgoJR5GLBH4qxu3nyIeRpjzm/Zf
UBTQ98GE/xY5XFn7PJd4mPBOmWKyJSybeJgQuDDdWyj+kXiY0TJw8a0u+1Ti
YcZuYfGNLNH3xMMMvt0DhUkXRzw4HAvOebq4dDfx4FD3esizw/FhxIND/Zk8
T/GjjcTDgvLgc/oZ+1XEw4KZCL/Ozf+6EA8LXH7RZI3Wqvgv78cU3RMe73+y
swA+
           "]], {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0.05, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, 
     PlotRange -> {{0.05, 1.}, {-3.1329795724634936`*^-19, 
      0.959236047855039}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xT3f", "(", "x", ")"}], 
       RowBox[{"x", " ", 
         RowBox[{"T3", "(", "x", ")"}]}]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.783002969743116*^9, 3.7830034632445*^9, 
  3.783003910960761*^9, 3.7830047962274303`*^9, 3.783086795912045*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "xT8f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xT8f", "[", 
    RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "c", "-", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
        "*", 
        RowBox[{"MellinT8f", "[", 
         RowBox[{"c", "+", 
          RowBox[{"z", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.783003037328333*^9, 3.783003054163621*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xT8f", "[", "x", "]"}], ",", 
     RowBox[{"x", "*", 
      RowBox[{"T8", "[", "x", "]"}]}]}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.05", ",", "1", ",", " ", "0.01"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.783004954183476*^9, 3.783005009568728*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{1., -8.972919023226067*^-19}, {1., 0}}}, VertexColors -> 
            None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.8984369338816308}, {0.05, 0}}, {{
              0.060000000000000005`, 0.8991675688369231}, {
              0.060000000000000005`, 0}}, {{0.07, 0.895669000943336}, {
              0.07, 0}}, {{0.08, 0.8887273750423615}, {0.08, 0}}, {{0.09, 
              0.8789346263897921}, {0.09, 0}}, {{0.1, 0.8667559706818871}, {
              0.1, 0}}, {{0.11, 0.8525691784020302}, {0.11, 0}}, {{
              0.12000000000000001`, 0.8366886850709573}, {
              0.12000000000000001`, 0}}, {{0.13, 0.8193812073814801}, {
              0.13, 0}}, {{0.14, 0.8008762589658838}, {0.14, 0}}, {{
              0.15000000000000002`, 0.7813735699489642}, {
              0.15000000000000002`, 0}}, {{0.16, 0.7610484687452054}, {
              0.16, 0}}, {{0.16999999999999998`, 0.740055932529353}, {
              0.16999999999999998`, 0}}, {{0.18, 0.7185336962188593}, {
              0.18, 0}}, {{0.19, 0.6966047168410866}, {0.19, 0}}, {{0.2, 
              0.6743791428596211}, {0.2, 0}}, {{0.21000000000000002`, 
              0.6519559249539179}, {0.21000000000000002`, 0}}, {{
              0.22000000000000003`, 0.6294241460944388}, {
              0.22000000000000003`, 0}}, {{0.22999999999999998`, 
              0.60686413359517}, {0.22999999999999998`, 0}}, {{0.24, 
              0.5843483923119572}, {0.24, 0}}, {{0.25, 0.5619424011119569}, {
              0.25, 0}}, {{0.26, 0.5397052913239042}, {0.26, 0}}, {{0.27, 
              0.5176904252011457}, {0.27, 0}}, {{0.28, 
              0.49594590899280244`}, {0.28, 0}}, {{0.29, 
              0.4745150284742691}, {0.29, 0}}, {{0.3, 0.4534366236998694}, {
              0.3, 0}}, {{0.31, 0.43274543675748894`}, {0.31, 0}}, {{0.32, 
              0.4124724026694628}, {0.32, 0}}, {{0.33, 0.3926449141653568}, {
              0.33, 0}}, {{0.33999999999999997`, 0.373287061462715}, {
              0.33999999999999997`, 0}}, {{0.35, 0.3544198240708151}, {
              0.35, 0}}, {{0.36, 0.33606130848270394`}, {0.36, 0}}, {{0.37, 
              0.3182268643845842}, {0.37, 0}}, {{0.38, 0.300929299369612}, {
              0.38, 0}}, {{0.39, 0.2841790090797846}, {0.39, 0}}, {{0.4, 
              0.267984105927125}, {0.4, 0}}, {{0.41, 0.252350565558019}, {
              0.41, 0}}, {{0.42, 0.23728237582774075`}, {0.42, 0}}, {{0.43, 
              0.22278160834909366`}, {0.43, 0}}, {{0.44, 
              0.20884856627758072`}, {0.44, 0}}, {{0.45, 
              0.19548188723037035`}, {0.45, 0}}, {{0.46, 
              0.18267865066270672`}, {0.46, 0}}, {{0.47, 
              0.1704344817836981}, {0.47, 0}}, {{0.48, 
              0.15874364224169005`}, {0.48, 0}}, {{0.49, 
              0.1475991800533679}, {0.49, 0}}, {{0.5, 0.13699292073439187`}, {
              0.5, 0}}, {{0.51, 0.12691566601578338`}, {0.51, 0}}, {{0.52, 
              0.11735723164987755`}, {0.52, 0}}, {{0.53, 
              0.1083065453860969}, {0.53, 0}}, {{0.54, 0.09975173377745833}, {
              0.54, 0}}, {{0.55, 0.09168020529471094}, {0.55, 0}}, {{0.56, 
              0.08407873119330404}, {0.56, 0}}, {{0.5700000000000001, 
              0.07693352384498399}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.07023031233893348}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.06395441468880755}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.05809080982380937}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.05262420266282799}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.047539089588243176`}, {
              0.6200000000000001, 0}}, {{0.63, 0.04281981955651719}, {
              0.63, 0}}, {{0.64, 0.03845065208499577}, {0.64, 0}}, {{0.65, 
              0.03441581443567256}, {0.65, 0}}, {{0.66, 
              0.03069955023430381}, {0.66, 0}}, {{0.67, 
              0.027286172450446712`}, {0.67, 0}}, {{0.68, 
              0.024160107789130813`}, {0.68, 0}}, {{0.6900000000000001, 
              0.021305940538659727`}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 0.018708452704431125`}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              0.016352661619844958`}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 0.01422385457218508}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              0.012307620851753779`}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 0.010589881017559213`}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              0.009056913489303148}, {0.7500000000000001, 0}}, {{0.76, 
              0.00769537925077623}, {0.76, 0}}, {{0.77, 
              0.006492343703780102}, {0.77, 0}}, {{0.78, 
              0.0054352966155205755`}, {0.78, 0}}, {{0.79, 
              0.004512169985503778}, {0.79, 0}}, {{0.8, 0.0037113540224797}, {
              0.8, 0}}, {{0.81, 0.003021711378117277}, {0.81, 0}}, {{
              0.8200000000000001, 0.002432589787579331}, {
              0.8200000000000001, 0}}, {{0.8300000000000001, 
              0.00193383326939874}, {0.8300000000000001, 0}}, {{
              0.8400000000000001, 0.0015157920379617607`}, {
              0.8400000000000001, 0}}, {{0.8500000000000001, 
              0.0011693312813118562`}, {0.8500000000000001, 0}}, {{
              0.8600000000000001, 0.0008858389547468416}, {
              0.8600000000000001, 0}}, {{0.8700000000000001, 
              0.0006572327365957547}, {0.8700000000000001, 0}}, {{
              0.8800000000000001, 0.00047596628632713917`}, {
              0.8800000000000001, 0}}, {{0.89, 0.00033503493619590726`}, {
              0.89, 0}}, {{0.9, 0.0002279809352333057}, {0.9, 0}}, {{0.91, 
              0.00014889834761997467`}, {0.91, 0}}, {{0.92, 
              0.00009243768472767718}, {0.92, 0}}, {{0.93, 
              0.00005381031833005797}, {0.93, 0}}, {{0.9400000000000001, 
              0.00002879267731223748}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 0.000013730163808937986`}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              5.5406202614387974`*^-6}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 1.7170039485584966`*^-6}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              3.2859834072301476`*^-7}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 1.9374137965630768`*^-8}, {
              0.9900000000000001, 0}}}, VertexColors -> None]}}}}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[{{{1., 0.}, {1., 0}}}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.9056221955886428}, {0.05, 0}}, {{
              0.060000000000000005`, 0.9360654202639388}, {
              0.060000000000000005`, 0}}, {{0.07, 0.9644763496648248}, {
              0.07, 0}}, {{0.08, 0.9908695311320225}, {0.08, 0}}, {{0.09, 
              1.0152528767114324`}, {0.09, 0}}, {{0.1, 1.0376273643897622`}, {
              0.1, 0}}, {{0.11, 1.057991393713948}, {0.11, 0}}, {{
              0.12000000000000001`, 1.0763446383526336`}, {
              0.12000000000000001`, 0}}, {{0.13, 1.092690531069422}, {
              0.13, 0}}, {{0.14, 1.1070375581146872`}, {0.14, 0}}, {{
              0.15000000000000002`, 1.1193997173711145`}, {
              0.15000000000000002`, 0}}, {{0.16, 1.1297964519605148`}, {
              0.16, 0}}, {{0.16999999999999998`, 1.1382522889082152`}, {
              0.16999999999999998`, 0}}, {{0.18, 1.1447963388033504`}, {
              0.18, 0}}, {{0.19, 1.1494617564174643`}, {0.19, 0}}, {{0.2, 
              1.1522852225011795`}, {0.2, 0}}, {{0.21000000000000002`, 
              1.1533064798146968`}, {0.21000000000000002`, 0}}, {{
              0.22000000000000003`, 1.1525679384172205`}, {
              0.22000000000000003`, 0}}, {{0.22999999999999998`, 
              1.150114353640135}, {0.22999999999999998`, 0}}, {{0.24, 
              1.1459925730166747`}, {0.24, 0}}, {{0.25, 
              1.1402513443263707`}, {0.25, 0}}, {{0.26, 
              1.1329411748455258`}, {0.26, 0}}, {{0.27, 
              1.1241142311849983`}, {0.27, 0}}, {{0.28, 
              1.1138242692640856`}, {0.28, 0}}, {{0.29, 1.102126584682279}, {
              0.29, 0}}, {{0.3, 1.0890779747800543`}, {0.3, 0}}, {{0.31, 
              1.0747367048689527`}, {0.31, 0}}, {{0.32, 
              1.0591624723538038`}, {0.32, 0}}, {{0.33, 
              1.0424163636954002`}, {0.33, 0}}, {{0.33999999999999997`, 
              1.0245608003247353`}, {0.33999999999999997`, 0}}, {{0.35, 
              1.0056594706919875`}, {0.35, 0}}, {{0.36, 0.9857772465991699}, {
              0.36, 0}}, {{0.37, 0.9649800828175693}, {0.37, 0}}, {{0.38, 
              0.9433348997286842}, {0.38, 0}}, {{0.39, 0.9209094493531094}, {
              0.39, 0}}, {{0.4, 0.8977721656511582}, {0.4, 0}}, {{0.41, 
              0.8739920003991345}, {0.41, 0}}, {{0.42, 0.8496382462740766}, {
              0.42, 0}}, {{0.43, 0.8247803490260891}, {0.43, 0}}, {{0.44, 
              0.7994877107896289}, {0.44, 0}}, {{0.45, 0.7738294866918598}, {
              0.45, 0}}, {{0.46, 0.7478743769655799}, {0.46, 0}}, {{0.47, 
              0.7216904167740043}, {0.47, 0}}, {{0.48, 0.6953447659121331}, {
              0.48, 0}}, {{0.49, 0.6689035004712456}, {0.49, 0}}, {{0.5, 
              0.642431408445422}, {0.5, 0}}, {{0.51, 0.6159917911275039}, {
              0.51, 0}}, {{0.52, 0.5896462719916693}, {0.52, 0}}, {{0.53, 
              0.5634546145953394}, {0.53, 0}}, {{0.54, 0.5374745508585258}, {
              0.54, 0}}, {{0.55, 0.5117616208975532}, {0.55, 0}}, {{0.56, 
              0.4863690254054871}, {0.56, 0}}, {{0.5700000000000001, 
              0.46134749138629566`}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.4367451518661409}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.4126074400252218}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.38897699801897634`}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.36589360058958775`}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.3433940934087754}, {
              0.6200000000000001, 0}}, {{0.63, 0.3215123459416949}, {
              0.63, 0}}, {{0.64, 0.3002792184801066}, {0.64, 0}}, {{0.65, 
              0.2797225428613481}, {0.65, 0}}, {{0.66, 0.2598671162683737}, {
              0.66, 0}}, {{0.67, 0.2407347073954704}, {0.67, 0}}, {{0.68, 
              0.22234407416428226`}, {0.68, 0}}, {{0.6900000000000001, 
              0.2047109920854919}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 0.18784829228282893`}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              0.17176590812784812`}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 0.15647092937594967`}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              0.14196766264615351`}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 0.12825769704895112`}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              0.11533997373787537`}, {0.7500000000000001, 0}}, {{0.76, 
              0.10321085814100589`}, {0.76, 0}}, {{0.77, 
              0.09186421361826548}, {0.77, 0}}, {{0.78, 
              0.08129147528889004}, {0.78, 0}}, {{0.79, 
              0.07148172278079339}, {0.79, 0}}, {{0.8, 0.0624217506697323}, {
              0.8, 0}}, {{0.81, 0.054096135401378045`}, {0.81, 0}}, {{
              0.8200000000000001, 0.04648729752400828}, {
              0.8200000000000001, 0}}, {{0.8300000000000001, 
              0.03957555810422992}, {0.8300000000000001, 0}}, {{
              0.8400000000000001, 0.03333918825400446}, {
              0.8400000000000001, 0}}, {{0.8500000000000001, 
              0.027754450765944544`}, {0.8500000000000001, 0}}, {{
              0.8600000000000001, 0.022795632937895036`}, {
              0.8600000000000001, 0}}, {{0.8700000000000001, 
              0.018435069770988965`}, {0.8700000000000001, 0}}, {{
              0.8800000000000001, 0.014643156853418651`}, {
              0.8800000000000001, 0}}, {{0.89, 0.011388352403918216`}, {
              0.89, 0}}, {{0.9, 0.008637168158324661}, {0.9, 0}}, {{0.91, 
              0.006354149062122627}, {0.91, 0}}, {{0.92, 
              0.004501842119516263}, {0.92, 0}}, {{0.93, 
              0.0030407553120987197`}, {0.93, 0}}, {{0.9400000000000001, 
              0.0019293083619068344`}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 0.0011237785225466869`}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              0.0005782470784750094}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 0.00024455713891592657`}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              0.00007230443890042176}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 8.914354279374346*^-6}, {
              0.9900000000000001, 0}}}, VertexColors -> None]}}}}}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJwtlAlQE2ccxUGwHrFOmWKFqghSkdIDLNIDhrxWQalYNJEKQQTkiI5ChI6I
Yju1qVHTxopFpK3TWkVa6RFAWiElIBAjRyGEM4IHSQiQY7k8sIpgyZfvP7Oz
Mzuz7/u/93u7Hon7uCmz7OzsEmYu6/2H761ThF/DnNTT1xjI3EQWToUUCmPF
C5NKBgynYuZJKWonEudxixgcdpZu0GX/hZSq7cn70xnM1xSkB88vx9MtmcIg
dwY2PRk2uB9wzJJb8GrsqbqH3nK0L4zxRpiF6lfD03EPb9UNMy7NvK0pqMGe
FYvG4t410/NqIdBIUP+zCWv8raPA9qylKx3sTfT86/Bs/YwjjDFiRnzmBCUi
zqTVi6VDdJ96uJc0JQROD4JrleM0AJsuPs7bOEj3a8SR/zJPf3lmAPpsq2AT
Nogd/mi/bYAP2bcZLwXylrBfMYCsl96CZQ53IgV7+0HkKlSQ8iP4k1f0sCOj
xo24hAuCSR31o0bFrYk5IaE6hOmsB7RB4XZVaMnRUn9tkOwcNuZW9eEUMdCO
pmy/sP1xd0Hs+negNZ7PWjL7DogdTQfeyco3u165Rf13QjM+VXgvpRfLreu4
daHrCWeFi0cPzaMLlSvf3zParwGfTDf6WLGfqqXdNB8N9p6N3jhH2AWrmrNU
g8nE1oDOHZ00r5swaJonUtd2YMIq9/Am9oaeXDXl207z60HfF2WqX7zaQOIJ
7oWTTPJU6KUGsavrRWDmgu6QeBXIeqJbUAfZ5y052kz7cBuPQqdqJJVNaGm2
zm00lUYwktmNyCCCd1AxzzPfIbEexK7zXeTmFi9sVitp/ncR4D7me5VzHUQu
tg8d6eeLjhvqKA8tegJfM02eqKV+tHAozFAq2TWUjxbRl/Tnl7OqqT8tgtYl
RDyRVVJeMxw9whMjxTLqVwcmVXAu5mA55aeDokQx1/fY32AT/3qcjtJFm0vL
kEMA6MF/JnX78Ukp7Zce1fdFczjxJbTP/ajf1eDuXP0njpF8+lGW3hl4avw3
3CR4+vEix92LFXWZ5mXANm6QLJsppPwNyGAJmlqKC2h+BiSpRl6+/9MF2ocB
uGXMHS/bd57mOYB/nILmGcfOQUH6MQBP/YdJaVXfYRHJdxCHNOFZ77XlYRfp
yyAuaV1mbfbOpd/rIJJT07+uqc4Bi/RnCGmbijNSPE5iB8l/CF2L+Ub5GjGK
SZ+G0JCzVLmyRAR7wsOIYDszTyARUh5GZE+nFPiJPqc8jPhg9TJ2eX425WFE
Xjt3K3fdAcrDhFUOvN0xhz+hPEzw3Kx2XL9LQHmYsEV+ZPxpzW7KwwzX4gtX
hMNJlIcZH+ceLFpUHE95mGHXVxtR2hVNeVgw8a3H0HHvrZSHBT47v/r9wXMf
UR4WXE6c/U2IOJT+Hxj4TLEvJq0G5cHgxrOFLg8eBFAeDOLEfK5S9wblMYy2
1z2c/I96Uh7DkBe0RiYFuVAew7A8ysvc9PYCymME65Knyx/7TbNtPEYg2hYe
vfVfhm3jMYKWEIXrW8Eato3HKHjXBKpDKjnbxmMUa1MDGtc/f5Zt4zGKujcX
14laItm272MM5nv+vKiTfvL/ARe482c=
           "]], {}}}}, {{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJw1lAtMk2cYhStbcOCYCihuRvCGE10Ytykb2qOTBR0T5aLOTIaigCBOlJmh
OJkROxIRxjZ1OpNxE+wUEYOCThQQKJpyqYJggUpL6b2l/b2BFh39fH2T5k/+
pOd7z3nO98+K3RURZ8fj8TaP/WzP06dsI4S4yjm+54UB19yP6MOrLyIyQfYT
nhhhCK8ee1OBwp17Do32mpDuejFEvr8Sx12k7wZcGYJjV1HKUscqTIzSiffx
zXijdw3/SarmeZw2w2tTbv3T+TdQu2hxbJbRTPo34ePb9vGVQAuKx/7dVVSL
V2kjk4TpFjqvDnk11e/svGpBgL9tbmP9wj/LJmotdH4D0nUNu8+6cBgTHzuh
ERciF7+3chFH+4jQKQ16PiWcQ4RNLrwZgU41dn7bONrvDhw0cwvqd3FQ7LcJ
3kXpR5KDllQOC9i+YtyqdnfVp3Bg66W04PDV4TBZPAcmV92KqPe1YdZ1HHhs
2vEsP883jc+Rn3Zcd1IaBDM5rJTbDpBgnoAfEGN960+CjPJ/4j6/Z0EuM3AP
e/2jDqwptIDZ9b+PwydE9n3JFjA7XffxRV7qDA+/t/47cCOXvzGKM8PDto57
J6b5mkQ3ysyURycysgr7Tm0zI57NA0Tn/BXr7WamfLpw8MPEaweODsGm5nqx
CyGNHtoZchPl1Q2nSPN58acmPLPJPe2GT57FzS3NSPk9xKPYDRXZ1w1g8SyV
oq5unfPN53owu3Ip7lZ4Zi/x0YOtd6QHZ5O8609t01EfetFWkrws4bgWLWLb
9CK4ctkHi25rsJsJ9iHmwj3+CZMazK6rDG0+S36ZOk1N+csQ4lfw74plKjC5
TY+QKVi/9lzCIPHox5yV89aKc5Tkpx/emvKkgKsDxKcfWf4tPVtkCvLXD+nj
1mHJeAXxkiOoI7Rj1E9OfuUIDZ2j2bi5n/jJcUC6L/v8zEfgM/8KrJqlyq8S
9OE3BkCBdLV1qOBxD/VLgbJSOHhtl1KfBzBJ8q3otbIbApbPAJy/mvpKnNSF
boZnACOzPwtc+KKT8lKiZnpj5rk/Ooi/Ehkn6yObFt+n/JToFcVuGVFJqA+D
2Ju8o1xY0E55DmLNqiK3uPZW3Gb9GETvdxkhjXvFmMLyVSFXNDl42P8uElhf
VBhIelmeOKGZ7qsK0Q6jsmRrIyaw/qgxeSDw66XjGxDN8ldjQbuL8+uF9Shn
fVKDOzr36K2kWoxjPDTw/GRmqV5QQzw0+LEprNc++Trx0GBcs1ddYmYV8dDA
17+tKLOtknhosdVyenX+N5eJhxbH7GK23nxaTjy0qHcXTfv58nniocPsiW59
3i2lxEMHYUlODFYUEw8dFjSnCjonFxAPPeY3/iAU7jhDPPS4oHswvmbDSeKh
R+3ySSeL+3+n74MBL1Oj+UGjx4iHAdZsxztNEb8SDwMKXLymRl86RDyMcGov
UbXa7yceRsC9xVGQsod4GLF6pMfFqNlOPEz4++H3rtPPxBAPE9Qpnry0xAji
YcKELcs9L3FfEo8hWJuVWqu9D/EYgn0ovyX4iTPxGMLhssEjPRUK/pv7YaZ7
wuP9D2ByAAE=
           "]], {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0.05, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, 
     PlotRange -> {{0.05, 1.}, {-8.972919023226067*^-19, 
      1.1533064798146968`}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xT8f", "(", "x", ")"}], 
       RowBox[{"x", " ", 
         RowBox[{"T8", "(", "x", ")"}]}]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7830049647555447`*^9, 3.783005016956321*^9}, 
   3.7830868054565077`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Clear", "[", "xT15f", "]"}], "\[IndentingNewLine]", 
     RowBox[{"xT15f", "[", 
      RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}]}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
         RowBox[{"x", "^", 
          RowBox[{"(", 
           RowBox[{"1", "-", "c", "-", 
            RowBox[{"z", "*", 
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         "*", 
         RowBox[{"MellinT15f", "[", 
          RowBox[{"c", "+", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783005059087842*^9, 3.783005066098435*^9}, {
  3.7830865735331497`*^9, 3.783086576177929*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xT15f", "[", "x", "]"}], ",", 
      RowBox[{"x", "*", 
       RowBox[{"T15", "[", "x", "]"}]}]}], "}"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0.01", ",", "1", ",", " ", "0.01"}], "}"}], ",", " ", 
    
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.783005082450184*^9, 3.7830051143158617`*^9}, {
  3.783086580795094*^9, 3.783086582880137*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Clear", "[", "xT24f", "]"}], "\[IndentingNewLine]", 
     RowBox[{"xT24f", "[", 
      RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}]}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
         RowBox[{"x", "^", 
          RowBox[{"(", 
           RowBox[{"1", "-", "c", "-", 
            RowBox[{"z", "*", 
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
         "*", 
         RowBox[{"MellinT24f", "[", 
          RowBox[{"c", "+", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7830051801894913`*^9, 3.783005185545103*^9}, {
  3.783086587109846*^9, 3.783086589473741*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "NOW", " ", "WE", " ", "START", " ", "WITH", " ", "THE", " ", "SINGLET", 
   " ", "TERMS"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783076701364079*^9, 3.783076708775663*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "DEFINE", " ", "LINEAR", " ", "SYSTEM", " ", "IN", " ", "J", " ", "SPACE"}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.7830769220470133`*^9, 3.7830769304264317`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gammaqg", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"TR", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", "j", "+", 
        RowBox[{"j", "^", "2"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"j", "*", 
        RowBox[{"(", 
         RowBox[{"j", "+", "1"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"j", "+", "2"}], ")"}]}], ")"}]}]}], " ", "/.", " ", 
    RowBox[{"TR", " ", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gammagq", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"CF", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", "j", "+", 
        RowBox[{"j", "^", "2"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"j", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"j", "^", "2"}], "-", "1"}], ")"}]}], ")"}]}]}], " ", "/.", 
    " ", 
    RowBox[{"CF", " ", "\[Rule]", " ", 
     RowBox[{"4", "/", "3"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gammagg", "[", 
    RowBox[{"j_", ",", "nf_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "*", "CA", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "12"}], " ", "+", " ", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"j", "*", 
           RowBox[{"(", 
            RowBox[{"j", "-", "1"}], ")"}]}], ")"}]}], " ", "+", " ", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"j", "+", "1"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"j", "+", "2"}], ")"}]}], ")"}]}], " ", "-", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"1", "/", "k"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", "2", ",", "j"}], "}"}]}], "]"}]}], ")"}]}], " ", 
     "-", " ", 
     RowBox[{
      RowBox[{"2", "/", "3"}], "*", "nf", "*", "TR"}]}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CA", " ", "\[Rule]", " ", "3"}], ",", 
      RowBox[{"TR", " ", "\[Rule]", " ", 
       RowBox[{"1", "/", "2"}]}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783076859466496*^9, 3.7830768698583307`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "M", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", "[", 
    RowBox[{"j_", ",", " ", "nf_"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], ",", " ", 
       RowBox[{"2", "*", "nf", "*", 
        RowBox[{"gammaqg", "[", "j", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gammagq", "[", "j", "]"}], ",", " ", 
       RowBox[{"gammagg", "[", 
        RowBox[{"j", ",", " ", "nf"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"val1", "[", 
    RowBox[{"j_", ",", " ", "nf_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"M", "[", 
      RowBox[{"j", ",", " ", "nf"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"val2", "[", 
    RowBox[{"j_", ",", " ", "nf_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"M", "[", 
      RowBox[{"j", ",", " ", "nf"}], "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vec1", "[", 
    RowBox[{"j_", ",", " ", "nf_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"M", "[", 
      RowBox[{"j", ",", " ", "nf"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vec2", "[", 
    RowBox[{"j_", ",", " ", "nf_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"M", "[", 
      RowBox[{"j", ",", " ", "nf"}], "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Diag", "[", 
    RowBox[{"j_", ",", " ", "nf_"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"val1", "[", 
        RowBox[{"j", ",", " ", "nf"}], "]"}], ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"val2", "[", 
        RowBox[{"j", ",", " ", "nf"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"j_", ",", " ", "nf_"}], "]"}], " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vec1", "[", 
       RowBox[{"j", ",", " ", "nf"}], "]"}], ",", " ", 
      RowBox[{"vec2", "[", 
       RowBox[{"j", ",", " ", "nf"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Pinv", "[", 
    RowBox[{"j_", ",", " ", "nf_"}], "]"}], " ", "=", " ", 
   RowBox[{"Inverse", "[", 
    RowBox[{"P", "[", 
     RowBox[{"j", ",", " ", "nf"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783076949674172*^9, 3.783076991080571*^9}, {
  3.783077081918084*^9, 3.783077146087276*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Procedure", " ", "with", " ", "T_", "15"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783077704332592*^9, 3.783077709435925*^9}, {
  3.783077755195415*^9, 3.7830777583654547`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Make", " ", "it", " ", "evolve", " ", "to", " ", "Q"}], " ", "=",
     " ", "mCharm"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Obtain", " ", "Mellin", " ", "transform", " ", "of", " ", "gluons"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.783077619621538*^9, 3.783077629656206*^9}, {
  3.783077791806322*^9, 3.783077805198539*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "Melling", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Melling", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", 
       RowBox[{"(", 
        RowBox[{"j", "-", "1"}], ")"}]}], "*", 
      RowBox[{"g", "[", "x", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"j", ">", "2"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7830776553162813`*^9, 3.783077664576178*^9}, {
  3.783078684687722*^9, 3.783078692270195*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MellinT15W0", "[", "j_", "]"}], ",", " ", 
     RowBox[{"MellingW0", "[", "j_", "]"}]}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Pinv", "[", 
     RowBox[{"j", ",", " ", "3"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MellinT15", "[", "j", "]"}], ",", " ", 
      RowBox[{"Melling", "[", "j", "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.783077361713822*^9, 3.78307738467213*^9}, {
   3.783077771450294*^9, 3.783077775360647*^9}, {3.783077843692195*^9, 
   3.783077845992531*^9}, 3.783090650496056*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "PDE1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDE1", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"MellinT15W", "[", 
       RowBox[{"j", ",", "t"}], "]"}], ",", " ", "t"}], "]"}], " ", 
    "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"alphaS3", "[", "t", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "\[Pi]", "*", "t"}], ")"}]}], "*", 
     RowBox[{"val1", "[", 
      RowBox[{"j", ",", " ", "3"}], "]"}], "*", 
     RowBox[{"MellinT15W", "[", 
      RowBox[{"j", ",", "t"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7830779317849407`*^9, 3.783077958704092*^9}, {
   3.7830779956776457`*^9, 3.783077997277322*^9}, 3.783078261165544*^9, {
   3.7830784492900467`*^9, 3.783078466701271*^9}, {3.7834274948435993`*^9, 
   3.783427494900507*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "PDE2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDE2", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"MellingW", "[", 
       RowBox[{"j", ",", "t"}], "]"}], ",", " ", "t"}], "]"}], " ", 
    "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"alphaS3", "[", "t", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "\[Pi]", "*", "t"}], ")"}]}], "*", 
     RowBox[{"val2", "[", 
      RowBox[{"j", ",", " ", "3"}], "]"}], "*", 
     RowBox[{"MellingW", "[", 
      RowBox[{"j", ",", "t"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783077942958746*^9, 3.783077944069212*^9}, {
   3.783077999102715*^9, 3.783077999562995*^9}, 3.783078264689658*^9, {
   3.783078470411571*^9, 3.7830784759800053`*^9}, {3.7834274973034363`*^9, 
   3.783427497406292*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sol1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol1", " ", "=", " ", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"PDE1", ",", " ", 
       RowBox[{
        RowBox[{"MellinT15W", "[", 
         RowBox[{"j", ",", 
          RowBox[{"Q0", "^", "2"}]}], "]"}], " ", "\[Equal]", " ", 
        RowBox[{"MellinT15W0", "[", "j", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"MellinT15W", "[", 
      RowBox[{"j", ",", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", "t"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783077937432897*^9, 3.7830779413904533`*^9}, {
  3.783078425255138*^9, 3.7830784312764883`*^9}, {3.7830784848934507`*^9, 
  3.7830784870150003`*^9}, {3.7830785304495583`*^9, 3.783078545740033*^9}, {
  3.7830787762414837`*^9, 3.783078779235775*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sol2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", " ", "=", " ", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"PDE2", ",", " ", 
       RowBox[{
        RowBox[{"MellingW", "[", 
         RowBox[{"j", ",", 
          RowBox[{"Q0", "^", "2"}]}], "]"}], " ", "\[Equal]", " ", 
        RowBox[{"MellingW0", "[", "j", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"MellingW", "[", 
      RowBox[{"j", ",", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", "t"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7830787894653273`*^9, 3.78307879248835*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MellinT15Wuse", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT15Wuse", "[", 
    RowBox[{"j_", ",", "t_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"MellinT15W", "[", 
     RowBox[{"j", ",", "t"}], "]"}], "/.", 
    RowBox[{"sol1", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783078240363708*^9, 3.783078242457938*^9}, {
  3.7830783725914507`*^9, 3.783078373782069*^9}, {3.7830788204869957`*^9, 
  3.783078844227247*^9}, {3.783085123228011*^9, 3.783085125223544*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MellingWuse", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellingWuse", "[", 
    RowBox[{"j_", ",", "t_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"MellingW", "[", 
     RowBox[{"j", ",", "t"}], "]"}], "/.", 
    RowBox[{"sol2", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783078380129236*^9, 3.783078381198235*^9}, {
  3.78308528841511*^9, 3.783085291284603*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Return", " ", "to", " ", "non"}], "-", 
    RowBox[{"diagonal", " ", "solutions"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MellinT15use", "[", 
       RowBox[{"j_", ",", " ", "t_"}], "]"}], ",", " ", 
      RowBox[{"Mellinguse", "[", 
       RowBox[{"j_", ",", "t_"}], "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"j", ",", "3"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MellinT15Wuse", "[", 
        RowBox[{"j", ",", "t"}], "]"}], ",", " ", 
       RowBox[{"MellingWuse", "[", 
        RowBox[{"j", ",", "t"}], "]"}]}], "}"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7830856377319098`*^9, 3.783085661427904*^9}, {
  3.783085699640027*^9, 3.783085753729308*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Make", " ", "T15", " ", "and", " ", "g", " ", "evolve", " ", "to", " ", 
    "Q"}], " ", "=", " ", "mCharm"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783085166184593*^9, 3.783085177258298*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MellinT15usemC", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "MellingusemC", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT15usemC", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT15use", "[", 
    RowBox[{"j", ",", 
     RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellingusemC", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"Mellinguse", "[", 
    RowBox[{"j", ",", 
     RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783085181441812*^9, 3.78308526114257*^9}, {
  3.783085809295789*^9, 3.783085846496819*^9}, {3.783085982576586*^9, 
  3.783085985854907*^9}, {3.7830871538672543`*^9, 3.783087179366783*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Make", " ", "T15", " ", "evolve", " ", "as", " ", "non"}], "-", 
    RowBox[{"singlet", " ", "from", " ", "mCharm"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MellinT15Ev2", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"MellinT15usemC", "[", "j", "]"}], " ", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alphaCharm", "/", 
         RowBox[{"alphaS4", "[", "t", "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gammaqq", "[", "j", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "b4"}], ")"}]}], ")"}]}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MellingEv2", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"MellingusemC", "[", "j", "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alphaCharm", "/", 
         RowBox[{"alphaS4", "[", "t", "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gammaqq", "[", "j", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "b4"}], ")"}]}], ")"}]}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.783085199942185*^9, 3.783085248809758*^9}, 
   3.783085360205481*^9, {3.7830853945048018`*^9, 3.783085408409108*^9}, {
   3.783085901490876*^9, 3.7830859175922213`*^9}, {3.7830859643747873`*^9, 
   3.783085965157897*^9}, {3.783086094749855*^9, 3.7830861023708267`*^9}, {
   3.783091862387272*^9, 3.783091886450564*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Make", " ", "them", " ", "evolve", " ", "to", " ", "mBottom"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.783086242133892*^9, 3.783086244949843*^9}, {
  3.783086648929175*^9, 3.783086656937729*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT15mB", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT15Ev2", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MellingmB", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"MellingEv2", "[", 
      RowBox[{"j", ",", " ", 
       RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.783085397597629*^9, 3.783085398988935*^9}, {
  3.783086666002549*^9, 3.7830866772506123`*^9}, {3.7830874785946293`*^9, 
  3.783087495561569*^9}, {3.783093839308606*^9, 3.783093841788443*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Make", " ", "T15", " ", "and", " ", "g", " ", "evolve", " ", "to", " ", 
   "Qfinal"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7830874991636467`*^9, 3.783087500310906*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT15Ev3", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinT15mB", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaBottom", "/", 
       RowBox[{"alphaS5", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b5"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MellingEv3", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"MellingmB", "[", "j", "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alphaBottom", "/", 
         RowBox[{"alphaS5", "[", "t", "]"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gammaqq", "[", "j", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "b5"}], ")"}]}], ")"}]}]}]}], ";"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.783087524202022*^9, 3.783087563780504*^9}, {
  3.783092181950145*^9, 3.783092184541482*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT15f", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT15Ev3", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Mellingf", "[", "j_", "]"}], " ", "=", " ", 
     RowBox[{"MellinT24Ev3", "[", 
      RowBox[{"j", ",", " ", 
       RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.783087534346319*^9, 3.783087540294137*^9}, {
  3.7830876589479933`*^9, 3.7830876661078873`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"MellinV1Ev2", "[", 
     RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"MellinV1mC", "[", "j", "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"alphaCharm", "/", 
        RowBox[{"alphaS4", "[", "t", "]"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"gammaqq", "[", "j", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "\[Pi]", "*", "b4"}], ")"}]}], ")"}]}]}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.783440042790475*^9, 3.783440045498317*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "xT15f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xT15f", "[", 
    RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "c", "-", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
        "*", 
        RowBox[{"MellinT15f", "[", 
         RowBox[{"c", "+", 
          RowBox[{"z", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.783087742339319*^9, 3.783087753464367*^9}, {
  3.7834337749041977`*^9, 3.7834337764153147`*^9}, {3.783433941795539*^9, 
  3.7834339441657877`*^9}, {3.783434230933898*^9, 3.783434233415166*^9}, {
  3.7834399898031588`*^9, 3.783439992064702*^9}, {3.783440365439249*^9, 
  3.783440366422649*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xT15f", "[", "x", "]"}], ",", 
     RowBox[{"x", "*", 
      RowBox[{"T15", "[", "x", "]"}]}]}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.05", ",", "1", ",", " ", "0.01"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.783087808312138*^9, 3.783087811449184*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 1.1167577420279498`}, {0.05, 0}}, {{
              0.060000000000000005`, 1.0929212112153064`}, {
              0.060000000000000005`, 0}}, {{0.07, 1.0688064563598483`}, {
              0.07, 0}}, {{0.08, 1.044358249006626}, {0.08, 0}}, {{0.09, 
              1.0196012681701088`}, {0.09, 0}}, {{0.1, 0.9945839718041819}, {
              0.1, 0}}, {{0.11, 0.9693586901466615}, {0.11, 0}}, {{
              0.12000000000000001`, 0.9439749341686982}, {
              0.12000000000000001`, 0}}, {{0.13, 0.9184777700875366}, {
              0.13, 0}}, {{0.14, 0.892908008535181}, {0.14, 0}}, {{
              0.15000000000000002`, 0.8673029915611089}, {
              0.15000000000000002`, 0}}, {{0.16, 0.8416974346413567}, {
              0.16, 0}}, {{0.16999999999999998`, 0.8161241784953598}, {
              0.16999999999999998`, 0}}, {{0.18, 0.7906147591664132}, {
              0.18, 0}}, {{0.19, 0.7651998338917326}, {0.19, 0}}, {{0.2, 
              0.7399094540903158}, {0.2, 0}}, {{0.21000000000000002`, 
              0.7147732286130849}, {0.21000000000000002`, 0}}, {{
              0.22000000000000003`, 0.6898203955951246}, {
              0.22000000000000003`, 0}}, {{0.22999999999999998`, 
              0.6650798284765501}, {0.22999999999999998`, 0}}, {{0.24, 
              0.6405799864017963}, {0.24, 0}}, {{0.25, 0.6163488372201142}, {
              0.25, 0}}, {{0.26, 0.592413752779224}, {0.26, 0}}, {{0.27, 
              0.5688013942836564}, {0.27, 0}}, {{0.28, 0.5455375872104725}, {
              0.28, 0}}, {{0.29, 0.5226472121990278}, {0.29, 0}}, {{0.3, 
              0.5001540715320368}, {0.3, 0}}, {{0.31, 0.47808079382503843`}, {
              0.31, 0}}, {{0.32, 0.4564487278861906}, {0.32, 0}}, {{0.33, 
              0.4352778544787753}, {0.33, 0}}, {{0.33999999999999997`, 
              0.4145867134884283}, {0.33999999999999997`, 0}}, {{0.35, 
              0.3943923216374824}, {0.35, 0}}, {{0.36, 
              0.37471013942552933`}, {0.36, 0}}, {{0.37, 
              0.35555402509854106`}, {0.37, 0}}, {{0.38, 
              0.33693620549314657`}, {0.38, 0}}, {{0.39, 
              0.31886726100831386`}, {0.39, 0}}, {{0.4, 0.3013561295126162}, {
              0.4, 0}}, {{0.41, 0.28441006836166743`}, {0.41, 0}}, {{0.42, 
              0.26803475698235696`}, {0.42, 0}}, {{0.43, 
              0.2522342355357348}, {0.43, 0}}, {{0.44, 
              0.23701097714984695`}, {0.44, 0}}, {{0.45, 
              0.22236592379008455`}, {0.45, 0}}, {{0.46, 
              0.2082985304783394}, {0.46, 0}}, {{0.47, 
              0.19480681836725655`}, {0.47, 0}}, {{0.48, 
              0.1818874185889348}, {0.48, 0}}, {{0.49, 
              0.16953570413139696`}, {0.49, 0}}, {{0.5, 
              0.15774571469985277`}, {0.5, 0}}, {{0.51, 0.146510367912375}, {
              0.51, 0}}, {{0.52, 0.1358214590169552}, {0.52, 0}}, {{0.53, 
              0.12566974778510842`}, {0.53, 0}}, {{0.54, 
              0.11604503316567356`}, {0.54, 0}}, {{0.55, 
              0.10693622856590218`}, {0.55, 0}}, {{0.56, 
              0.09833143710459397}, {0.56, 0}}, {{0.5700000000000001, 
              0.09021802684243009}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.08258270557992131}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.07541159332366869}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.06869029740166745}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.062403980471579926`}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.056537430978401644`}, {
              0.6200000000000001, 0}}, {{0.63, 0.05107512979666251}, {
              0.63, 0}}, {{0.64, 0.04600131490792636}, {0.64, 0}}, {{0.65, 
              0.041300043653558854`}, {0.65, 0}}, {{0.66, 
              0.036955252428595695`}, {0.66, 0}}, {{0.67, 
              0.032950813710405084`}, {0.67, 0}}, {{0.68, 
              0.02927059028565934}, {0.68, 0}}, {{0.6900000000000001, 
              0.025898486946634623`}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 0.022818498860099855`}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              0.020014757507065852`}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 0.017471573603302207`}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              0.015173477387648262`}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 0.013105256069081974`}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              0.011251988313568915`}, {0.7500000000000001, 0}}, {{0.76, 
              0.009599076942851482}, {0.76, 0}}, {{0.77, 
              0.008132278413436576}, {0.77, 0}}, {{0.78, 
              0.006837730301929862}, {0.78, 0}}, {{0.79, 
              0.005701976518916814}, {0.79, 0}}, {{0.8, 
              0.004711990461185097}, {0.8, 0}}, {{0.81, 
              0.003855196259604017}, {0.81, 0}}, {{0.8200000000000001, 
              0.0031194882898536867`}, {0.8200000000000001, 0}}, {{
              0.8300000000000001, 0.002493249122018412}, {
              0.8300000000000001, 0}}, {{0.8400000000000001, 
              0.0019653660927597977`}, {0.8400000000000001, 0}}, {{
              0.8500000000000001, 0.0015252466903731127`}, {
              0.8500000000000001, 0}}, {{0.8600000000000001, 
              0.0011628329484806613`}, {0.8600000000000001, 0}}, {{
              0.8700000000000001, 0.0008686150484796109}, {
              0.8700000000000001, 0}}, {{0.8800000000000001, 
              0.0006336443341506291}, {0.8800000000000001, 0}}, {{0.89, 
              0.0004495459438703712}, {0.89, 0}}, {{0.9, 
              0.0003085312664742103}, {0.9, 0}}, {{0.91, 
              0.00020341042605015992`}, {0.91, 0}}, {{0.92, 
              0.00012760499867042085`}, {0.92, 0}}, {{0.93, 
              0.00007516115934141744}, {0.93, 0}}, {{0.9400000000000001, 
              0.00004076344980194395}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 0.000019749346641071086`}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              8.12479056580495*^-6}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 2.5808079216086704`*^-6}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              5.113012691873235*^-7}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 3.1971149889178944`*^-8}, {
              0.9900000000000001, 0}}, {{1., 1.3459378534839102`*^-18}, {
              1., 0}}}, VertexColors -> None]}}}}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[{{{1., 0.}, {1., 0}}}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 1.2104177028899497`}, {0.05, 0}}, {{
              0.060000000000000005`, 1.2162421292055938`}, {
              0.060000000000000005`, 0}}, {{0.07, 1.2219881519525992`}, {
              0.07, 0}}, {{0.08, 1.2271092352432798`}, {0.08, 0}}, {{0.09, 
              1.2313749841313968`}, {0.09, 0}}, {{0.1, 1.234699251079037}, {
              0.1, 0}}, {{0.11, 1.2370614360017294`}, {0.11, 0}}, {{
              0.12000000000000001`, 1.2384685192083777`}, {
              0.12000000000000001`, 0}}, {{0.13, 1.2389363616394282`}, {
              0.13, 0}}, {{0.14, 1.2384806482956752`}, {0.14, 0}}, {{
              0.15000000000000002`, 1.2371128445069735`}, {
              0.15000000000000002`, 0}}, {{0.16, 1.2348388108904869`}, {
              0.16, 0}}, {{0.16999999999999998`, 1.2316588274472209`}, {
              0.16999999999999998`, 0}}, {{0.18, 1.227568341515269}, {
              0.18, 0}}, {{0.19, 1.2225590550408143`}, {0.19, 0}}, {{0.2, 
              1.2166201326510633`}, {0.2, 0}}, {{0.21000000000000002`, 
              1.2097394063537874`}, {0.21000000000000002`, 0}}, {{
              0.22000000000000003`, 1.201904507556814}, {
              0.22000000000000003`, 0}}, {{0.22999999999999998`, 
              1.1931038895847008`}, {0.22999999999999998`, 0}}, {{0.24, 
              1.1833277233331787`}, {0.24, 0}}, {{0.25, 1.172568660425843}, {
              0.25, 0}}, {{0.26, 1.1608224652761325`}, {0.26, 0}}, {{0.27, 
              1.148088521616719}, {0.27, 0}}, {{0.28, 1.1343702214268472`}, {
              0.28, 0}}, {{0.29, 1.119675245433891}, {0.29, 0}}, {{0.3, 
              1.1040157449041594`}, {0.3, 0}}, {{0.31, 1.0874084345320536`}, {
              0.31, 0}}, {{0.32, 1.069874606053294}, {0.32, 0}}, {{0.33, 
              1.0514400718544368`}, {0.33, 0}}, {{0.33999999999999997`, 
              1.032135047396963}, {0.33999999999999997`, 0}}, {{0.35, 
              1.0119939807649325`}, {0.35, 0}}, {{0.36, 0.9910553371099646}, {
              0.36, 0}}, {{0.37, 0.9693613452251009}, {0.37, 0}}, {{0.38, 
              0.9469577129421866}, {0.38, 0}}, {{0.39, 0.9238933175234755}, {
              0.39, 0}}, {{0.4, 0.9002198767119363}, {0.4, 0}}, {{0.41, 
              0.8759916056190181}, {0.41, 0}}, {{0.42, 0.851264864164829}, {
              0.42, 0}}, {{0.43, 0.8260977993444194}, {0.43, 0}}, {{0.44, 
              0.8005499861751331}, {0.44, 0}}, {{0.45, 0.7746820707835067}, {
              0.45, 0}}, {{0.46, 0.7485554187153792}, {0.46, 0}}, {{0.47, 
              0.7222317711990336}, {0.47, 0}}, {{0.48, 0.6957729117576107}, {
              0.48, 0}}, {{0.49, 0.6692403452528838}, {0.49, 0}}, {{0.5, 
              0.6426949911470087}, {0.5, 0}}, {{0.51, 0.616196892491254}, {
              0.51, 0}}, {{0.52, 0.5898049418902673}, {0.52, 0}}, {{0.53, 
              0.5635766254463601}, {0.53, 0}}, {{0.54, 0.5375677854599505}, {
              0.54, 0}}, {{0.55, 0.5118324024490077}, {0.55, 0}}, {{0.56, 
              0.4864223968514549}, {0.56, 0}}, {{0.5700000000000001, 
              0.46138745058943725`}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.4367748485025567}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.41262933949808395`}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.38899301711927475`}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.36590521909773804`}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.3434024453318782}, {
              0.6200000000000001, 0}}, {{0.63, 0.32151829362032}, {
              0.63, 0}}, {{0.64, 0.30028341237648143`}, {0.64, 0}}, {{0.65, 
              0.2797254694577297}, {0.65, 0}}, {{0.66, 0.2598691361593944}, {
              0.66, 0}}, {{0.67, 0.24073608535003346`}, {0.67, 0}}, {{0.68, 
              0.2223450026593415}, {0.68, 0}}, {{0.6900000000000001, 
              0.20471160957367715`}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 0.18784869724604603`}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              0.17176616978723214`}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 0.15647109577236615`}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              0.14196776667232003`}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 0.1282577609017293}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              0.11534001216500032`}, {0.7500000000000001, 0}}, {{0.76, 
              0.1032108807782341}, {0.76, 0}}, {{0.77, 0.09186422664853407}, {
              0.77, 0}}, {{0.78, 0.08129148260265646}, {0.78, 0}}, {{0.79, 
              0.0714817267744903}, {0.79, 0}}, {{0.8, 
              0.062421752785635255`}, {0.8, 0}}, {{0.81, 
              0.054096136485715623`}, {0.81, 0}}, {{0.8200000000000001, 
              0.04648729805958956}, {0.8200000000000001, 0}}, {{
              0.8300000000000001, 0.039575558358125464`}, {
              0.8300000000000001, 0}}, {{0.8400000000000001, 
              0.03333918836895158}, {0.8400000000000001, 0}}, {{
              0.8500000000000001, 0.0277544508153507}, {
              0.8500000000000001, 0}}, {{0.8600000000000001, 
              0.02279563295791194}, {0.8600000000000001, 0}}, {{
              0.8700000000000001, 0.018435069778566834`}, {
              0.8700000000000001, 0}}, {{0.8800000000000001, 
              0.014643156856070313`}, {0.8800000000000001, 0}}, {{0.89, 
              0.01138835240476421}, {0.89, 0}}, {{0.9, 
              0.008637168158566454}, {0.9, 0}}, {{0.91, 
              0.006354149062183115}, {0.91, 0}}, {{0.92, 
              0.004501842119529098}, {0.92, 0}}, {{0.93, 
              0.0030407553121009306`}, {0.93, 0}}, {{0.9400000000000001, 
              0.0019293083619071243`}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 0.001123778522546713}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              0.0005782470784750107}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 0.0002445571389159266}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              0.00007230443890042176}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 8.914354279374346*^-6}, {
              0.9900000000000001, 0}}}, VertexColors -> None]}}}}}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJwtlAlM02cYxjk0EzqnDtiGOMSpQ7CECIwRpX1gUwElKJURMBCBoA4k88Jj
cggbp4sDHJPLTREZ4lFkBW2DOkQQh4Vxl0OhLTctLYeyiZsZ/XjfpPkn/6TP
9z7P7/n+a8IOC/Yb6Onphcz/dM/8PN2U4rKRJJjXNwWJZbLKVyzE+vCKmfzY
Kah9xfNvynHUIk7abj6FGFOhh+JMBcxLpW/vVE7CWFZ0hGd8DxzDoENeuyex
oCdBVYNebWGbFjZBGTWvNtzH9MMlSf8u0pL+Q2yc/ktl/JkG1+b/LSuqRraV
afzG8Ak67xEaZP3NogtqODnq5jHsdi5zmq5W0fm16OYGn7DXjmNefP6EOpjl
GUbf+Xic9qlHWOAzwT3vMQh0cr5PYfNOWVBS7Cjt9ye2OEfm+N8egfKMTrAB
GWGWFlH9w7Bl+0ph7TrsYmAyDLbekUYkWq+I/8pzCExO3ISHG7/LKzw7CD02
zTj2eaDDGskA+WnG+f33y5a+UsJToTugBQU1O9/86qgkfy0Y6XrN45xQIIMZ
aIVf+aniFIkczK5jG2JWp6z6Ul8OZkfWhuvV2fby3D7y346kgmuSaOcXWK1b
x7IDBxwji3N6eymPDpTHTVdeTOvBATadmItv2iHhdVM+Mijf/OTq9kYGnZqp
UIbZvCM39z/qpLy6sOxSb39QZgdmdXKvuhCtObZZ8HU75deNbVw7l0NebWDx
8Hpg8V6W1xPHVjC7ih60nO91i7FuAVsvuRd1wrXLC9Y1Ux+e4+zBNrsQ/yY0
SnXzHPVc56zYk1IcZYIvsPnZSnFKaQOYXdM+bI2aXfKN9inl3wdlgIP7B571
YHJB/Whu35cZIKojHnJE2TyfNdhUS37kEP2+l9NTXUN85AgXeM3lhj0if3JU
iCLdps2qiZcC23btumhV+YD8KlAhPubEDakifgqoo9JqwJWAz/wrEfiFVJD6
0T1kMgBK7N4jHFi7rpL6pYRF3PIcro+I+jyA0JTBl2U/lyOF5TOAsEVplpEz
ZehieAbQfXNl2LfTtyivQVxx2PJP0qc3iP8g3BKc3sacL6H8BrEqrjDRY30x
9WEIT7ZvSpSqrlKeQ+g/l9I50XcFj1k/hnBKylm+6vUvMGP5DqMzqcnok+R8
HGR9GcbMjvD0quAcuq/DsP5BXPRHfDY4rD8j0E+Yil4xmIVglv8IhKu5pdtM
MlDG+jQC94T68onOc9BnPEbx/swFH09OKvEYhV+Jn7fw+vfEYxTvml3WlJQk
EI9ReHwY4abQjyUeYzC7/eDGy72niMcY0oVyH4X3ceIxhszQwCpN9mHiMY7Q
v9XJxj9GEI9xyGGiEUeFE49xbD08p7xpHkI8VKgqb7UJ/C+AeKiQ9VZv3/al
e4iHCsdLNZdOn/Sm74MauVNXu8IfbyUeagR6JlqtOckjHmpE+C8W7XRxIh4T
qAvwcReU2hKPifl7mJdzV2JFPCYQX3ZJOScyIR4aHLcPPm23bzHx0KA3Pbg2
qvIlf4GHBmJ+xN1ZIwV/gYcWFReaN/B/q+Mv8NDixd5boZwNhfwFHlqkxkZ3
mNqG8hfuxyRC1I2LDdtdXP8HwILx4A==
           "]], {}}}}, {{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJw1lAtQVHUUxhcMJJSUWnDEBLGhISkRMXAy+BSaxCRLhgYnBMTKB8qIGAOD
+UpBEjcYyBjQGlCSUFlkJREGHEAgBBZZHi6Cwu7CsuyDXXYvVIhUu38PZ+bO
zr139jvn+37nf933Hgn7xprH4+0xX5bfgnxLleK3n22nhqI4VLumaXfeE+LY
tqwdNUkcdDvvmZ9UwL+lPTFYwOE4X7hVnloJSa/b9oCrHOyl1xIC7KvwxWcx
W+7e4fBSrxrpx7/jhTdweGd3VuO0Zy2kYbf0vPZ5/ft411oU1dTFodj8b+m1
epQv9TEIu+f7NSDpQo6TxPx+g6+lHmC36ofHfu3z/ZswLNoWMWbWN4ubOzSj
JXFWMVw5P8+feHQ5/Y5rMYcwi9zOVsQHxzsVZM3P9xA/BTvf+jiZgyLVItiG
9QLvP5ZFcljD5u3ATaNgI28TBzZeghiHTSUuU84cmNy9Tpz53dpBrTeBx6oL
/FMOkdJGE/npQqSXOLcmx4QQuaWBBNIVvY450SbyJ0HKl6Vfxb5tQhYz0A3P
FH7eOo0RzK5vD064ag4uvmEEsyPtwaLI2b22+4zkvxc9K+v6Nrga4WYZx7UP
scs9ekTdk5RHH05budgXnp3EPlaPIfUQ5a/ymaR8pOjdVCasvmuARY0vlEJo
SnaytjFQXv3YsmAmKPVTPf6yyE33I8b3n6qM7AnK7wk+nH1fk9+pA4snYADq
DL+LbnY6MLvyAewJff4oK0ALNl7aIMIPGa5/fURD+/AU6w3vWa34VQ1xh6We
os1qwGF92ziOMsFniHg1/OSaKRWYXf4QnneXidPeVFH+Q3jiLhQ0B4+Bye0e
xmD76Zq4OCXxkME4aec8nT1KfmT4RFScqagaIT4yuCx47RfhsIL8yWBfpOiX
2CmIlxyfywIiG3zl5FcO0fWKXfo9MuInh7df0f5M92EEMv8K3Nnc9EHM+WfI
ZgAUiFrz/UnXqUHaLwXe0haOnDswQPs8Am1u9d9Byn6ks3xG0JMSVT0XJ0U/
wzMC762vbN7xvI/yGkVkln1yQ24v8R/F5cU6jdS/h/IbhSm5vcRGJaF9UGL6
cZCnqKiL8lTikqT5ekJXJx6w/VDimOawozipA04s3zFIT61MnPNtw362L2OY
DL3qFL+olc7rGGRi5dIjL5qxiO2PCu0hP5YHLmxCFMtfhWxxivE/r0aUs31S
IWc2mF8fVw8rxmMcCPQK1aXXEY9x1N7MCFh4uIZ4jENwd9XMwXNVxGMc8c0b
H5x7VEk81Fi9pDG6MFREPNSw0Wcm3Z8uJx5qXCxYtvqE6Cbx0CCv67Z8rbiE
eGjgMVMbi+Bi4qFBsSDhfJ9jEfHQInNJyI3SQ1eIhxaV3Fq7uog84qHFrUs+
ecWyHPo+6PBvy7eBm+YExMN8P+f4sCXsPPHQYfkGL+eo22eIxwSSZSVjnbap
xGMCDrvE9ukJicRjAv4OT9+YGD9APPToHYrmr7gSQzz0iDnqwUs5GEY89FgW
u8XjtimIeBgw1zqqfmG7jngYYLs9UPzR1OvEw4CzZcq0wQpF4MvzMUnnhMf7
HzZZA4Q=
           "]], {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0.05, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, PlotRange -> {{0.05, 1.}, {0, 1.2389363616394282`}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xT15f", "(", "x", ")"}], 
       RowBox[{"x", " ", 
         RowBox[{"T15", "(", "x", ")"}]}]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.783087855504176*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Procedure", " ", "with", " ", "T_", "24"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783088358491825*^9, 3.78308836549664*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Below", " ", "mCharm", " ", "we", " ", "have", " ", "T24"}], " ", 
   "=", " ", "T15"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.783088373953683*^9, 3.783088386914743*^9}, {
  3.783088420560502*^9, 3.783088431824589*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT24mC", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT15use", "[", 
    RowBox[{"j", ",", 
     RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellingmC", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"Mellinguse", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mCharm", "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783088440558277*^9, 3.783088442109868*^9}, 
   3.783088473321356*^9, {3.783089817178257*^9, 3.783089818023534*^9}, {
   3.783090252406294*^9, 3.783090284893146*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MellinT24WmC", "[", "j_", "]"}], ",", " ", 
     RowBox[{"MellingWmC", "[", "j_", "]"}]}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Pinv", "[", 
     RowBox[{"j", ",", "4"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MellinT24mC", "[", "j", "]"}], ",", " ", 
      RowBox[{"MellingmC", "[", "j", "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7830903227557917`*^9, 3.783090439620882*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "PDE3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDE3", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"MellinT24W", "[", 
       RowBox[{"j", ",", "t"}], "]"}], ",", " ", "t"}], "]"}], " ", 
    "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"alphaS4", "[", "t", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "\[Pi]", "*", "t"}], ")"}]}], "*", 
     RowBox[{"val1", "[", 
      RowBox[{"j", ",", " ", "4"}], "]"}], "*", 
     RowBox[{"MellinT24W", "[", 
      RowBox[{"j", ",", "t"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7830904907370577`*^9, 3.783090533541409*^9}, {
  3.783440871825651*^9, 3.7834408719142637`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "PDE4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDE4", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"MellingW2", "[", 
       RowBox[{"j", ",", "t"}], "]"}], ",", " ", "t"}], "]"}], " ", 
    "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"alphaS4", "[", "t", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "\[Pi]", "*", "t"}], ")"}]}], "*", 
     RowBox[{"val2", "[", 
      RowBox[{"j", ",", " ", "4"}], "]"}], "*", 
     RowBox[{"MellingW2", "[", 
      RowBox[{"j", ",", "t"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783090494195256*^9, 3.783090497372534*^9}, {
  3.783090626285652*^9, 3.7830906311263847`*^9}, {3.7830907367504168`*^9, 
  3.783090738437183*^9}, {3.783440874445722*^9, 3.783440874572309*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sol3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol3", " ", "=", " ", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"PDE3", ",", " ", 
       RowBox[{
        RowBox[{"MellinT24W", "[", 
         RowBox[{"j", ",", 
          RowBox[{"mCharm", "^", "2"}]}], "]"}], " ", "\[Equal]", " ", 
        RowBox[{"MellinT24WmC", "[", "j", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"MellinT24W", "[", 
      RowBox[{"j", ",", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", "t"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783090507879319*^9, 3.78309051310576*^9}, {
  3.783090763680316*^9, 3.783090861063282*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sol4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol4", " ", "=", " ", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"PDE4", ",", " ", 
       RowBox[{
        RowBox[{"MellingW2", "[", 
         RowBox[{"j", ",", 
          RowBox[{"mCharm", "^", "2"}]}], "]"}], " ", "\[Equal]", " ", 
        RowBox[{"MellingWmC", "[", "j", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"MellingW2", "[", 
      RowBox[{"j", ",", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", "t"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783090781293982*^9, 3.783090783494521*^9}, {
  3.783090869570644*^9, 3.783090892341202*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MellinT24Wuse", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT24Wuse", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{"MellinT24W", "[", 
     RowBox[{"j", ",", "t"}], "]"}], " ", "/.", " ", 
    RowBox[{"sol3", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "MellingW2use", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellingW2use", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellingW2", "[", 
     RowBox[{"j", ",", " ", "t"}], "]"}], " ", "/.", " ", 
    RowBox[{"sol4", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783090970656951*^9, 3.783091014623657*^9}, {
  3.7830913234219112`*^9, 3.783091380458255*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Return", " ", "to", " ", "non"}], "-", 
   RowBox[{"diagonal", " ", "solution"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.78309091070089*^9, 3.7830909175907307`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MellinT24use", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], ",", " ", 
     RowBox[{"Melling2use", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}]}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"j", ",", " ", "4"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MellinT24Wuse", "[", 
       RowBox[{"j", ",", " ", "t"}], "]"}], ",", " ", 
      RowBox[{"MellingW2use", "[", 
       RowBox[{"j", ",", " ", "t"}], "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.783090941137836*^9, 3.783090951239959*^9}, {
  3.783091415666543*^9, 3.7830914816177893`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Make", " ", "T24", " ", "and", " ", "g", " ", "evolve", " ", "to", " ", 
    "Q"}], " ", "=", " ", "mBottom"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783091671335203*^9, 3.783091716460978*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MellinT24mB", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "Melling2mB", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT24mB", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT24use", "[", 
    RowBox[{"j", ",", 
     RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Melling2mB", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"Melling2use", "[", 
    RowBox[{"j", ",", 
     RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783091767834922*^9, 3.7830918164034767`*^9}, {
  3.7830923047847223`*^9, 3.783092310426523*^9}, {3.783093010498724*^9, 
  3.783093015326797*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Make", " ", "T24", " ", "evolve", " ", "as", " ", "non"}], "-", 
   RowBox[{
   "singlet", " ", "from", " ", "mBottom", " ", "to", " ", "Qfinal"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.783091827724606*^9, 3.783091838121098*^9}, {
  3.7830923202167997`*^9, 3.783092324166502*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinT24Ev3", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellinT24mB", "[", "j", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaBottom", "/", 
       RowBox[{"alphaS5", "[", "t", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gammaqq", "[", "j", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "b5"}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinT24f", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT24Ev3", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783092207382716*^9, 3.783092207537257*^9}, {
  3.783092255526821*^9, 3.783092256670841*^9}, {3.7830922923001633`*^9, 
  3.78309229343088*^9}, {3.783092345180697*^9, 3.783092351127264*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "xT24f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xT24f", "[", 
    RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "c", "-", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
        "*", 
        RowBox[{"MellinT24f", "[", 
         RowBox[{"c", "+", 
          RowBox[{"z", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.783092370841587*^9, 3.783092378054809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xT24f", "[", "x", "]"}], ",", 
     RowBox[{"x", "*", 
      RowBox[{"T24", "[", "x", "]"}]}]}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.05", ",", "1", ",", " ", "0.01"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.783092441100387*^9, 3.783092444623377*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 1.2939472281062956`}, {0.05, 0}}, {{
              0.060000000000000005`, 1.2610095341883187`}, {
              0.060000000000000005`, 0}}, {{0.07, 1.2301841671236642`}, {
              0.07, 0}}, {{0.08, 1.2006513193982726`}, {0.08, 0}}, {{0.09, 
              1.1719589046955845`}, {0.09, 0}}, {{0.1, 1.143839032982546}, {
              0.1, 0}}, {{0.11, 1.116123463430501}, {0.11, 0}}, {{
              0.12000000000000001`, 1.0887016205899003`}, {
              0.12000000000000001`, 0}}, {{0.13, 1.061498404174749}, {
              0.13, 0}}, {{0.14, 1.034461928454186}, {0.14, 0}}, {{
              0.15000000000000002`, 1.0075564242789674`}, {
              0.15000000000000002`, 0}}, {{0.16, 0.9807579455037667}, {
              0.16, 0}}, {{0.16999999999999998`, 0.9540516583269941}, {
              0.16999999999999998`, 0}}, {{0.18, 0.9274300478329022}, {
              0.18, 0}}, {{0.19, 0.9008916262968263}, {0.19, 0}}, {{0.2, 
              0.8744400091089858}, {0.2, 0}}, {{0.21000000000000002`, 
              0.8480831559229371}, {0.21000000000000002`, 0}}, {{
              0.22000000000000003`, 0.821832750118837}, {
              0.22000000000000003`, 0}}, {{0.22999999999999998`, 
              0.7957036618621625}, {0.22999999999999998`, 0}}, {{0.24, 
              0.7697134569758891}, {0.24, 0}}, {{0.25, 0.7438819605893016}, {
              0.25, 0}}, {{0.26, 0.7182308435633226}, {0.26, 0}}, {{0.27, 
              0.6927832414539183}, {0.27, 0}}, {{0.28, 0.6675633984048235}, {
              0.28, 0}}, {{0.29, 0.6425963376270105}, {0.29, 0}}, {{0.3, 
              0.6179075499991382}, {0.3, 0}}, {{0.31, 0.5935227124664837}, {
              0.31, 0}}, {{0.32, 0.5694674232823231}, {0.32, 0}}, {{0.33, 
              0.545766961137153}, {0.33, 0}}, {{0.33999999999999997`, 
              0.5224460654426961}, {0.33999999999999997`, 0}}, {{0.35, 
              0.499528748191132}, {0.35, 0}}, {{0.36, 0.47703807675094784`}, {
              0.36, 0}}, {{0.37, 0.45499606928130815`}, {0.37, 0}}, {{0.38, 
              0.43342353281475055`}, {0.38, 0}}, {{0.39, 
              0.4123399476596381}, {0.39, 0}}, {{0.4, 0.391763369118093}, {
              0.4, 0}}, {{0.41, 0.3717103625506084}, {0.41, 0}}, {{0.42, 
              0.35219585162008343`}, {0.42, 0}}, {{0.43, 
              0.3332332425850659}, {0.43, 0}}, {{0.44, 0.3148342113521353}, {
              0.44, 0}}, {{0.45, 0.29700877366950856`}, {0.45, 0}}, {{0.46, 
              0.27976525568156724`}, {0.46, 0}}, {{0.47, 
              0.2631102971550053}, {0.47, 0}}, {{0.48, 
              0.24704886480752491`}, {0.48, 0}}, {{0.49, 
              0.23158425135540067`}, {0.49, 0}}, {{0.5, 
              0.21671822891743578`}, {0.5, 0}}, {{0.51, 
              0.20245084381021683`}, {0.51, 0}}, {{0.52, 
              0.18878071163271917`}, {0.52, 0}}, {{0.53, 
              0.17570494563480338`}, {0.53, 0}}, {{0.54, 
              0.16321923931037052`}, {0.54, 0}}, {{0.55, 
              0.15131793150282985`}, {0.55, 0}}, {{0.56, 
              0.1399940733321476}, {0.56, 0}}, {{0.5700000000000001, 
              0.12923949889014133`}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.11904489885540949`}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.10939988844265112`}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.10029311564408948`}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.09171227878996632}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.08364426264068159}, {
              0.6200000000000001, 0}}, {{0.63, 0.07607518743010873}, {
              0.63, 0}}, {{0.64, 0.06899049167098167}, {0.64, 0}}, {{0.65, 
              0.06237500837072721}, {0.65, 0}}, {{0.66, 
              0.05621303902026898}, {0.66, 0}}, {{0.67, 
              0.05048843178862353}, {0.67, 0}}, {{0.68, 
              0.04518464337025369}, {0.68, 0}}, {{0.6900000000000001, 
              0.04028481840619975}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 0.035771851570864786`}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              0.03162845346807833}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 0.027837212895203235`}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              0.024380656388497735`}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 0.02124130574801691}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              0.018401731235499257`}, {0.7500000000000001, 0}}, {{0.76, 
              0.01584460427025129}, {0.76, 0}}, {{0.77, 
              0.013552745855963205`}, {0.77, 0}}, {{0.78, 
              0.011509173102072869`}, {0.78, 0}}, {{0.79, 
              0.009697143184480311}, {0.79, 0}}, {{0.8, 0.0081001950441045}, {
              0.8, 0}}, {{0.81, 0.006702188633054231}, {0.81, 0}}, {{
              0.8200000000000001, 0.005487342985591023}, {
              0.8200000000000001, 0}}, {{0.8300000000000001, 
              0.004440271550025593}, {0.8300000000000001, 0}}, {{
              0.8400000000000001, 0.003546016841287697}, {
              0.8400000000000001, 0}}, {{0.8500000000000001, 
              0.0027900836356155277`}, {0.8500000000000001, 0}}, {{
              0.8600000000000001, 0.002158471401935315}, {
              0.8600000000000001, 0}}, {{0.8700000000000001, 
              0.001637706294617535}, {0.8700000000000001, 0}}, {{
              0.8800000000000001, 0.0012148731295967038`}, {
              0.8800000000000001, 0}}, {{0.89, 0.000877647819518815}, {
              0.89, 0}}, {{0.9, 0.0006143308081045025}, {0.9, 0}}, {{0.91, 
              0.00041388212512947733`}, {0.91, 0}}, {{0.92, 
              0.0002659587904682153}, {0.92, 0}}, {{0.93, 
              0.00016095544146595454`}, {0.93, 0}}, {{0.9400000000000001, 
              0.00009004926715613485}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 0.000045250653751967345`}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              0.000019461465676543034`}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 6.543809702095409*^-6}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              1.4039654986446095`*^-6}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 1.0051018377458484`*^-7}, {
              0.9900000000000001, 0}}, {{1., 3.554656382278019*^-18}, {
              1., 0}}}, VertexColors -> None]}}}}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[{{{1., 0.}, {1., 0}}}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.0055000000000000005`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 1.2104177028899497`}, {0.05, 0}}, {{
              0.060000000000000005`, 1.2162421292055938`}, {
              0.060000000000000005`, 0}}, {{0.07, 1.2219881519525992`}, {
              0.07, 0}}, {{0.08, 1.2271092352432798`}, {0.08, 0}}, {{0.09, 
              1.2313749841313968`}, {0.09, 0}}, {{0.1, 1.234699251079037}, {
              0.1, 0}}, {{0.11, 1.2370614360017294`}, {0.11, 0}}, {{
              0.12000000000000001`, 1.2384685192083777`}, {
              0.12000000000000001`, 0}}, {{0.13, 1.2389363616394282`}, {
              0.13, 0}}, {{0.14, 1.2384806482956752`}, {0.14, 0}}, {{
              0.15000000000000002`, 1.2371128445069735`}, {
              0.15000000000000002`, 0}}, {{0.16, 1.2348388108904869`}, {
              0.16, 0}}, {{0.16999999999999998`, 1.2316588274472209`}, {
              0.16999999999999998`, 0}}, {{0.18, 1.227568341515269}, {
              0.18, 0}}, {{0.19, 1.2225590550408143`}, {0.19, 0}}, {{0.2, 
              1.2166201326510633`}, {0.2, 0}}, {{0.21000000000000002`, 
              1.2097394063537874`}, {0.21000000000000002`, 0}}, {{
              0.22000000000000003`, 1.201904507556814}, {
              0.22000000000000003`, 0}}, {{0.22999999999999998`, 
              1.1931038895847008`}, {0.22999999999999998`, 0}}, {{0.24, 
              1.1833277233331787`}, {0.24, 0}}, {{0.25, 1.172568660425843}, {
              0.25, 0}}, {{0.26, 1.1608224652761325`}, {0.26, 0}}, {{0.27, 
              1.148088521616719}, {0.27, 0}}, {{0.28, 1.1343702214268472`}, {
              0.28, 0}}, {{0.29, 1.119675245433891}, {0.29, 0}}, {{0.3, 
              1.1040157449041594`}, {0.3, 0}}, {{0.31, 1.0874084345320536`}, {
              0.31, 0}}, {{0.32, 1.069874606053294}, {0.32, 0}}, {{0.33, 
              1.0514400718544368`}, {0.33, 0}}, {{0.33999999999999997`, 
              1.032135047396963}, {0.33999999999999997`, 0}}, {{0.35, 
              1.0119939807649325`}, {0.35, 0}}, {{0.36, 0.9910553371099646}, {
              0.36, 0}}, {{0.37, 0.9693613452251009}, {0.37, 0}}, {{0.38, 
              0.9469577129421866}, {0.38, 0}}, {{0.39, 0.9238933175234755}, {
              0.39, 0}}, {{0.4, 0.9002198767119363}, {0.4, 0}}, {{0.41, 
              0.8759916056190181}, {0.41, 0}}, {{0.42, 0.851264864164829}, {
              0.42, 0}}, {{0.43, 0.8260977993444194}, {0.43, 0}}, {{0.44, 
              0.8005499861751331}, {0.44, 0}}, {{0.45, 0.7746820707835067}, {
              0.45, 0}}, {{0.46, 0.7485554187153792}, {0.46, 0}}, {{0.47, 
              0.7222317711990336}, {0.47, 0}}, {{0.48, 0.6957729117576107}, {
              0.48, 0}}, {{0.49, 0.6692403452528838}, {0.49, 0}}, {{0.5, 
              0.6426949911470087}, {0.5, 0}}, {{0.51, 0.616196892491254}, {
              0.51, 0}}, {{0.52, 0.5898049418902673}, {0.52, 0}}, {{0.53, 
              0.5635766254463601}, {0.53, 0}}, {{0.54, 0.5375677854599505}, {
              0.54, 0}}, {{0.55, 0.5118324024490077}, {0.55, 0}}, {{0.56, 
              0.4864223968514549}, {0.56, 0}}, {{0.5700000000000001, 
              0.46138745058943725`}, {0.5700000000000001, 0}}, {{
              0.5800000000000001, 0.4367748485025567}, {
              0.5800000000000001, 0}}, {{0.5900000000000001, 
              0.41262933949808395`}, {0.5900000000000001, 0}}, {{
              0.6000000000000001, 0.38899301711927475`}, {
              0.6000000000000001, 0}}, {{0.6100000000000001, 
              0.36590521909773804`}, {0.6100000000000001, 0}}, {{
              0.6200000000000001, 0.3434024453318782}, {
              0.6200000000000001, 0}}, {{0.63, 0.32151829362032}, {
              0.63, 0}}, {{0.64, 0.30028341237648143`}, {0.64, 0}}, {{0.65, 
              0.2797254694577297}, {0.65, 0}}, {{0.66, 0.2598691361593944}, {
              0.66, 0}}, {{0.67, 0.24073608535003346`}, {0.67, 0}}, {{0.68, 
              0.2223450026593415}, {0.68, 0}}, {{0.6900000000000001, 
              0.20471160957367715`}, {0.6900000000000001, 0}}, {{
              0.7000000000000001, 0.18784869724604603`}, {
              0.7000000000000001, 0}}, {{0.7100000000000001, 
              0.17176616978723214`}, {0.7100000000000001, 0}}, {{
              0.7200000000000001, 0.15647109577236615`}, {
              0.7200000000000001, 0}}, {{0.7300000000000001, 
              0.14196776667232003`}, {0.7300000000000001, 0}}, {{
              0.7400000000000001, 0.1282577609017293}, {
              0.7400000000000001, 0}}, {{0.7500000000000001, 
              0.11534001216500032`}, {0.7500000000000001, 0}}, {{0.76, 
              0.1032108807782341}, {0.76, 0}}, {{0.77, 0.09186422664853407}, {
              0.77, 0}}, {{0.78, 0.08129148260265646}, {0.78, 0}}, {{0.79, 
              0.0714817267744903}, {0.79, 0}}, {{0.8, 
              0.062421752785635255`}, {0.8, 0}}, {{0.81, 
              0.054096136485715623`}, {0.81, 0}}, {{0.8200000000000001, 
              0.04648729805958956}, {0.8200000000000001, 0}}, {{
              0.8300000000000001, 0.039575558358125464`}, {
              0.8300000000000001, 0}}, {{0.8400000000000001, 
              0.03333918836895158}, {0.8400000000000001, 0}}, {{
              0.8500000000000001, 0.0277544508153507}, {
              0.8500000000000001, 0}}, {{0.8600000000000001, 
              0.02279563295791194}, {0.8600000000000001, 0}}, {{
              0.8700000000000001, 0.018435069778566834`}, {
              0.8700000000000001, 0}}, {{0.8800000000000001, 
              0.014643156856070313`}, {0.8800000000000001, 0}}, {{0.89, 
              0.01138835240476421}, {0.89, 0}}, {{0.9, 
              0.008637168158566454}, {0.9, 0}}, {{0.91, 
              0.006354149062183115}, {0.91, 0}}, {{0.92, 
              0.004501842119529098}, {0.92, 0}}, {{0.93, 
              0.0030407553121009306`}, {0.93, 0}}, {{0.9400000000000001, 
              0.0019293083619071243`}, {0.9400000000000001, 0}}, {{
              0.9500000000000001, 0.001123778522546713}, {
              0.9500000000000001, 0}}, {{0.9600000000000001, 
              0.0005782470784750107}, {0.9600000000000001, 0}}, {{
              0.9700000000000001, 0.0002445571389159266}, {
              0.9700000000000001, 0}}, {{0.9800000000000001, 
              0.00007230443890042176}, {0.9800000000000001, 0}}, {{
              0.9900000000000001, 8.914354279374346*^-6}, {
              0.9900000000000001, 0}}}, VertexColors -> None]}}}}}, {{{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJwtlAtMU3cYxaHJMh9M3cSVuAhTowKOGGSDyWaPTmPdZEbEyRREeeuciohk
PKaCE7RKcOwBAx+gFcaiPDKgdCLjjfKQV0uBArZQ+qAtBUEgQtzon+9Lbm5y
k3v+3zm/c+/qgDP7gzkWFhbH5i7zPf0P8+TCO9KNwymagNj2it6zNA87Eg98
Y+M0AYNn6dyTQoRn96VK88YRY53HV0YXYfzMSfv+T8axSHY/bOsiEcR1b157
V7zEvJ4Ystrj9o5fv4SDb3LVK/sy7BPJdwnlY6Rfjn9SpgP3nxyDcO5t2f0K
KGYdK4ZmRum8SgTnR49vSBrFxy7mqcba8M2x47ajdH4NXgbkxPoFmDAnPndC
LZwK1N6piSO0Tz24wrT6uEdG7DfLeT5FguGtRyslBtrvGVxmnW6fmNFjINos
2IAb/KNfXlyrhyPbtwnbD727OcJjGGy9sGbEfpSZEBqpA5MrfY4+68xVF7K0
sGDTim5uukDZrCE/rcjK4Wz7d0aN3UrzAW14fuTPKv5GNflrQ/z0T8OPfIeQ
zAy0IyJY4rz+pgrMrksHeAfU76hrB8HsyDpwa7vJe+2bAfIvQbanqnz5lgHY
mdexlaJot+MuQ6SS8pDChpPZohApEMKmE/FrtpziT7+gfGTYo3pQ0pDYD7Oa
dZ4MSxu9pTm2fZRXFwRBBUtcn8gxaZZ71YUw63hufWAP5dcNWfzVv7Lf6waL
Z2sPLu3N/2JlgwzMrrIHDgV2PxwTdIKtd0WOibHiK4VeUupDLziyw0G89RI0
N5mnFz78gPedOR04ywT7MBViTHyoaQOza90Psb9/SlNnK+Xfj0V+p1d43G0B
k/N9gSVX9ZeShM3EQwFjf/vO7580kh8FSjdn1Gh1z4iPAocsvgqccnhK/hTI
y7iru/hjHfFSombbeTc/VQ35VaJzU1JLgF818VNiqatHqNdcT3nM/wAKOwQX
9IIK3GQABvBs9OCMOKqc+jWAVK5VcpZlGfV5EG7JRTtaHoqRwPIZxGTI4pKI
aBG6GJ5BdDkJeotPFFNeKjwQWvXkRv1N/FXY5R7p75tbSPmpIIm2fn3blE99
GEJbe0jaRP1DynMIRVdF2Xe6c1HN+jEEHWfV4rNrcrCC5auGg8HexTVTiFDW
FzVOxro7FOy7R9+rGpLwaw3pzplYzPqjwe2M2cc+cbdwhOWvQab86AbeVBry
WZ80MPlYqfkVv8GS8dDiTnIAXyNLIR5abEy/F/TzlpvEQ4vI4PpKQeV14qHF
RMKdZXYpicRDh1GfsgSb3svEQ4f86bN10t8vEQ8dWs53L608F0M8htG5UPjd
UFQk8RjG8voYz8lN4cRjGEmrc/dcszpFPPT49Pzrcnd5CPHQ43Ljr/HCPH/i
oUcgN6J8ofQw/R8M+EW7jHtD40U8DCjO8PLmVXkQDwPcjaFH/FfvJB5G1NZ9
4Nxg9xnxMOK/BVl7rU47Ew8jzjmqSmps1hGPETw+yMtamcElHiOQtIruhonf
Jh4jiJtUlK07PsGb52HCYNWLEt9wOW+ehwkfpi4Imk0S8eZ5mHChyLnHciaa
N/99jOLQ0W+n04L2ff4/PxoFDg==
           "]], {}}}}, {{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJw1lAtQVHUUxhcMJJSUWnDEBLGhISkRMXAy+BSaxCRLhgYnBMTKB8qIGAOD
+UpBEjcYyBjQGlCSUFlkJREGHEAgBBZZHi6Cwu7CsuyDXXYvVIhUu38PZ+bO
zr139jvn+37nf933Hgn7xprH4+0xX5bfgnxLleK3n22nhqI4VLumaXfeE+LY
tqwdNUkcdDvvmZ9UwL+lPTFYwOE4X7hVnloJSa/b9oCrHOyl1xIC7KvwxWcx
W+7e4fBSrxrpx7/jhTdweGd3VuO0Zy2kYbf0vPZ5/ft411oU1dTFodj8b+m1
epQv9TEIu+f7NSDpQo6TxPx+g6+lHmC36ofHfu3z/ZswLNoWMWbWN4ubOzSj
JXFWMVw5P8+feHQ5/Y5rMYcwi9zOVsQHxzsVZM3P9xA/BTvf+jiZgyLVItiG
9QLvP5ZFcljD5u3ATaNgI28TBzZeghiHTSUuU84cmNy9Tpz53dpBrTeBx6oL
/FMOkdJGE/npQqSXOLcmx4QQuaWBBNIVvY450SbyJ0HKl6Vfxb5tQhYz0A3P
FH7eOo0RzK5vD064ag4uvmEEsyPtwaLI2b22+4zkvxc9K+v6Nrga4WYZx7UP
scs9ekTdk5RHH05budgXnp3EPlaPIfUQ5a/ymaR8pOjdVCasvmuARY0vlEJo
SnaytjFQXv3YsmAmKPVTPf6yyE33I8b3n6qM7AnK7wk+nH1fk9+pA4snYADq
DL+LbnY6MLvyAewJff4oK0ALNl7aIMIPGa5/fURD+/AU6w3vWa34VQ1xh6We
os1qwGF92ziOMsFniHg1/OSaKRWYXf4QnneXidPeVFH+Q3jiLhQ0B4+Bye0e
xmD76Zq4OCXxkME4aec8nT1KfmT4RFScqagaIT4yuCx47RfhsIL8yWBfpOiX
2CmIlxyfywIiG3zl5FcO0fWKXfo9MuInh7df0f5M92EEMv8K3Nnc9EHM+WfI
ZgAUiFrz/UnXqUHaLwXe0haOnDswQPs8Am1u9d9Byn6ks3xG0JMSVT0XJ0U/
wzMC762vbN7xvI/yGkVkln1yQ24v8R/F5cU6jdS/h/IbhSm5vcRGJaF9UGL6
cZCnqKiL8lTikqT5ekJXJx6w/VDimOawozipA04s3zFIT61MnPNtw362L2OY
DL3qFL+olc7rGGRi5dIjL5qxiO2PCu0hP5YHLmxCFMtfhWxxivE/r0aUs31S
IWc2mF8fVw8rxmMcCPQK1aXXEY9x1N7MCFh4uIZ4jENwd9XMwXNVxGMc8c0b
H5x7VEk81Fi9pDG6MFREPNSw0Wcm3Z8uJx5qXCxYtvqE6Cbx0CCv67Z8rbiE
eGjgMVMbi+Bi4qFBsSDhfJ9jEfHQInNJyI3SQ1eIhxaV3Fq7uog84qHFrUs+
ecWyHPo+6PBvy7eBm+YExMN8P+f4sCXsPPHQYfkGL+eo22eIxwSSZSVjnbap
xGMCDrvE9ukJicRjAv4OT9+YGD9APPToHYrmr7gSQzz0iDnqwUs5GEY89FgW
u8XjtimIeBgw1zqqfmG7jngYYLs9UPzR1OvEw4CzZcq0wQpF4MvzMUnnhMf7
HzZZA4Q=
           "]], {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0.05, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, PlotRange -> {{0.05, 1.}, {0, 1.2939472281062956`}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xT24f", "(", "x", ")"}], 
       RowBox[{"x", " ", 
         RowBox[{"T24", "(", "x", ")"}]}]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.783092942646759*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Procedure", " ", "with", " ", "singlet", " ", "Sigma"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.783093019864258*^9, 3.7830930335764637`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinSigmamB", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinT24use", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellingmB", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"Melling2use", "[", 
    RowBox[{"j", ",", 
     RowBox[{"mBottom", "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.78309334087745*^9, 3.7830933552850113`*^9}, {
  3.783093715693495*^9, 3.783093762328328*^9}, {3.7830938700132017`*^9, 
  3.783093905183566*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MellinSigmaWmB", "[", "j_", "]"}], ",", " ", 
     RowBox[{"MellingWmB", "[", "j_", "]"}]}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Pinv", "[", 
     RowBox[{"j", ",", "5"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MellinSigmamB", "[", "j", "]"}], ",", " ", 
      RowBox[{"MellingmB", "[", "j", "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.783094262451766*^9, 3.783094269945121*^9}, {
  3.783094305862248*^9, 3.783094327995524*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "PDE5", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDE5", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"MellinSigmaW", "[", 
       RowBox[{"j", ",", "t"}], "]"}], ",", " ", "t"}], "]"}], " ", 
    "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"alphaS5", "[", "t", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "\[Pi]", "*", "t"}], ")"}]}], "*", 
     RowBox[{"val1", "[", 
      RowBox[{"j", ",", " ", "5"}], "]"}], "*", 
     RowBox[{"MellinSigmaW", "[", 
      RowBox[{"j", ",", "t"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7830943591934013`*^9, 3.7830943616161013`*^9}, {
  3.783094410101355*^9, 3.783094429840925*^9}, {3.783441659057908*^9, 
  3.783441659122575*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "PDE6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDE6", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"MellingW3", "[", 
       RowBox[{"j", ",", "t"}], "]"}], ",", " ", "t"}], "]"}], " ", 
    "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"alphaS5", "[", "t", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "\[Pi]", "*", "t"}], ")"}]}], "*", 
     RowBox[{"val2", "[", 
      RowBox[{"j", ",", " ", "5"}], "]"}], "*", 
     RowBox[{"MellingW3", "[", 
      RowBox[{"j", ",", "t"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783094363778768*^9, 3.783094370478245*^9}, {
  3.783094440842792*^9, 3.7830944521651077`*^9}, {3.7834416611269617`*^9, 
  3.78344166121385*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sol5", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol5", " ", "=", " ", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"PDE5", ",", " ", 
       RowBox[{
        RowBox[{"MellinSigmaW", "[", 
         RowBox[{"j", ",", 
          RowBox[{"mBottom", "^", "2"}]}], "]"}], " ", "\[Equal]", " ", 
        RowBox[{"MellinSigmaWmB", "[", "j", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"MellinSigmaW", "[", 
      RowBox[{"j", ",", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", "t"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7830944580899754`*^9, 3.783094500182518*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sol6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol6", " ", "=", " ", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"PDE6", ",", " ", 
       RowBox[{
        RowBox[{"MellingW3", "[", 
         RowBox[{"j", ",", 
          RowBox[{"mBottom", "^", "2"}]}], "]"}], " ", "\[Equal]", " ", 
        RowBox[{"MellingWmB", "[", "j", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"MellingW3", "[", 
      RowBox[{"j", ",", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", "t"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783094462174588*^9, 3.783094464004642*^9}, {
  3.7830950613168783`*^9, 3.783095087737749*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MellinSigmaWuse", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellinSigmaWuse", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{"MellinSigmaW", "[", 
     RowBox[{"j", ",", "t"}], "]"}], " ", "/.", " ", 
    RowBox[{"sol5", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "MellingW3use", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MellingW3use", "[", 
    RowBox[{"j_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"MellingW3", "[", 
     RowBox[{"j", ",", " ", "t"}], "]"}], " ", "/.", " ", 
    RowBox[{"sol6", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783095642756057*^9, 3.783095692104217*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Return", " ", "to", " ", "non"}], "-", 
   RowBox[{"diagonal", " ", "solution"}]}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MellinSigmause", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}], ",", " ", 
     RowBox[{"Melling3use", "[", 
      RowBox[{"j_", ",", " ", "t_"}], "]"}]}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"j", ",", " ", "5"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MellinSigmaWuse", "[", 
       RowBox[{"j", ",", " ", "t"}], "]"}], ",", " ", 
      RowBox[{"MellingW3use", "[", 
       RowBox[{"j", ",", " ", "t"}], "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.783095713479249*^9, 3.783095713609877*^9}, {
  3.7830957793685226`*^9, 3.783095797929784*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Make", " ", "Sigma", " ", "and", " ", "g", " ", "evolve", " ", "to", " ", 
    "Q"}], " ", "=", " ", "Qfinal"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783094214187192*^9, 3.7830942165483303`*^9}, {
  3.783096378897831*^9, 3.783096380155212*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinSigmaf", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"MellinSigmause", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mellingf", "[", "j_", "]"}], " ", "=", " ", 
   RowBox[{"Melling3use", "[", 
    RowBox[{"j", ",", " ", 
     RowBox[{"Qfinal", "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783095932125421*^9, 3.78309598084482*^9}, {
  3.783096019756606*^9, 3.7830960598396397`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "xSigmaf", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xSigmaf", "[", 
    RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "c", "-", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
        "*", 
        RowBox[{"MellinSigmaf", "[", 
         RowBox[{"c", "+", 
          RowBox[{"z", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.783096411821513*^9, 3.783096434561619*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xSigmaf", "[", ".5", "]"}]], "Input",
 CellChangeTimes->{{3.7830964397015753`*^9, 3.783096445030898*^9}, {
  3.783442779478397*^9, 3.783442779570511*^9}}],

Cell[BoxData["0.1422050236778447`"], "Output",
 CellChangeTimes->{3.783096509710997*^9, 3.783442853588768*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xSigmaf", "[", "x", "]"}], ",", 
     RowBox[{"x", "*", 
      RowBox[{"Sigma0", "[", "x", "]"}]}]}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.05", ",", "1", ",", " ", "0.05"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.783096552048058*^9, 3.783096565401246*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.011000000000000001`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.011000000000000001`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 1.6627389396889527`}, {0.05, 0}}, {{0.1, 
              1.4011285280372092`}, {0.1, 0}}, {{0.15000000000000002`, 
              1.2282176872665052`}, {0.15000000000000002`, 0}}, {{0.2, 
              1.0788743405607255`}, {0.2, 0}}, {{0.25, 0.9373205431620864}, {
              0.25, 0}}, {{0.3, 0.7994519493901294}, {0.3, 0}}, {{
              0.35000000000000003`, 0.6659073322329594}, {
              0.35000000000000003`, 0}}, {{0.4, 0.5393884812384011}, {
              0.4, 0}}, {{0.45, 0.4231469057248662}, {0.45, 0}}, {{0.5, 
              0.3200577508278127}, {0.5, 0}}, {{0.55, 0.23210410813190654`}, {
              0.55, 0}}, {{0.6000000000000001, 0.16016933557794327`}, {
              0.6000000000000001, 0}}, {{0.6500000000000001, 
              0.10405015729592001`}, {0.6500000000000001, 0}}, {{
              0.7000000000000001, 0.06261128498153838}, {
              0.7000000000000001, 0}}, {{0.7500000000000001, 
              0.034014278625438016`}, {0.7500000000000001, 0}}, {{0.8, 
              0.015966979661091597`}, {0.8, 0}}, {{0.8500000000000001, 
              0.0059583277298679085`}, {0.8500000000000001, 0}}, {{
              0.9000000000000001, 0.001463357451054397}, {
              0.9000000000000001, 0}}, {{0.9500000000000001, 
              0.00012913636542077338`}, {0.9500000000000001, 0}}, {{1., 
              8.696829207126804*^-18}, {1., 0}}}, VertexColors -> None]}}}}, {
       
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.011000000000000001`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[{{{1., 0.}, {1., 0}}}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.011000000000000001`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 1.2104177028899497`}, {0.05, 0}}, {{0.1, 
              1.234699251079037}, {0.1, 0}}, {{0.15000000000000002`, 
              1.2371128445069735`}, {0.15000000000000002`, 0}}, {{0.2, 
              1.2166201326510633`}, {0.2, 0}}, {{0.25, 1.172568660425843}, {
              0.25, 0}}, {{0.3, 1.1040157449041594`}, {0.3, 0}}, {{
              0.35000000000000003`, 1.0119939807649319`}, {
              0.35000000000000003`, 0}}, {{0.4, 0.9002198767119363}, {
              0.4, 0}}, {{0.45, 0.7746820707835067}, {0.45, 0}}, {{0.5, 
              0.6426949911470087}, {0.5, 0}}, {{0.55, 0.5118324024490077}, {
              0.55, 0}}, {{0.6000000000000001, 0.38899301711927475`}, {
              0.6000000000000001, 0}}, {{0.6500000000000001, 
              0.2797254694577296}, {0.6500000000000001, 0}}, {{
              0.7000000000000001, 0.18784869724604603`}, {
              0.7000000000000001, 0}}, {{0.7500000000000001, 
              0.11534001216500032`}, {0.7500000000000001, 0}}, {{0.8, 
              0.062421752785635255`}, {0.8, 0}}, {{0.8500000000000001, 
              0.0277544508153507}, {0.8500000000000001, 0}}, {{
              0.9000000000000001, 0.008637168158566425}, {
              0.9000000000000001, 0}}, {{0.9500000000000001, 
              0.001123778522546713}, {0.9500000000000001, 0}}}, VertexColors -> 
            None]}}}}}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQPWsmCKy05/1frTpl1i97CH+nffDMsP2s2d/sTYxB
4LD91lufph1f9hkqf9L+pdXkvYLOH+0ZwOCC/TeGG8va/721Bys3vmyfHqLt
KDP1pX16Gghcs3+Ve/iJjP9TqP6b9o8cbyxc7fTQ/uwZELhjb14df+iayG2o
eQ/sHx7QaLxcfQWq/qH937M3EqZtPQt1z2P7rF6Bo7kNR+zPgfU/sdc7uesb
++JdUPue2R82iub1Zt9gzwg274X9Hc1pZwKzFkLNe2kvFXr97tLICVDzXttn
FFzMPpReATXvjf36nY6SR36GQ817Z286f9M7ibcKUPd9sE9cKLRmM2+KDQAC
6pnT
           "]], {}}}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQPWsmCKy0XzqN7cu92M/2EP5O+7bqGoaQg5/tTYxB
4LB9zPPOa2anYfIn7ac4i61xK/9szwAGF+xF6nmjrx/6ZA9WbnzZvlbuVSbP
qo/26WkgcM3+iuqmmQqGH6D6b9rb/DZ9NfPcG/uzZ0Dgjv0pxlu8RqdeQM17
YP/xA4fY1wlPoOof2m9atjHiXcIDqHse27+evPO709Mb9ufA+p/Yfyg/vZz1
+UWofc/sP/gsEs3lPmHPCDbvhb29nbbPm7a9UPNe2rO+6y7d93U91LzX9t38
HqtWZs+BmvfGnsNEWyx2QyPUvHf28YWqDBWZQVD3fYDSDAwA4aWTxw==
           
           "]], {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0.05, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, PlotRange -> {{0.05, 1.}, {0, 1.6627389396889527`}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xSigmaf", "(", "x", ")"}], 
       RowBox[{"x", " ", 
         RowBox[{"Sigma0", "(", "x", ")"}]}]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7830982070901527`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "xgf", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xgf", "[", 
    RowBox[{"x_", " ", "?", " ", "NumericQ"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "\[Pi]"}], ")"}], "*", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Im", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "c", "-", 
           RowBox[{"z", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], ")"}]}], 
        "*", 
        RowBox[{"Mellingf", "[", 
         RowBox[{"c", "+", 
          RowBox[{"z", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}], "]"}]}]}], "]"}]}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.783094399743568*^9, 3.7830944058561993`*^9}, {
  3.783098328188204*^9, 3.783098350893549*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "xgf", " ", "and", " ", "xSigma", " ", "take", " ", "1", "min30s", " ", 
   "per", " ", "value"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7830984609331827`*^9, 3.783098472055175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xgf", "[", "x", "]"}], ",", 
     RowBox[{"x", "*", 
      RowBox[{"g", "[", "x", "]"}]}]}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.05", ",", "1", ",", " ", "0.05"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7830985865967007`*^9, 3.783098590477469*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.011000000000000001`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[{}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.011000000000000001`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 2.046904243289401}, {0.05, 0}}, {{0.1, 
              1.166175440490434}, {0.1, 0}}, {{0.15000000000000002`, 
              0.7645341721398204}, {0.15000000000000002`, 0}}, {{0.2, 
              0.5269495382453744}, {0.2, 0}}, {{0.25, 0.3704079021592818}, {
              0.25, 0}}, {{0.3, 0.2616248378670871}, {0.3, 0}}, {{
              0.35000000000000003`, 0.18398282645231354`}, {
              0.35000000000000003`, 0}}, {{0.4, 0.12793275548412755`}, {
              0.4, 0}}, {{0.45, 0.08742235347510408}, {0.45, 0}}, {{0.5, 
              0.05833722372839952}, {0.5, 0}}, {{0.55, 
              0.037737297971975704`}, {0.55, 0}}, {{0.6000000000000001, 
              0.0234474635825204}, {0.6000000000000001, 0}}, {{
              0.6500000000000001, 0.013820718940463796`}, {
              0.6500000000000001, 0}}, {{0.7000000000000001, 
              0.007591848243974716}, {0.7000000000000001, 0}}, {{
              0.7500000000000001, 0.0037818263276836843`}, {
              0.7500000000000001, 0}}, {{0.8, 0.0016325600484945768`}, {
              0.8, 0}}, {{0.8500000000000001, 0.0005610395099380655}, {
              0.8500000000000001, 0}}, {{0.9000000000000001, 
              0.000126899088290004}, {0.9000000000000001, 0}}, {{
              0.9500000000000001, 0.000010298779882889844`}, {
              0.9500000000000001, 0}}, {{1., 6.557133132357511*^-19}, {
              1., 0}}}, VertexColors -> None]}}}}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.011000000000000001`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[{}, VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.011000000000000001`], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{0.05, 0.8551870692101868}, {0.05, 0}}, {{0.1, 
              0.8685285698613158}, {0.1, 0}}, {{0.15000000000000002`, 
              0.821342898310511}, {0.15000000000000002`, 0}}, {{0.2, 
              0.7513586940977057}, {0.2, 0}}, {{0.25, 0.6719754097336444}, {
              0.25, 0}}, {{0.3, 0.5897557981359743}, {0.3, 0}}, {{
              0.35000000000000003`, 0.5084662030707451}, {
              0.35000000000000003`, 0}}, {{0.4, 0.43047145850538854`}, {
              0.4, 0}}, {{0.45, 0.3573337729737842}, {0.45, 0}}, {{0.5, 
              0.29010836299514603`}, {0.5, 0}}, {{0.55, 0.2295039741947936}, {
              0.55, 0}}, {{0.6000000000000001, 0.17597579867252722`}, {
              0.6000000000000001, 0}}, {{0.6500000000000001, 
              0.12978114271067562`}, {0.6500000000000001, 0}}, {{
              0.7000000000000001, 0.09101251664106898}, {
              0.7000000000000001, 0}}, {{0.7500000000000001, 
              0.059615301913872765`}, {0.7500000000000001, 0}}, {{0.8, 
              0.03539280356467358}, {0.8, 0}}, {{0.8500000000000001, 
              0.01799779122452814}, {0.8500000000000001, 0}}, {{
              0.9000000000000001, 0.006903719990307485}, {
              0.9000000000000001, 0}}, {{0.9500000000000001, 
              0.00133143948790669}, {0.9500000000000001, 0}}}, VertexColors -> 
            None]}}}}}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQPWsmCKy0v3n0ewh/AoMDhL/Tvv6BypTlKz7ZmxiD
wGH7KVUOcQLlL+wh8ifty/7ruB+988CeAQwu2G/mr404vOW6PVi58WX7B+Vz
pcr2XbBPTwOBa/bntwSe399zHKr/pn2uTNEeyYQD9mfPgMAd+xXZslv9E7dB
zXtgry0unZFwby1U/UP7p4JOM32DFkPd89i+K5x76RymGfbnwPqf2PfJ3Krj
9OuB2vfM/vHPE3YLJertGcHmvbCPmLChR+B3HtS8l/ZdBuKMJfujoOa9tp9y
MkMnPMkJat4b+4kCTvfYFilAzXtnr/OitF125lM7iPs+2MvMi2/iNNSwAQCb
HI9G
           "]], {}}}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPWsmCKy0/8Bx3HVj7Gt7CH+n/XLXtNw/p17bmxiD
wGH7nSUPnxV4vILKn7Sf8iAsWZH7hT0DGFywf7xVYPKlhqf2YOXGl+3Nbxn3
ut9/ZJ+eBgLX7Le+0XwV5foAqv+m/XRxTs0bPbftz54BgTv2G/K1K/vuXYOa
98A+kO/6KqWJl6DqH9o7/919PynhLNQ9j+0jzon/i287Zn8OrP+J/X2LU4qr
5xyA2vfMXpS5YdkMn+32jGDzXtgrxMjPeNq6DmreS/vFz5ZmM8ovgpr32t56
7rUg5rxJUPPe2HNyu1gKu9dAzXtnv7t7hXPZhVB7ACrskHU=
           "]], {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {0.05, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, PlotRange -> {{0.05, 1.}, {0, 2.046904243289401}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xgf", "(", "x", ")"}], 
       RowBox[{"x", " ", 
         RowBox[{"g", "(", "x", ")"}]}]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7831000898753557`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Now", " ", "we", " ", "want", " ", "to", " ", "recover", " ", "the", " ", 
    "quarks"}], ",", " ", 
   RowBox[{
   "antiquarks", " ", "and", " ", "gluon", " ", "distributions", " ", "from", 
    " ", "V_i"}], ",", " ", 
   RowBox[{"T_iSigma", " ", "and", " ", "g"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.783145943859229*^9, 3.783146011124424*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"System", " ", 
    RowBox[{"(", 
     RowBox[{"V_i", ",", " ", "T_i", ",", " ", "Sigma"}], ")"}]}], " ", "=", 
   " ", 
   RowBox[{"CvMatrix", " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{
     "u", ",", " ", "ubar", ",", " ", "d", ",", " ", "dbar", ",", " ", "...", 
      ",", " ", "b", ",", " ", "bbar"}], ")"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.78314603050128*^9, 3.783146060950625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CvMatrix", " ", "=", " ", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", 
       RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "1", 
       RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "1", 
       RowBox[{"-", "1"}], "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "1", 
       RowBox[{"-", "1"}], "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "0", "1", 
       RowBox[{"-", "1"}]},
      {"1", "1", 
       RowBox[{"-", "1"}], 
       RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
      {"1", "1", "1", "1", 
       RowBox[{"-", "2"}], 
       RowBox[{"-", "2"}], "0", "0", "0", "0"},
      {"1", "1", "1", "1", "1", "1", 
       RowBox[{"-", "3"}], 
       RowBox[{"-", "3"}], "0", "0"},
      {"1", "1", "1", "1", "1", "1", "1", "1", 
       RowBox[{"-", "4"}], 
       RowBox[{"-", "4"}]},
      {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1"}
     }], "\[NoBreak]", ")"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InvCvMatrix", " ", "=", " ", 
   RowBox[{"Inverse", "[", "CvMatrix", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Inverse", "[", "%642", "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InvCvMatrix", " ", "//", " ", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], "0", "0", "0", "0", 
      FractionBox["1", "4"], 
      FractionBox["1", "12"], 
      FractionBox["1", "24"], 
      FractionBox["1", "40"], 
      FractionBox["1", "10"]},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], "0", "0", "0", "0", 
      FractionBox["1", "4"], 
      FractionBox["1", "12"], 
      FractionBox["1", "24"], 
      FractionBox["1", "40"], 
      FractionBox["1", "10"]},
     {"0", 
      FractionBox["1", "2"], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      FractionBox["1", "12"], 
      FractionBox["1", "24"], 
      FractionBox["1", "40"], 
      FractionBox["1", "10"]},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", "2"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      FractionBox["1", "12"], 
      FractionBox["1", "24"], 
      FractionBox["1", "40"], 
      FractionBox["1", "10"]},
     {"0", "0", 
      FractionBox["1", "2"], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", "6"]}], 
      FractionBox["1", "24"], 
      FractionBox["1", "40"], 
      FractionBox["1", "10"]},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox["1", "2"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", "6"]}], 
      FractionBox["1", "24"], 
      FractionBox["1", "40"], 
      FractionBox["1", "10"]},
     {"0", "0", "0", 
      FractionBox["1", "2"], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", "8"]}], 
      FractionBox["1", "40"], 
      FractionBox["1", "10"]},
     {"0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", "2"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", "8"]}], 
      FractionBox["1", "40"], 
      FractionBox["1", "10"]},
     {"0", "0", "0", "0", 
      FractionBox["1", "2"], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", "10"]}], 
      FractionBox["1", "10"]},
     {"0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", "2"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", "10"]}], 
      FractionBox["1", "10"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.783146088036161*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Domain", " ", "of", " ", "x"}], "-", "Bjorken"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"xdomain", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.7831462634810343`*^9, 3.7831462822115993`*^9}, {
  3.783146492989478*^9, 3.7831465162899103`*^9}, {3.783152777944462*^9, 
  3.783152780651617*^9}, {3.783152952426319*^9, 3.783152964729932*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Results", " ", "of", " ", "V1"}], ",", " ", "V2", ",", " ", 
    "V3"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"result1", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"xV1f", ",", " ", "xdomain"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result2", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"xV2f", ",", " ", "xdomain"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result3", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"xV3f", ",", " ", "xdomain"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Results", " ", "for", " ", "T3"}], ",", " ", "T8", ",", " ", 
     "T15", ",", " ", "T24"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resultT3", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"xT3f", ",", " ", "xdomain"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resultT8", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"xT8f", ",", " ", "xdomain"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resultT15", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"xT15f", ",", " ", "xdomain"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resultT24", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"xT24f", ",", " ", "xdomain"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Results", " ", "for", " ", "singlet", " ", "and", " ", "gluon"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resultSigma", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"xSigmaf", ",", " ", "xdomain"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"resultg", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"xgf", ",", " ", "xdomain"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.78314640726295*^9, 3.7831464204791403`*^9}, {
   3.783146454736814*^9, 3.7831464575146713`*^9}, 3.783146519760377*^9, {
   3.7831496608277817`*^9, 3.783149661459382*^9}, {3.783152795301692*^9, 
   3.783152799156973*^9}, {3.783152867661283*^9, 3.783152892290091*^9}, {
   3.783152968463725*^9, 3.783152976872801*^9}, {3.78315304297197*^9, 
   3.783153059447695*^9}, {3.783453694408927*^9, 3.783453757671136*^9}, {
   3.783453822530691*^9, 3.7834538386114273`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Results", " ", "for", " ", "T3"}], ",", " ", "T8", ",", " ", 
   "T15", ",", " ", "T24"}], "*)"}]], "Input",
 CellChangeTimes->{{3.78315298304045*^9, 3.783152992551731*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"resultT3", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"xT3f", ",", " ", "xdomain"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"resultT8", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"xT8f", ",", " ", "xdomain"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783153070282487*^9, 3.783153088357952*^9}, {
  3.7831531962023163`*^9, 3.7831532134657917`*^9}, {3.783453763220942*^9, 
  3.7834537657647552`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"resultT15", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"xT15f", ",", " ", "xdomain"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"resultT24", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"xT24f", ",", " ", "xdomain"}], "]"}]}], ";"}], "*)"}]], "Input",\

 CellChangeTimes->{{3.783453767926423*^9, 3.783453770386571*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Result", " ", "for", " ", "Sigma"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7831544439739513`*^9, 3.7831544638802547`*^9}, 
   3.783165391493579*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"resultSigma", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"xSigmaf", ",", " ", "xdomain"}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7831546080583887`*^9, 3.783154612391129*^9}, {
  3.783453773177264*^9, 3.783453775640232*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Result", " ", "for", " ", "g"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7831653938018293`*^9, 3.783165396912184*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"resultg", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"xgf", ",", " ", "xdomain"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783146442729792*^9, 3.783146467391961*^9}, {
  3.783146529724063*^9, 3.7831465470402184`*^9}, {3.783165405540668*^9, 
  3.783165418889604*^9}, {3.783453778399837*^9, 3.783453780779028*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Define", " ", "final", " ", "distributions"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783178414466928*^9, 3.783178423427055*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xuFinal", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "result1"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "4"}], "*", "resultT3"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "12"}], "*", "resultT8"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "24"}], "*", "resultT15"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "40"}], "*", "resultT24"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "10"}], "*", "resultSigma"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAntiuFinal", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], "*", "result1"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "4"}], "*", "resultT3"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "12"}], "*", "resultT8"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "24"}], "*", "resultT15"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "40"}], "*", "resultT24"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "10"}], "*", "resultSigma"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783178321401224*^9, 3.783178398685926*^9}, {
  3.783178804808446*^9, 3.783178816791481*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xdFinal", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "result2"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"1", "/", "4"}], "*", "resultT3"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "12"}], "*", "resultT8"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "24"}], "*", "resultT15"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "40"}], "*", "resultT24"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "10"}], "*", "resultSigma"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAntidFinal", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], "*", "result2"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"1", "/", "4"}], "*", "resultT3"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "12"}], "*", "resultT8"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "24"}], "*", "resultT15"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "40"}], "*", "resultT24"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "10"}], "*", "resultSigma"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783178833282021*^9, 3.783178868117443*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xsFinal", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "result3"}], "-", " ", 
    RowBox[{
     RowBox[{"1", "/", "6"}], "*", "resultT8"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "24"}], "*", "resultT15"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "40"}], "*", "resultT24"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "10"}], "*", "resultSigma"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAntisFinal", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], "*", "result3"}], "-", " ", 
    RowBox[{
     RowBox[{"1", "/", "6"}], "*", "resultT8"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "24"}], "*", "resultT15"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "40"}], "*", "resultT24"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "10"}], "*", "resultSigma"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783178933568128*^9, 3.783179017631513*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xcFinal", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "8"}], "*", "resultT15"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "40"}], "*", "resultT24"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "10"}], "*", "resultSigma"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAnticFinal", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "8"}], "*", "resultT15"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "40"}], "*", "resultT24"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "10"}], "*", "resultSigma"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7831790399764757`*^9, 3.7831790862874327`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xbFinal", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "10"}], "*", "resultT24"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "10"}], "*", "resultSigma"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAntibFinal", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "10"}], "*", "resultT24"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "10"}], "*", "resultSigma"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7831791144935637`*^9, 3.783179142140945*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Create", " ", "lists", " ", "to", " ", "plot"}], "*)"}]], "Input",
 CellChangeTimes->{{3.783179320694026*^9, 3.783179333086684*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataxuFinal", " ", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "xuFinal"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataxAntiuFinal", " ", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "xAntiuFinal"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataxdFinal", "  ", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "xdFinal"}], " ", "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataxAntidFinal", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "xAntidFinal"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataxsFinal", " ", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "xsFinal"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataxAntisFinal", " ", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "xAntisFinal"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataxcFinal", " ", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "xcFinal"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataxAnticFinal", " ", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "xAnticFinal"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataxbFinal", " ", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "xbFinal"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataxAntibFinal", " ", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "xAntibFinal"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataxgFinal", " ", "=", "  ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"xdomain", ",", " ", "resultg"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783179338036146*^9, 3.783179540401183*^9}, {
  3.7831800566380997`*^9, 3.783180095502713*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.783180074613594*^9, 3.7831800768025217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "dataxuFinal", ",", " ", "dataxAntiuFinal", ",", " ", "dataxdFinal", ",", 
     " ", "dataxAntidFinal", ",", " ", "dataxgFinal"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"PointSize", "[", "0.012", "]"}]}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783179684409296*^9, 3.783179718977429*^9}, {
   3.783179754503105*^9, 3.783179774095879*^9}, {3.7831803474280033`*^9, 
   3.783180347749917*^9}, {3.783182150021513*^9, 3.7831821611254253`*^9}, {
   3.783182578650899*^9, 3.7831826105620317`*^9}, {3.783182658212241*^9, 
   3.78318265835257*^9}, {3.783492497405126*^9, 3.783492497849593*^9}, 
   3.78353029225115*^9, {3.783534550704009*^9, 3.783534551223925*^9}, {
   3.783538010681088*^9, 3.7835380133168917`*^9}, {3.783685638612471*^9, 
   3.783685645253326*^9}, {3.783685683112513*^9, 3.7836856873698063`*^9}, {
   3.78368576845938*^9, 3.783685776553502*^9}, {3.783685870548946*^9, 
   3.7836858756598263`*^9}, {3.783879105490314*^9, 3.783879188392668*^9}, {
   3.7838793064566803`*^9, 3.78387931132699*^9}, {3.783879457214324*^9, 
   3.7838794574108686`*^9}, {3.783881628208686*^9, 3.78388163132524*^9}, {
   3.783881669766282*^9, 3.783881675728517*^9}, {3.7838820797856903`*^9, 
   3.783882085703369*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1: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
Tf/2/n8A/l8DaQ==
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwt0dk2ggEABOCfkLXIvkWyln3fE0V2su/kuOVtvKgX8DnHxTcz95MofRU/
y4MgKOPjv7/FD+92iTdeeeGZJx554J47brnhmisuuaDIOWeccsIxRxxywD4F
9tglT44dtsmyRYZNNlhnjVVWWGaJRRaYZ45ZZphmikkmGCdNijFGGWGYIQZJ
MkCCfvqI00sP3XTRSQfttNFKC83EaKKRKBEaqKeOWmqoJkwVlVQQ4u+bX5LO
Fvw=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtz1VSggEAhdFfd+KWXIIzYgJiF6gIitjdKKLY3d2xLI8zPpz55j7esopo
eaQ0CIISKv/NGj/6zReffPDOG6+88MwTjzxwzx233HDNFZdccM4Zp5xwzBGH
HLDPHrvssE2RLTYpsEGeddbIscoKyyyxyALzzP39YYZppphkgnHGGGWEYbIM
kWGQAdKk6CdJH730kCBON1100kE7bbTSQjNNNBKjgSgRwtRTRy01VFNFiF+I
cT17
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwlz1cyQwEAheF7g+gk0UuQiJrdWIIZr2zGpvQeXfTeRSd8M3n45p/zeFLj
U2OTkSAIQiaYYdookGWUEYYZYpABMvSTJkUfvfSQpJsuOumgnTZaaaGZJhLE
idFIA/XUUUsN1VRRSZQKyikjQhiWDvxJkV9++OaLTz54541XCrzwzBOPPHDP
HbfccM0Vl1xwzhmnnHDMEYfkOWCfPXbZYZstNsmxwTprrLLCMkssssA8c8zy
D6EeOH8=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwNxlVSQgEAAMCnN+EAKiYo2I1YiN0oiihhd3c744XZj53ZUKaUKlYHQVBF
lhr5549ffvjmi08+eOeNV1545olHHrjnjltuuOaKSy4454xTTjjmiEMO2KdM
iSIF9tglzw45ttkiyyYbZFhnjVVWWGaJRRaYZ45ZZpgmzRQpJplgnDFGSTJC
gmGGGGSAfvropYduuuikg3bixGijlSgRWmimiUYaqCdMHbVUAI86J/0=
            
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwNxtc2ggEAAOCfN+mVegHneACehRtkj0hmZSV7ZwvJlj0yutB138V3zheq
bww31AZBUEMdTdJMhTJ//PLDNyW++OSDd9545YVnnnikyAP33HHLDddccUmB
C/Kcc8YpOU445ohDDthnj12y7LDNFptssM4aq6ywzBKLLJBhnjRzzDLDNFOk
SJJgkgnGGWOUEeIME2OIQaIM0E8fvfTQTReddNBOhDZaaeGfKpKRSy4=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.012]], 
         LineBox[CompressedData["
1:eJwV0UVWQgEAQNFvYYLYhejHxG6wA7vFDlDRsS7eDXAd3PMW8MLSb/6nIgiC
b/5bSRXV1BChljrqaaCRJqLEaCZOC6200U4HnXTRTQ+99JGgnyQDDBKSYohh
RhhljHHSTDDJFNPMMMsc8yywyBLLrJAhyyprrLPBJltss8Mue+TY54BDjjjm
hFPOOOeCS6645oY8t9xxzwOPPPHMC6+8UaDIOx98UuKLPzPK1xMWYg==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          PointSize[0.012]], 
         LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
          113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
          126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
          139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
          152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
          165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
          178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
          191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          PointSize[0.012]], 
         LineBox[CompressedData["
1:eJwNz9c6ggEAANA/hOzIHgmhvI1H8LnWc8oom7JXZFP2OhfnAU5iLjO7EAqC
YJ5FsiyxzAqr5MizxjobbLLFNjvsskeBIvsccMgRx5xwyhnnXHBJiSuuKXPD
LXfc88AjTzzzQoUqr7zxzgeffPHND7/8EUiGqKGWOsLU00AjEZpopoVW2min
gyiddBGjmx566aOfAQYZYpgR4oySYIxxJkgyyRTTpEgzQ4V/Y+U35w==
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          PointSize[0.012]], 
         LineBox[CompressedData["
1:eJwV0Nc6ggEAgOHfpbgAZCd7V7LKDFGyJXtkZWZzyb0O3uf5jr/aXDF5UBME
QZ46UU8DIRppopkWWmmjnTAdROiki2566KWPfgYYZIhhRhglSow4YyQYZ4JJ
ppgmSYoZZpljngUWSbPEMitkWGWNLDnWybPBJltss8Mue+xT4H9GkUOOOOaE
U84454JLrihxzQ233HFPmQceeeKZF16p8MY7H3zyxTc//PJHFbQKJ2Y=
          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], 
          PointSize[0.012]], 
         LineBox[CompressedData["
1:eJwNxkk6ggEAANDfUVypfRsH4DiZ5ymSBrMIIUOmEBlDyFwL1t7ifd9rbmkL
tTYFQRDmVyK000EnXXTTQy999DPAIEMMM8IoY4wTZYJJYkwRZ5oESVKkmWGW
OeZZYJEllsmwwipZ1lhngxybbLFNnh122WOfAgcccsQxJxQ55YxzSlxwSZkr
rrnhljvuqfDAI09UeeaFV2q88c4Hn3zxzQ91GvzxDxhoSgU=
          
          "]]}}}], {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["5", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.216]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.216]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.216]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.216]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.216]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.216]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.216]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.216]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.216]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.216]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.012`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.012`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.012`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.012`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.012`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7831797207873287`*^9, {3.7831797612525797`*^9, 3.78317977462288*^9}, 
   3.783180348976507*^9, {3.7831821514948063`*^9, 3.783182162112908*^9}, {
   3.783182583351365*^9, 3.783182611115193*^9}, 3.783182658827084*^9, 
   3.783492342372443*^9, 3.783492415145981*^9, 3.7834924990267878`*^9, 
   3.783530294007587*^9, 3.783534554594097*^9, 3.783538014549183*^9, 
   3.783685648275834*^9, 3.7836856885413437`*^9, 3.783685777542758*^9, 
   3.783685879196929*^9, {3.783879114308467*^9, 3.7838791891112413`*^9}, 
   3.783879459199952*^9, 3.78388163380788*^9, 3.7838816767141523`*^9, 
   3.7838820874716597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataxdFinal", ",", " ", "dataxAntidFinal"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"PointSize", "[", "0.013", "]"}]}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7831798018715487`*^9, 3.783179804355875*^9}, {
  3.783182386200338*^9, 3.783182389862756*^9}, {3.783182552526454*^9, 
  3.783182568539295*^9}, {3.7831826240890636`*^9, 3.783182624915872*^9}, {
  3.7835302663742123`*^9, 3.783530267493244*^9}, {3.7836857052016487`*^9, 
  3.7836857085108967`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1, 3, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 
            84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 
            68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 
            52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 
            36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
            20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 
            196}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{97, 2, 195, 194, 193, 192, 191, 190, 189, 188, 187, 
            186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 
            173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 
            160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 
            147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 
            134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 
            121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 
            108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 
            197}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.013]], 
         LineBox[{196, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
          19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
          36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
          53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
          70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
          87, 88, 89, 90, 91, 92, 93, 94, 95, 96}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          PointSize[0.013]], 
         LineBox[{197, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 
          109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 
          122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 
          135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 
          148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 
          161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 
          174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 
          187, 188, 189, 190, 191, 192, 193, 194, 
          195}]}}}], {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {-7.357631827668754*^-19, 0.35603760557610054`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {-7.357631827668754*^-19, 0.35603760557610054`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.013`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.013`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.783492374912725*^9, {3.783492419436548*^9, 3.783492431784224*^9}, 
   3.7835302695705023`*^9, 3.783685709392887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["dataxgFinal"], "Input",
 CellChangeTimes->{{3.784439969300362*^9, 3.784439981116485*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.01`", ",", "7.985845035020384`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.02`", ",", "4.564216045979395`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03`", ",", "3.1732298562873353`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04`", ",", "2.3988104420068828`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "1.9007296249762287`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.060000000000000005`", ",", "1.5523034857919946`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06999999999999999`", ",", "1.294742886938658`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08`", ",", "1.0967789181519891`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09`", ",", "0.940144802477771`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09999999999999999`", ",", "0.8134094099302127`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.11`", ",", "0.7090316878707601`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12`", ",", "0.6218243724778264`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13`", ",", "0.5480958880954042`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14`", ",", "0.4851439179080249`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15000000000000002`", ",", "0.4309426749596137`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.16`", ",", "0.3839423181477208`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17`", ",", "0.3429360775712463`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18000000000000002`", ",", "0.30696975119908304`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19`", ",", "0.275278550382055`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.2472420816113485`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21000000000000002`", ",", "0.2223516452327474`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.22`", ",", "0.2001860779309168`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23`", ",", "0.18039363489677027`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24000000000000002`", ",", "0.16267821481463798`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "0.14678875599973631`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26`", ",", "0.1325109807904788`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27`", ",", "0.11966090116665604`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28`", ",", "0.10807966093190957`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29000000000000004`", ",", "0.09762940315667196`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "0.08818993197145926`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.31`", ",", "0.07965599550460471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.32`", ",", "0.07193505870499567`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.33`", ",", "0.0649454656233546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.34`", ",", "0.05861491362886728`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35000000000000003`", ",", "0.052879179218606874`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.36000000000000004`", ",", "0.047681048083455066`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.37`", ",", "0.04296941202513151`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38`", ",", "0.03869850296286309`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39`", ",", "0.03482724019646649`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.03131867172311506`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.41000000000000003`", ",", "0.02813949404636187`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42000000000000004`", ",", "0.025259637797380215`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.43`", ",", "0.022651908783567917`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44`", ",", "0.020291675915553437`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45`", ",", "0.018156598944309793`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46`", ",", "0.016226390136513925`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47000000000000003`", ",", "0.014482604990333126`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.48000000000000004`", ",", "0.012908457889490459`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.49`", ",", "0.011488659247275768`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.010209271228252116`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.51`", ",", "0.009057579578053181`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.52`", ",", "0.008021979636961383`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.53`", ",", "0.007091873751221144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.54`", ",", "0.006257581128291176`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.55`", ",", "0.0055102554140476455`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.56`", ",", "0.004841810971799481`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5700000000000001`", ",", "0.004244856933234082`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5800000000000001`", ",", "0.0037126372881430385`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.59`", ",", "0.003238976783490702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6`", ",", "0.0028182319010874833`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.61`", ",", "0.0024452463630900093`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.62`", ",", "0.002115310679057357`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.63`", ",", "0.0018241254250116184`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.64`", ",", "0.0015677669971318386`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.65`", ",", "0.0013426582413109498`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.66`", ",", "0.0011455390599583606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.67`", ",", "0.0009734413729438803`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.68`", ",", "0.0008236654179028751`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6900000000000001`", ",", "0.000693758117017295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7000000000000001`", ",", "0.000581493197135844`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7100000000000001`", ",", "0.000484852902326359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.72`", ",", "0.0004020111553465484`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.73`", ",", "0.00033131803685107334`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.74`", ",", "0.00027128547262019495`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", "0.00022057401651870109`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.76`", ",", "0.00017798064167482737`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.77`", ",", "0.00014242745074619098`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.78`", ",", "0.00011295123439411773`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.79`", ",", "0.00008869380196452066`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "0.00006889302402556893`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.81`", ",", "0.00005287453159510992`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8200000000000001`", ",", "0.00004004401652184134`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.8300000000000001`", ",", "0.000029880086898958466`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.8400000000000001`", ",", "0.0000219276338664942`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.85`", ",", "0.000015791668441274047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.86`", ",", "0.000011131596205983367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.87`", ",", "7.655888934911141`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.88`", ",", "5.117129616274896`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.89`", ",", "3.307398020792542`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9`", ",", "2.053972035632692`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.91`", ",", "1.2153202796374268`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.92`", ",", "6.773634885796951`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.93`", ",", "3.499837112402616`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9400000000000001`", ",", "1.6376168469007674`*^-7"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.9500000000000001`", ",", "6.692381752341512`*^-8"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.9600000000000001`", ",", "2.2480907857228208`*^-8"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.97`", ",", "5.540849688581809`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.98`", ",", "7.766287663951295`*^-10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.99`", ",", "2.748176244563561`*^-11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "1.0569063272549936`*^-19"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.784439982317325*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataxsFinal", ",", " ", "dataxAntisFinal"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"PointSize", "[", "0.013", "]"}]}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783179848025412*^9, 3.783179850075786*^9}, {
  3.7831824209273643`*^9, 3.783182423622733*^9}, {3.783182634716357*^9, 
  3.783182635049911*^9}, {3.783685717570986*^9, 3.7836857215143423`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxt1AtQU1caB/ArVGAhVuqDlSo2IkUd0IIIhTK5X7RdeQgKlMeS0iZAQSwi
ICICVm8BFUFAUirBIkRrB7vIQ7RUWimXhzWVQpFXIqINyEMBJSoglCqbcK/n
Xrp7ZjKZb07m5Hzf/8xvVVCkV4gWhmFV6o/mO3FJqVNPQgrcez1x0S/kd/Cq
xuj19/rqyiPDnld/hg1+frXONUVwPoqnL/+GBK2s3P1nx8/DiKfmF7WwRNvR
pTbtHGyy0ax6GHm24fXsSCl9fgPkx906oGV1BurH1wZk1V2H3dtL1x8fywMD
+TfqE29AgF3MgqwVueA1+4cyUDr9nH7mdA6cztOsX4H4KviOKFgMvQmaA28C
MZr3lBdxEtapTxtf+xuU9wtvaosyIFpzvagmOFm9pnKrSxpUzd6/GZRnSzJN
047RfbWASvrohdGyI3Q/LVCuXyiZP5QEzj2aP7gFEq+6zBfPCbq/W1BeN1PP
3X8ITtZpGmiFKLuCYx8JEmG2XZs2kNqkBeuLD8BsO3J1zTNIUCzeT/ffDkTq
iHO2PAbe0lxnZQeQx/m20x3R9Dw6YK2NS+APelGwM1SzOoFcrv1Pt/bd9Hzk
cHLs4Nb8oV2gOW1JqRyI9uWPxNt20vNSAD9fJy549FOY0Bw3roDyaocY09+D
6PndBtXRstDiPhHgmvHwugBrbD7D8fmEnmcX8IPXaBe/+xHMXu/IHSCvf7ol
Jezf9Hy7waP5xaTiDx9o+k2z1PW3i/Brpz6k530XVNUTDtNHPWHp7AXvARnq
QSz03UHP/x5ITxcubpzeBrPHBfwB0gxRrM2EM52HEsin/m32vK10P0rAbLHm
3F/fp/NRgso6wbg+ZzPdn3rfXphbaA10Xj1AnHfTkUkd6X57QGR5w25HhD2d
Xw8o32gTRGTa0v33ApFo7mLx10Y6z17gbi8TuJdZAXVcL/BLs8RfbFlP53sf
RDJfVyPJOno+90H5e+fyOG9zOu/7QEhk/j9FrKbn1Qfc3QbG3V1cOv8+ICIb
H+BrTOj5qWvhWKLBKmP6PfQDf6ln0d6vltLz7AciuyfkZdwi+n2o9+X2bUUJ
C+n5DgChS3jYVurT72UAyGjJruYsHXreA8DPrPfcPqEFs+3qDwK/38GWd2UG
p+avrjnrvNYL/sSp9zQI2LeEybWGcZzK4wEQSRcmz3U/wak8HgB5zpNzwfgR
TuXxADDBLnFeyiBO5aHez3r7mULei1N5PASi/kqh3cO7OJXHQ8D8x2PTD8lx
Ko+HwN+4oNQPb8WpPIYAIwt47lONOJXHEPBLFK2Pza7j1PscAuKor8Qrtgan
8hgGzDl2ddN0JU7lMQzEzD2BKKYcp/JQ78d25C/DinAqjxEg7sZvFLoW4lQe
I4AFfWnX83UOTuWh3u/UrmnhpuFUHo8Ai3N/ernwME7loa6VZ40dF+3FqTzU
9enxYummYJzK4zFgM2Nvr87ywqk81PWkru7UYcCpPNS18OW8pebmVLv6o4CZ
XpEdMtOl81DXB+21m8y6eVQe6lorVdzvKuZReaj+x+dXflP9XYPKNxslEWVF
8MprI67lY9eK88hr8QrT2Lg155DXkpx9e9LHCpHXqYnu7bhtPvKag20zzngu
QV67HRQMTZmfQl53/6Nw8nbFl8hrq9zIE/EZ2chrQ9l7bVO+Wchr1eY6VYvO
CeS1ij/vRNqbx5HX0meHpy6nHGW8fj9rtN8hBXld7ugnDLdKQl57lLQWTAkJ
5LVHd9j4cNLnyOuoUENJ+pkE5HV5ADS5zz+AvFamjUSbXIpFXnM/+/qSSV4M
4/UvA88TK6OR18rnRhYu2lHIa5VT+J1LY7uR1/yyqIltGz5DXltxZV77inci
r7lka7FdSAjymng5T77XJxh53RIoCyT3ByKvpcP3G0tShchr8tRFv5GYAOQ1
5vhxeEmRP/KamCz60drED3lt6BBYENnsjbw21Mvl//W9F/LaY2OpzmSzB/Ia
S4mPn163nfE6yNJurR7jNVfmJNlizXhNvBbpQxb8C3nNv7hwoMSV8Tpq7GpY
wTuM10RdlZNjNs543benzMmU5bXZzLtG+iyvu9ze4mxmvMbK9vi8QzJeS0M7
sWVfMF6TvsuJG9OWyGtlQ3KBdxDjtWixWf6ABeM11kqGCHYwXosGdS1cGxiv
sfAwmxfzGa+x4ZjAOj3Ga7JW8ESZzHiNFXlfCAtnef3kg5yWMJbXHIvRy98x
XvOjR8bMjjFek9F/koEqlte+ihr8Isvrq3kp3d6M10Q6x2VzLcvrFPeMkC6W
13qGlm1GLK9dk4WKJJbX8SuSZZ0sr92aO58Nsrzeo29y63OW1+FVJqM8ltcd
N1PvTLK89m9fdZntdcUpPyO21yUKTjnba9Nl8z5ke/1GJGcB22sHhw4fttfa
1d/fZXud+kFAM9trA+vDFWyvByp+eI/tdX4VMcfrjNtGc7y2D5iZZHt9pAGb
4/VQ8lyv+zbN9Trz/3strt+3smZVNfLaZcgB9/jPj6j+L5lnY24=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1, 3, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 
            80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 
            64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 
            48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 
            32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
            16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 184}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{93, 2, 183, 182, 181, 180, 179, 178, 177, 176, 175, 
            174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 
            161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 
            148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 
            135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 
            122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 
            109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 
            95, 94, 185}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.013]], 
         LineBox[{184, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
          19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
          36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
          53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
          70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
          87, 88, 89, 90, 91, 92}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          PointSize[0.013]], 
         LineBox[{185, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
          106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 
          119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 
          132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
          145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 
          158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 
          171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
          183}]}}}], {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 0.05029887176126889}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.05029887176126889}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.013`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.013`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.783179850489792*^9, 3.783182424309304*^9, 
  3.783182635872725*^9, 3.783492437708837*^9, 3.783685722292025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataxcFinal", ",", " ", "dataxAnticFinal"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"PointSize", "[", "0.013", "]"}]}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7831798626320667`*^9, 3.783179886530147*^9}, {
  3.783182433541095*^9, 3.7831824706497583`*^9}, {3.783182641852489*^9, 
  3.7831826421985703`*^9}, {3.783685732176346*^9, 3.7836857339862337`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJztlOlPVFcYxm9QKVKDQLUsrUBVFAMVWhDpMue5tSS4hLJoRcloBwwlpdJC
UUCh5aoQUNRiXQIGZCxVcSkYmtaBoCBLVQQKZRk2YYbFQRgKkYIRIfbeOcd+
sP9AP3CSm8mTM3nP+zy/N+9boV8HhhlxHFciftJvwqICH+3+ZFhaj0fnD57H
C82x87JeJf++YsKpFLb9T674HlVCZZcyHKC6heRnet9ssxz8FCUzVeeVI35H
/rdnlFnQB0j/uI0Ps38J//j6GXi4S6cSmi/mB6tWnGLvVSFzl8mM9+MTqJxw
El+ohuY123TjeRl4VZ0nVrwD//RyRcelowg0PHgXbsOFS6yuHcbZLOncg/WV
vWvdTFLRu18qWAPl+bTLDteTQfutRVp0UIou6yCipfai6pC2pL7M/qaAYkP/
9fBKVA0rHL9jPhuQmXD2U7tVCcxPAxQLDrXYJcRjvVZ6oBHWDsFm+yxjmb9G
KKvTzWN1MciokAz8ifiySw6K8WgY7Lo3wc02tyzYLQoGO+omRPms+fvQu5HM
fzOi9Msm7TZHwF5qx64F/IqImLSScJZHC8bUmhtXQ8IQ/rl0WuFQfeyRbN0u
lo8a/m0H7C9sDYFUbVGBGkKQYt8t989YXm1o6AhN7TOTY1IqN9EG4XWXxkLP
7Sy/dmSEHNirz9sKIsUj60BDUX6nlf8WlmcH+JCk97euCYShvZROOKif1co/
8Wf5dkFz+KRztYsv6mqlI+oO1VJHy40s7wfQzHR5PPf2wWJDg91QkKIU91ve
LP9uCPrNXRvi1sFQTt4Dt8nUp4oInvHQgI+UN2C5jPnRQOOdkxvQ9B7jI97v
WJhl2+7J/Gmg3HRxOvVtD8ZLC82d8VBy7x3mVws+8/RTi02ujJ8WgnHIgtPx
zsx/L8otdHt6Fjoxnr3Q/Jzp9buxI2i5XvAnVA/mbFnK+PahPPGHofXd9iyf
PvArR+frlG8w3n3gCps+UmutWF794DYmm/idWsT494PHybmXr1mw/PohNE8X
Z/JmbB4GwHfyO13uz2d5DoCrjHzliG4em48BCPdWz61NMWL5PoSgTZ8yc31O
6Lw8BBdWM7rdforQvEX9gc1Ia9UEtWuqA9duOels+pjQ/HUQVgbVuKhGCJ0n
8b6+bmdi4CChPAbB5/Ul2VT1EcpjEJwuf9ubvT2E8hD12PLYq0I7oTwGIXzl
O+W1tplQHo/ACT+GWpT+QSgPUScVV97Iu0soD1Fnn9JZ6SoIbXAIXEmQvuhc
KaE8hiAYcYvV234ldD7F+yctBRkBhYTyGIYwkKsoSL9IKI9hcHiy+2R1LqE8
RN16Ie64+jShPPTgKu5qZ1yPEcpD1LyNPKfjIKE8RO3T7aEMjyOUxwi4NlM/
44IvCeUh6tXczWUtOwnlIeqaGPfdLX6E8vgL3PGq+w4VMsZD1ObX5FUbnBgP
UXsaR4RsMGc8RsFNHZkOmzMmozxEPXbFvkx7W0Z5iNprxOmc7R4Z5TH2n339
Yp/P7uvZfT27r2f39ey+/n/u628GXUPn/Fby775+Wf8D7ORnYQ==
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1, 3, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 
            81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 
            65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 
            49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 
            33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 
            17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 185}}]}]}, {}, {
        
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{94, 2, 184, 183, 182, 181, 180, 179, 178, 177, 176, 
            175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 
            162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 
            149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 
            136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 
            123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 
            110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97,
             96, 95, 186}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.013]], 
         LineBox[{185, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
          19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
          36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
          53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
          70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
          87, 88, 89, 90, 91, 92, 93}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          PointSize[0.013]], 
         LineBox[{186, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 
          107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 
          120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 
          133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 
          146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
          159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 
          172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 
          184}]}}}], {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {-4.6439169848571445`*^-19, 0.03497816458688886}},
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {-4.6439169848571445`*^-19, 0.03497816458688886}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.013`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.013`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.78317986475602*^9, 3.78317989259348*^9}, {
   3.7831824404900093`*^9, 3.783182471213367*^9}, 3.783182642895322*^9, 
   3.783492448407209*^9, 3.7836857345800943`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataxbFinal", ",", " ", "dataxAntibFinal"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"PointSize", "[", "0.013", "]"}]}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7831799067344017`*^9, 3.783179908540393*^9}, {
  3.783182187535079*^9, 3.783182194380411*^9}, {3.783182646713449*^9, 
  3.78318264705541*^9}, {3.783685791797875*^9, 3.783685793738264*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJztlPtPk1cYx0/QiJTF4Syy6ATcOlfkIpFt3tbzgEMugYCwWGUgMrnpMLHM
wYTB7BBYNCKQIIhThwETMwfIbBkoYS8ggbqCMC7tuLiX4sqtKA656BbceXuO
+8H9A/uBkzTNJ2/7vM/z/Zw86w8eDY21QAjVkI/w/aW4wncoNRPsNPcGjOp8
eMGInZe5xj5rIqSmHlCC7ZLz82ehTCET6Uo5OJ58eufx6dNgChF+0QDX3jhm
yM35Bt71EE4TjGZLbQOuZbL6d0BRWz7r75IBTTPSiNzGZuAnguQHLJVgrSsl
FVuAc54xxcjTINT8wlbo6D6UUvB6ClwoFo4GFJ8PP6jbmQyGVKHgXZiKSYuu
aj4GTqTajFQL7qp83lSQCIlCe4o2QIF3HlkFHoVac//tEHUKItP5BDZXBziu
vKn+Qn+IzdMBN/ylRUnvxIHfkPCCTkCnLOJbGqPZfJ3Ar+qf9LzyCeQ1CgP8
Ctz+3snHSQfAPK5HFzgu+F3d+FoEmMfRdQHvcVjsZR3G5u8mHKlol8vBQWjH
vgeUO4LGqyc+Ynn0AO+9dNezhhCIjxNOL3Ap9oftrgazfHTgmfbQIt4tEIRq
4godcPNb2vvE/iwvPShjWl8pD/KBWaHcjB4c1YW3nLs+ZPn9BlFZK4ovXvAC
LMQj6wMunqt0+gBYnn2A0lfXd1fsAHN7Wf0kv9xe94ytLN8B4JwGbcJ/eA/a
tMIhXLswliTxYHkPAqdq8j5jcAdbc4P3Qfk82Gaq3pXlfx/Qpm9vFjltBHO5
iN8BiUdnvnq6gfngQen36hqZRMLm4YGrvp7wWcl65ocH9OO22I9/sWfzEZ61
2VqqX8N8DQFaZixaHm7H5iXsEnbSzUfM/BGOV5x5fHYlm98AKLG2OE++gvk0
gHLvgNVuiQhoOfLca+0qffIy5ncYlA5vhZ2AJSwfwi2xanEiYr6HAX26nUt+
/hemeT0ApLHcfK5hDlP/hLtz+CjbJ5jmR3hovrpibArT+/AH+X+h67ZIE6Z5
Eh4xWGorRzC9H4Tzu1QplcOY5msEtG5zUIAvj+l9IZyY5bi/pQ/TvAmHrbVK
NvbQcUUjgNqiRU+1nZjmT3jeGCb6WYvpfSKM1Cc7rFsw9TEKqN+54OKeRkx9
EL71pg8/WYepD8Iqt8ihS9WY+iCcvedG/9dVmPoYA7Tbq1Vz73tMfRDOLDek
+5dh6oNw2cB2ZeBlTBscBxTTGOoSWIipD8Iq5ZV+SR6m95Nw93eu655kY+pj
AlCdZLx57gSmPgiXxK32qU/C1AfhmioHg+YI82ECdH7q7bnUg8wHYf7961Kd
nPkgTBak9/IA5mMS0D7tbZEcMx+EPff+eZnfxHwQ5kaP5HTaMx8PAdncRtKf
RMwH4ZLBLWPT0zLqg3DU+C7NUr2M+nhEnv8d7pOrklEfhD0XZM+MGTLqgzBy
XziX6SajPqb+s59f7O/F/by4nxf38+J+XtzP/4/9HFzse3d0X92/+/ll/gdX
Dk2z
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1, 3, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 
            80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 
            64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 
            48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 
            32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
            16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 183}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{93, 2, 182, 181, 180, 179, 178, 177, 176, 175, 174, 
            173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 
            160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 
            147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 
            134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 
            121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 
            108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 
            94, 184}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.013]], 
         LineBox[{183, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
          19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
          36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
          53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
          70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
          87, 88, 89, 90, 91, 92}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          PointSize[0.013]], 
         LineBox[{184, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
          106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 
          119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 
          132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
          145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 
          158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 
          171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 
          182}]}}}], {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {-2.95070990956088*^-19, 0.017295462825083065`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {-2.95070990956088*^-19, 0.017295462825083065`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.23399999999999999`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.013`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.013`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.783179908964951*^9, 3.7831821952996283`*^9, 
  3.7831826478328114`*^9, 3.78349245769319*^9, 3.783685794377161*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "dataxgFinal", "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"PointSize", "[", "0.013", "]"}]}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7831801032741833`*^9, 3.783180132890923*^9}, {
  3.783182171568158*^9, 3.783182174532673*^9}, {3.783182650575025*^9, 
  3.783182650898966*^9}, {3.7836857395317373`*^9, 3.783685741835865*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJw9lAtMU2cYhjth2QaCrEMguHHrFiRqgsMBMnteBTaBLDIIKEMu4bKhKJcy
QgYWdQQEDCqgBBgXcVwGwoA4ddxBQBiIgwK1iFxaaCmXQo0CQ+PKOD3//JKT
k5OcfP/3Ps+X3zw4yvP7bSwWy3/rod/n9GuPShKScdVo5/XAq/P4/5tFysrv
Wufa7haE8+T2IfVzaDBJWfJoaIN7y+rBN7JZlEVztUSlHUjlHAthXZZA4UH/
8QCRezw+yt8+jQM2dHXBuf1pTuaNZ6R/N1CzOZCUPYautd1bJzxEVkCM1e0X
QmiLSrc69oLXmBkbWj4CT/WBf+Hd/EcKq2IBfsmnqw92hSflJeWDmEmgG/Zj
0Inq14wbADPvAKzXFtLu3OwDjx4v+jEuzH6ayDHsRaN6/r9R5WzTUzrcTXIO
4RXX3vtVXyfJMwTjrIgak/UOuEjoAwQolpr0Gf3aRvIJMNagJ9hV3YzMTjrA
MPi5dTlcVQPUcW1GIAz9Lb3o+n2o44hG0Bx8U+QdepfkH4WXNFvzePgdmNLj
mAgRc0Bs7FxST3gIoadjbdGzrRZhP9D1BC/tuodfs6sJHxECCr/lV5yuBN1N
v1aEl5UdtgasCsJrDC7Bjq5uQ6VYp9utjaGy8ZiTePQW4fcUb8wKuawPSkDR
eLjjCBMWJ+QPFRKe4xhMVuVVTeZDPV7KM7SEV0/u+DyX8J2A93iHx4neG3g8
QNcEXNLrm8pyswnvSRjfmy6oKMrETvWAU9g36Xtct+oK4T8Fvq1gtj3qMtTt
/KYh5itb/VNTiQ8xjlZ6WefPJ5M8YsQVZHT0ZiQRP2Jc2EiWjERcJPnE+Ezl
6B+wPZH4kqBf0V2WcSue5JXg0L4WxVJWHPEnwaX+qJZ3hD+S/DPQD/5ql24I
j/icQZ7s4j/rpyPBtJvB6FnemZK0cOJ3Fj8lmDU7GoQRPrOIHTYt13k/lPie
hUHU5kMzryDCS4rEotFO5Yw/8S+FyLddVV/3HeEnxe+ij92TN73JPsjg2mxq
09rtSXjKUO1yJFIgcyf7IYOg31rz1L9uhO8ceiycbG83f032ZQ6NBRPmSzpO
hPcc5GFTJ8/1AOq4WnJs5A50lfg4EP5ySOO3WeTd/4Lskxxn7+V+Gd67n/iY
R4alLPDQwl7iYx6OrfpsLS9L4mMeGvwzfHa1BfExjz+NfCPfK/yE+FiAfaDr
IuewIfGxgIrzqxzvHWziYwE2meHsPxq0iY9FBBm6rxSpNImPRaS9aFdOe21S
zH4uIsPx/CVL1TrF+FgCp3bPfu1rzynGxxIiCsdXHHzkFONjCV4Lq34HdcUU
40OBMkjF8XFCivGhQJdutFtO2yOK8aHAkeiYD6cdHlCMj2W07j3V2xlyl2J8
LCM6yEcvqamCYnwso65DUlrDz6UYHytQLLI1Bl+nUIyPFXDNq7CxzqMYHyt4
0qw6/DPHh4mrpUSMFT/dYcCOYnwowe5RJn1Tp0UxPpTIik2tjbBr4zI+nr+9
n09oNK4VNDW9vb//A7ZM01k=
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{1, 2, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80,
          79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 
         62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 
         45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
         28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
         11, 10, 9, 8, 7, 6, 5, 4, 3, 93}}]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.013], 
       AbsoluteThickness[1.6], 
       LineBox[{93, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92}]}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {-1.0569063272549936`*^-19, 0.7673795578673592}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.783180112765292*^9, 3.783180134272502*^9}, 
   3.783182175137115*^9, 3.7831826515034513`*^9, 3.783492470428952*^9, 
   3.783685742284513*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
0szSfw==\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Check", " ", "sum", " ", "rules"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.783251598371819*^9, 3.783251601961678*^9}, {
  3.7836230346513853`*^9, 3.783623038219452*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MellinV1f", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.783622945052004*^9, 3.783622955082103*^9}}],

Cell[BoxData["2.0000710310221343`"], "Output",
 CellChangeTimes->{3.7836229591207247`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MellinV2f", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.7836229693931293`*^9, 3.783622993670086*^9}}],

Cell[BoxData["1.000003117213672`"], "Output",
 CellChangeTimes->{3.783622993968671*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"MellinV1", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.783623357482429*^9, 3.7836233753572817`*^9}, {
  3.7836586812860537`*^9, 3.783658685339617*^9}}],

Cell[BoxData["2.0000710310221343`"], "Output",
 CellChangeTimes->{{3.783623361975754*^9, 3.783623369204973*^9}, 
   3.7836253009297543`*^9, 3.78365868599721*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"MellinV2", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7836233811327257`*^9, 3.783623390459299*^9}}],

Cell[BoxData["1.000003117213672`"], "Output",
 CellChangeTimes->{{3.783623381705611*^9, 3.783623390822888*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Naive", " ", "momentum", " ", "sum", " ", "rule"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MellinV1f", "[", "2", "]"}], " ", "+", " ", 
   RowBox[{"MellinV2f", "[", "2", "]"}], " ", "+", " ", 
   RowBox[{"Mellingf", "[", "2", "]"}], " ", "+", " ", 
   RowBox[{"2", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], "*", 
         RowBox[{"MellinV1f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "4"}], "*", 
         RowBox[{"MellinV3f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "12"}], "*", 
         RowBox[{"MellinT8f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "24"}], "*", 
         RowBox[{"MellinT15f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "40"}], "*", 
         RowBox[{"MellinT24f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "10"}], "*", 
         RowBox[{"MellinSigmaf", "[", "2", "]"}]}]}], ")"}], " ", "+", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], "*", 
         RowBox[{"MellinV2f", "[", "2", "]"}]}], " ", "-", " ", 
        RowBox[{
         RowBox[{"1", "/", "4"}], "*", 
         RowBox[{"MellinV3f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "12"}], "*", 
         RowBox[{"MellinT8f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "24"}], "*", 
         RowBox[{"MellinT15f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "40"}], "*", 
         RowBox[{"MellinT24f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "10"}], "*", 
         RowBox[{"MellinSigmaf", "[", "2", "]"}]}]}], ")"}]}], " ", ")"}]}], 
   " ", "+", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"MellinV3f", "[", "2", "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"1", "/", "6"}], "*", 
      RowBox[{"MellinT8f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "24"}], "*", 
      RowBox[{"MellinT15f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "40"}], "*", 
      RowBox[{"MellinT24f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "10"}], "*", 
      RowBox[{"MellinSigmaf", "[", "2", "]"}]}]}], ")"}], " ", "+", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], "*", 
      RowBox[{"MellinV3f", "[", "2", "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"1", "/", "6"}], "*", 
      RowBox[{"MellinT8f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "24"}], "*", 
      RowBox[{"MellinT15f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "40"}], "*", 
      RowBox[{"MellinT24f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "10"}], "*", 
      RowBox[{"MellinSigmaf", "[", "2", "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.783623474401248*^9, 3.783623492864334*^9}, {
  3.7836236368589363`*^9, 3.783623746246149*^9}, {3.783623804153706*^9, 
  3.783623817126297*^9}, {3.78362386137628*^9, 3.783623887623851*^9}, {
  3.783624124307416*^9, 3.783624208593513*^9}, {3.78362439477601*^9, 
  3.7836244187019873`*^9}}],

Cell[BoxData["0.9357650586916132`"], "Output",
 CellChangeTimes->{3.783623498084072*^9, 3.783623837458693*^9, 
  3.783623893921311*^9, 3.783624221683189*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Correct", " ", "momentum", " ", "sum", " ", "rule"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MellinV1f", "[", "2", "]"}], " ", "+", " ", 
   RowBox[{"MellinV2f", "[", "2", "]"}], " ", "+", " ", 
   RowBox[{"Mellingf", "[", "2", "]"}], " ", "+", " ", 
   RowBox[{"2", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], "*", 
         RowBox[{"MellinV1f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "4"}], "*", 
         RowBox[{"MellinV3f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "12"}], "*", 
         RowBox[{"MellinT8f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "24"}], "*", 
         RowBox[{"MellinT15f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "40"}], "*", 
         RowBox[{"MellinT24f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "10"}], "*", 
         RowBox[{"MellinSigmaf", "[", "2", "]"}]}]}], ")"}], " ", "+", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], "*", 
         RowBox[{"MellinV2f", "[", "2", "]"}]}], " ", "-", " ", 
        RowBox[{
         RowBox[{"1", "/", "4"}], "*", 
         RowBox[{"MellinV3f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "12"}], "*", 
         RowBox[{"MellinT8f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "24"}], "*", 
         RowBox[{"MellinT15f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "40"}], "*", 
         RowBox[{"MellinT24f", "[", "2", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"1", "/", "10"}], "*", 
         RowBox[{"MellinSigmaf", "[", "2", "]"}]}]}], ")"}]}], " ", ")"}]}], 
   " ", "+", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"MellinV3f", "[", "2", "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"1", "/", "6"}], "*", 
      RowBox[{"MellinT8f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "24"}], "*", 
      RowBox[{"MellinT15f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "40"}], "*", 
      RowBox[{"MellinT24f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "10"}], "*", 
      RowBox[{"MellinSigmaf", "[", "2", "]"}]}]}], ")"}], " ", "+", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], "*", 
      RowBox[{"MellinV3f", "[", "2", "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"1", "/", "6"}], "*", 
      RowBox[{"MellinT8f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "24"}], "*", 
      RowBox[{"MellinT15f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "40"}], "*", 
      RowBox[{"MellinT24f", "[", "2", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "10"}], "*", 
      RowBox[{"MellinSigmaf", "[", "2", "]"}]}]}], ")"}], " ", "+", " ", 
   RowBox[{"2", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "8"}], "*", 
       RowBox[{"MellinT15f", "[", "2", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "40"}], "*", 
       RowBox[{"MellinT24f", "[", "2", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"MellinSigmaf", "[", "2", "]"}]}]}], ")"}]}], " ", "+", " ", 
   RowBox[{"2", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "10"}], "*", 
       RowBox[{"MellinT24f", "[", "2", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"MellinSigmaf", "[", "2", "]"}]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7836242975367327`*^9, 3.7836243683370953`*^9}, {
  3.78362440023917*^9, 3.783624426178363*^9}}],

Cell[BoxData["1.000019637379658`"], "Output",
 CellChangeTimes->{3.783624385069689*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xuInital", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"V1", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "4"}], "*", 
       RowBox[{"T3", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "12"}], "*", 
       RowBox[{"T8", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "24"}], "*", 
       RowBox[{"T15", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "40"}], "*", 
       RowBox[{"T24", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"Sigma0", "[", "x", "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xAntiuInitial", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], "*", 
       RowBox[{"V1", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "4"}], "*", 
       RowBox[{"T3", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "12"}], "*", 
       RowBox[{"T8", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "24"}], "*", 
       RowBox[{"T15", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "40"}], "*", 
       RowBox[{"T24", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"Sigma0", "[", "x", "]"}]}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783879773637288*^9, 3.783879891800699*^9}, {
  3.783879954937893*^9, 3.783879967978939*^9}, {3.783880091290166*^9, 
  3.7838800945584087`*^9}, {3.7838803941330357`*^9, 3.7838804046287746`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xdInitial", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"V2", "[", "x", "]"}]}], " ", "-", " ", 
      RowBox[{
       RowBox[{"1", "/", "4"}], "*", 
       RowBox[{"T3", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "12"}], "*", 
       RowBox[{"T8", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "24"}], "*", 
       RowBox[{"T15", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "40"}], "*", 
       RowBox[{"T24", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"Sigma0", "[", "x", "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xAntidInitial", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], "*", 
       RowBox[{"V2", "[", "x", "]"}]}], " ", "-", " ", 
      RowBox[{
       RowBox[{"1", "/", "4"}], "*", 
       RowBox[{"T3", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "12"}], "*", 
       RowBox[{"T8", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "24"}], "*", 
       RowBox[{"T15", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "40"}], "*", 
       RowBox[{"T24", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"Sigma0", "[", "x", "]"}]}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7838798467371407`*^9, 3.783879851666567*^9}, {
  3.7838799017112703`*^9, 3.783879908654098*^9}, {3.7838799918615313`*^9, 
  3.78388008911372*^9}, {3.78388040754734*^9, 3.783880415668666*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xsInitial", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"V3", "[", "x", "]"}]}], "-", " ", 
      RowBox[{
       RowBox[{"1", "/", "6"}], "*", 
       RowBox[{"T8", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "24"}], "*", 
       RowBox[{"T15", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "40"}], "*", 
       RowBox[{"T24", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"Sigma0", "[", "x", "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xAntisInitial", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], "*", 
       RowBox[{"V3", "[", "x", "]"}]}], "-", " ", 
      RowBox[{
       RowBox[{"1", "/", "6"}], "*", 
       RowBox[{"T8", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "24"}], "*", 
       RowBox[{"T15", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "40"}], "*", 
       RowBox[{"T24", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"Sigma0", "[", "x", "]"}]}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7838798498869247`*^9, 3.783879853310821*^9}, {
  3.7838799994298363`*^9, 3.7838800094697933`*^9}, {3.783880105760624*^9, 
  3.783880149767737*^9}, {3.783880419366707*^9, 3.7838804282891617`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xuInital", "[", "x", "]"}], ",", " ", 
     RowBox[{"xAntiuInitial", "[", "x", "]"}], ",", " ", 
     RowBox[{"xdInitial", "[", "x", "]"}], ",", " ", 
     RowBox[{"xAntidInitial", "[", "x", "]"}], ",", " ", 
     RowBox[{"xg", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7838802274922857`*^9, 3.783880307692627*^9}, {
  3.7838812257007647`*^9, 3.783881230748172*^9}, {3.783881265049015*^9, 
  3.7838812809944057`*^9}, {3.783881684779066*^9, 3.783881687569483*^9}, {
  3.7838819722155523`*^9, 3.783881993493479*^9}, {3.783920870574909*^9, 
  3.783920884430625*^9}, {3.783921922034935*^9, 3.783921929419289*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
8gyksB9G2EsePtrNgf0wVUNB+yd3lwnUMzHFWVU3XewkUM/UkZi2LBCSQKCe
KXY6JMpNhRv7Yet2/P6g/asT90w9Ey00g0+6wOJm42jQgXKwYOPPlBGl3r+l
mmmd/1YJlb/3V6pT17vyXhOH3FgS8ETLSrdSX9/lsckH7UTqQOG8REgadb1E
PdKCFJ9+71YTQD3SV4OL5AcJGoB6JE4HqX1t5nsB9UiXyaWffQ/yYI/MrTpX
ofPEWuyRzXwM2lSeMEKgHinxxeS3o8lpBOqR5GYMmcQc9AjUI90wn9opztUF
r5mcDDPiK0BI0mC7KvV6Y8SVdkZOtxoEa1a2NFGPv69A0NaqpwbMxRvVuKn3
s6gvenAkO0peWBRQX3SZ+9iKSyIroL5oadf6EyPvvxKoL8qZZTJiGqklUF+0
4dQFR/VLwQTqi5zb1c5bnyCpoL7o4/zD/qsNXdB7zZn7RlIlbJk5aEhDXc/3
jw5P39QmQRfjXFAJ9fyKeqHgl/0y5U7rAfVCAwWG5uubxwnUCwloiH1Tk8sl
UC90Rq6zQ/jBSQL1QjLPg6W+L3TCkMq2Ko0fVSDRfGuDGHX9MCnLHNsbUgPs
eywi3KjrLep/bquwCLk4LRCo/wlQ3/c8yrOFQP0P2/Yv9RN3owjkn11emxMi
WbyIe6Cj7bdk7lLv9/o/qLud0qmCmdPMKyPU+8mDrbWTg5MkYLzd9EaH+vlR
//NQQY7bZF8/gfqfSC6193p2KQTqf7KPpEr3/pAnRh7ObhV5XA1BC0aHaqjf
H9Tz3C9qk2VrrSBQz5Nme0C02s2LQD2PijQl3T/9nArqeeIjVVX/8PbA5Yln
qZd4SSCuIrG0TH081O94uQxv4L9aQKB+J22ZOf7zPTsC9Tt8FP9vR6ao18PP
BKV166vAcHwgkoO6nqNex/jTJZ2gzBgCeWrHQ9XXK5E3Yk9tuFpei5d6vxLQ
Gf6irpR6PWGbycdPfT6iXkdjUXJYVfEFgXod/0PBURtZ1Akb+mU/qcvV8Gts
N5ykHi/qc0Qjylo6U6sJ1OdsbZPN6H3hRyB/TZExwaXb6zHudfhcdaQ9iS74
PbBtV7IrCV40+ny3oD4e6nN2DlalXQ02Jay7mc2V+ash7dT0HAv1+FCfE3hU
8+tO5dsE8tlMc8KNfo2O4l7nwJbOQY/OTuyz7ZsVl2vU3UXYKk6k8TZWg8yj
G7Rrqesl6nPuFWwuYdngQSCv7RrbRvbjPPQqqM/xO2B01C2Duv5/YmB03EiC
myo/nRmpH4/6HKHMnMbd5U4E8tsepU0F555iw37bgTYtGhoy9fryaKuap98s
iJbINb2u0ib4lW7sy7aphm/Thbe4qV8/8ttMWpWlnG7n4X7HWERwj/OVLuAe
vh569zgJDooH+0f+5/cN/+13BCIDE/OkjhPIc1t/vMD3e/uMCvLcjjgs1c9Q
r297Vza5LMXNQlSwkWZC/R6C39np1JOCatiWERg9TX085Lud6xm4yFWtgXue
iHxffk69bjAbUz/ss5cE0xIBa0ap7y90mZyR/5Z6vzCkv7hLYi2BvLeW8FkP
up5OcBJzM3t7exaYFObCBk2ViUcd7o2vwqrBkqNLPJ768ciDk7SP6tFhDFVB
HpwTb+Q1Lc4u7L8FHfpcbKjWqYL8N8vIZK9s6uNrt6T770uhHu9PQqOuWIB4
QmuzkDBaDSMbQ++zUH8+/7+90OmN3LXNXHW4F+J58q6CS7EG90KhGYs1a7tJ
uBeyvGd+PseHhHuh7Vfes9tSn1eoF7ruvt1oe2UV7oVk2Vuji6j/ol7oUXc1
eeP5ctwLtWzTvaIoVYJ7oWQNow6e9W9xL6TXYcd+dU8+7oXk+nWr7z7Mxr3Q
7Ha9E0Hi6bgXyly+QygaPce9kPfk+H2/0Ue4F3q/h6al7ks87oXUim9KmGhG
417IIaPLb1EqFPdCTTU1W5r5/XAvNK5ES8fg7oF7odSBtdI3LBxxL3RPmtfo
/NUTuBcK9f0TfI+ig3uh5Ouqk0ryMvC/e7j//Tbqa9pOyhkMC7pgP82dhsdC
jNMB+2mf9WfDjPXMsJ/WlPRLWspKDftpN5vWMr78yI/9tItK/Nrn6JZUUF/z
8+Bb8z6dauyn7TCoWbte+xL206q3Tx512fv1n37atqp1l3yu/PXTbjz/LOlW
VYP7GhbDudLPKyQwfRnXcGlTDhy66mYRmkXCvY1GSUfcNPV1hXob0yheMT2T
atzbLJXOnNRirMK9zdF7tmkHrSvwfkJ7jGwVajxT8H5C4ukHqoz4kvB+QgPR
nSHM52LwfkJv1lmpbfG8g/cTOpzSf5R2OBBSz2vyu1/sg8dMuUVbDbxg5nbj
3d9N/cAlukq+8vw8sHXP6NVtHwDWVPGXLSqn4e2Fe3tvOw6C7etQ28dVJjB8
slxTp2gIDn/qfFGxTRV7b0a5lq/uL3Hh3san/uTwwPNT2EOzPLz7+QtbF+yh
rfP4KSsbfgp7aNuu0Yps8NLHHhpPovh9858y2ENrWt517KoEM/bQSnI6crbQ
jGIPzUDfhDFx6hH20MTWThUy26n800MjfQWnru9/PbTXmjX6M9q1uLeR23N/
nxxHDcyYfC7Wbc4C2B6udqCahPsbiZS4hh+WJNzfHDm4lzwVXY37m9suv7f1
Of711Oo2lZQVtFTg/Yx+yVZlnBx6ivczCpmvqY2zfYj3MyqrTm+j3xmH9zMK
FFbfyZUXifczWv+jKurxt2CIMAp0Im3vg/XXOqSvpPjAZFJdxKcr/dDgf89y
0/xFCOE/9f1q/Qd45FGQPSNsBxf79OOvbRkE4yNRK4MfzIBtzbzpb4ch2LpF
r8AuWxP7bZJk2aOhSSK4v3lfOsOyT1QT+2bptfxnaI+6Yt8s/fu2Q486zmDf
zMJPIP9GjjH2zaadZtd4ae3Hvlnsas2ixdBW7JuNJ/eIGfHNYN/so0BePrta
LvbNrH4ZGy20W2DfbCXrFveJ5QLsmynFJp9yOPoe9zcJq4x9fG41kNylky1z
Nx3KbzEFkT+RoOSXev8DvVxoUDTjybhPAoHZ57tOJxRClW2SicA6Eu51Ptfu
VH+6qRrvl8RUptBp1ngXeBqkSAViPTCZkJofWxwG7AslqhIXe2HL69dccV/8
oTqCtlugvg966I5IRalehe9erXFsQh+gpvSZ+bOdLvAwzPMZ57kBOHDtyyHJ
RBug2fihMbl8EI7BtyAaYUNIK42QjWEchsP3zx4Xl1KE1qONzr+FRyBD/stj
A8of7JsJ3fBneKbuiH0zOSVV7mjuc9g3c9HYHuQ/dQL7Zi2sXduKO7Wxb9Ye
4k+z4YcY9s2aV0/OjR1bh30zqU6BQne6Duyb6bZ6nw5iDMO+2aDkLlrx2e3/
9M2mfR8G6zz465vt+DouqpFSi3udjfHMa3mFa+Dtq9j8N9JZQNm4Nk2jiYT7
ncpXFboc1OtG1O+MDwiXOmVV437H/K147vvYvz6axzPZi010lXh/p/wDJu0T
Mc/w/k6pniOK0Qcf4f2dtolaBX6ijcf7O2Xa+PSsvRaF93eyirbj+M14E9aq
P2X58oV6XXivmzNUzhdsn9eED+j1Q2VX0riWhDtUkLYfMnryAcql/7xbyLeH
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
B9IGgBQ=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl1Xe8jnUYBvD3KLsIDRWJikhlhZJkaxipjAZlq5yDsleFMg4qZcsqRdLe
e++999577/G96o/v57ru3/Ee3ue5n0fdQSW9i8sUCoUiri/6P7eUKxSayWsN
h7OcT8wb5f6cxzrzZtmaC3nZvFbWYhxnmK+Wh3IJ75o3yPrMyGfMzWUpD+ur
5HYMpav5MLmUD/VGciYr9JZyEc/oO8liTtLfoK4+mXP0JnIuN+t/crzeVH5M
Y302a/WX2F0/i9P1d9hHn84F+kNU1ofQRV/O0+xoHsWJ+uvsqU/ibP0m/uA4
cxO5hhfZzXwmp+mLeJBK5sF01pfxFDVy/ThBn8GN/M6xzg6UI1nIA1R0NohO
+lKepHq+C/316dzAb/R2doAcwQLup4KzU+mo92Na9oBfOSb3Ww6nlPso7+wU
Ouh9mcp1/EIv543lMOZzL+WcDaS93ocp2St+pqfz/eRQ5nEPZZ0NyN7lnjGZ
a/iJHs4byXa5tkxiKz/S3c8ayn1pQP3cR/ZmL+plP3KfqMMe1KZW7n/uDbtS
k13YOfuV+5xdzLVnYnaaHzja31dDts11ZQJb+J6j/Ky6HMJc7mZbZyfnech1
ZTxX8R1HOq8mBzOHu9gme00bfQlPUC27Qy99HJv5liOc7SAv5YV8D/PY7IX+
dq6BPo3z9Tspk73lEP0DGurn5jnVD5ILeTy/L7+XkfTM98tnWMxr5vWyDhPz
/JivzH4yh03mlfIb2U1WzX2U7VjGR+bLc/+ZxWpzqzxzPK+vkTUZk/00t5EX
81bup5ya95DeTM7nDr0ozwwH6+9nF/IuyOf0x6iqj6CH/mp2QJ+QZzL/dr6m
q7mKXMVz2QXz6Oy8PpvbC4X/XpL9aa0u5lGqmIfTXR/LFXxFF2fby4HM4jb+
oZ/zVtkjxrCRL+mc96AcwExu5W/6Om+Z3WJ0rh1f0Ml55dy37BElXMbndPSz
SrIiFSiPV3uhbPYxO0aL7A/FbOAzOvhc/k9YybN5Fswl2V/9TerpU7IzelM5
j1v0v+ijN5dbZVuW8F7+TbJB3o9cZN4kW7CAR8yrc50YRrc8G7mP+bO8Yl4n
azOeUbm+eZdlp1lvXiE/le1lqS/9L2VTwLo=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl1XfYTnUcx/Ebj733TvYmMsvKDGnRICvSFCKVUaFpq8uIQoPKCmVV9h6R
kb3JzKrISOn1vfrjfX3G75zz3Oc3zlO4U/eHuyVPJBLJMJiZy8xIlUgc4h9L
kUhcQBG+eVIi8TFfmV6RG9Buckr6hNyUDpEL0+/k2rScvApHPbOF/Dlfk6an
TejbND/90PXN6Di5Aj0r16Od5Ru4S75PnshXof/KDemrcibaSx7BF+c38XVo
Q3k/ksmf0uq6JNqIvk5z0HeMfciX5g/ydemj8vl4D3kCraS7zNenL8pJtI08
mL+d/5avRcvKK3HEu35Ga+jS0cb0LZqPfuDasXx5/gzfib8ec8J/Qu/U/8O/
wmfke/LD+WL8xphzfh8S/GRaTZ+C9kf2mE/9B3wp/gD/CH8ufic/nt6h/5Pv
yqfgW/Pv84X4uXwZfgUOe4e0dBDyGhtlbAxfjj/NP8lfi3fkb6I3n8HYS/ww
vii/IeaM34tbnpec9kO2mA9jo/iS/H6+Ff9b/A7+D7zAJzf2OP8efxs/hy/N
L8chz0tDByKPsZHGRvNl+VN8R/5qrDn/N17m0xvrwa/HPfIe/Os5yWhfZDU+
yNg+tJTPxt/lf8fzsY+MP8bPRil5GQ66PzUdgNzGRxg7iQ7yX7E+/A304tMZ
786vi70t78Y/cehoH2QxPtDYXjwsn0FB/hKeizWPvcl/g5LyUhxw/3D5BNrL
V1CVv46efNo4o/za2NvyLtx0zwB5Dx6ST6MAfxHPxlrhEX4WSvBL4hy5Z5j8
K9rJl+Mc8tfwEp8mzga/Js6evBN/u+dNeTcelE/FWecv4JmYe7TiZ6I4vzj2
tnuGysfRVv4zzgR/FT341P5OV351fF/kX+L74J435F14QD4ZZ40/j6djjtGS
n4Fi/I+xJ90zRD6GJ+Q/UDn2HVbFeZZ3xNl03evyTtwvn4jzEOuD6Sgq/xB7
Kdn/386jaCP/Ht+N2DdYibvl7XFmXNdf/gUt5F9j/8Y6YBqKyN/H3nDd+/IR
tJYvxdmNfYAVuEveFnvcdf3kHfF9lI/HPoz5xtcoLC+KdXddxVhfLEdN3dbY
o/q+8nY0l48hV8wjvsLt8sJYT9dViHXDMtTQ/Rz7Td9H3oZm8lHkjLnClygk
L4h1cl35WA8sRXXdlthH+tfkrWgqH0GOmBtMxW3y/FgL15WTu2AJquk2x/7Q
vyr/jHvju4XsMReYgoLyvJh715WVn8JiVNX9FOuuzxbvji9QQPddzK2+jNwZ
P6KKblOsqz5rvCs+R37dtzGX+tJyJ/yAO3UbY930WeLd8Bny6ebG3OlLyU/i
e1TWbcBFfeZ4F3yKvLo5MVf6knJHLEIl3Xpc0GeSm2Ay8uhmx9zoS8gdsBB3
6NbhvD6j3BiTkFv3TcyFvrjcHgtQUbcW5/QZ5EaYiFy6WTEX+t+QXtcQnyCn
fma8t/4s0uka4GPk0M+Id9SvxzqsxRqsxiqsxAosxzIsxRIsxpn4f+Q59TEB
2T1repxl/en4X6C7B+ORTT8tzqX+VHyfdfXwEbLqv44zpj+JVLq6GIcs+q/i
vOgXYgHmYx5OIKVr6mAsMrvuy9gr+mJyO8xHBd2aONf6V+QtsTbyISTxtTEG
meSpsXfiN9A349z5tr1n7DAej72Aovxf6M6nMt6WH8oX4efx5fnVce49ZxKt
qr+lf43PzPfmR/Il+M2x7vxBpIj5oBX152LuaBf5JmrF/pPf5QvS0fLdNKM8
BcPTJRL/AftqTYM=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV1WW4FWUAReFDIyHdICHdSiMd0qAI0i0t3d0NXkCQ7kaUbqQMwqBLwiKU
ECQESd/vx3rW3nvmcO+ZOzNkbt2tbtfokUgkGioJdWJGIiUxLXYk8jhWJNKb
B/JovsSNODVP4tvckVvzYP6Gy/NPPj+F7+vduDsP55NchyM8jq9yK67O/Xkd
5+L5Ph/FD/Ue3JdH8nmuz6/zBP6T23JDHsi7uBjv8Pm78sdyRx7G33NVvunY
r3IzuTD34884GQ9z7F+5lzyAL6KhnIpvoYPcir9GOflH5/8jd5W78QnUll/Z
/5BbytX4c+SU59n7yOdQT0/IN/CR3IB3oqi83Xkd5KOoov+l/yI3lQvxTCSV
h9r7yz+jgZ6Sb6K93JIPoqz8g/O6ysdRS3+pV5XXIoc+V+8tn8UHegL+EDtQ
RN/meHv5CN4N111/W56BJPoQPYXcAgdQJlxvWxf5GGrqL/Qq8hpk1+fo8cPf
E9tR2LbV1k4+jMr6Df0t+VMk1gfryeXm2I/StqO253hXX41sttl6vHCNsQ2F
bFts11FQn45EtkF6snAvYB9K2Y7YnqGyvgpZbbP018K1wVa8bdtsu4YC+jS8
Hp4T/TCeopJtJd4M95ceV66LLXjLtsl2Ffn1qUgY7jn9EP5DRdsKZLHP1OPI
72MzCto2hnsM+fQoJLD117/DE1SwLUdm+wx9A35HXtsniG/vp3+LxyhvW4ZM
9k/19fgNeWxTEC88h/o34RlBOdtSZLRP178MzxVy2ybjNXsf/Ws8QlnbErxh
n6Z/Ee5p5LJNQlx7b/0gHqKMbTEy2Kfq63AFOW0TEcfeSz+AByhtW4T09ij9
c1xGjvCuQGx7T/0TrMUlZLePRyzHeoR3FtbgIrLZxyFmeH/p3cIzFO5pfIzO
6ISO4VkNz0e4d9EWH6ENWqMVWqIFmqMZmmIyVuNnZPVzxiKGn9VEn4RVuIA3
7WMQ3bHG+n7cRynbQqSzT9RX4jyy2EYjmr2Rvi+8o/CObQHS2ifoseX3sAkF
bCts55BZH4VIeK/qScN7B3vxjm1v+P7yT6ih39NLyvORRh+v95LPhPtdj8XX
0UauwxuRX17uvL/lznJbHsqHuBKfdWwsX9GbcCbuyyP5VXjXOT5VfyT3DPdx
+J35QnhvcZJwj4T3JrcL15QH8VdcMtjn78ld5M78I6rLd8MzEt5jcgmeh9Ty
OHtP+XR4BvWYXBsbkE9fFv7m8neoqJ/RM8oj8DL8Tnpibow9KOGcPeH7o7g+
F6lsY/UYci2sR17bUttpvKEPxwvU13fjDorpc5DSuWP0JTiFDLZheI56+mgs
xkmkD9cbz8I7Ta+LUViEE0hnH4Kn4fvqu3AbRfXZSBH+Fnp0uSa+RB7bQttx
pNUH479wj+mJuBF2o7jzdoZnR/4B1fRb4V0jN5eL8Cwkl0eE55Uf6N3DMxqu
KZ8K/y5HC88vX+PWXIMH8BecmxeE54zv6J24Tfhe/C1X4GOOj+HL4W/DabhP
+H+BnyAqXiTyP7gKKd4=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV1EVsFVEYBtABEqQ4xWFDgluxBHY4gQ1BNixwd3d3tzpuxRdQ2EALxYoG
EghWirbYhgQvVuzcxXn3/747bzHz7rw6Qyf1mVg0iqIitPKRUDyK0opFUXxM
FPUpEUX7qVkyik7yz14beSW/SdLd0HUzb6GcfJC3utryRF4zX3dU95fW8goK
SdRf13U1p1JWPsAbXS15Aq+Ypzui+0MreTm/SNBf03Uxp1BG3s9rXU15PC+Z
qzus+01LeRk/iddf1b2ihjyOfOboD+kKaSEv5Qeb9Vd0L6kujyWP2eG+db+I
k5fwnU36y7p8qsljeMGscJ+6nzSXF/ONjfpsXR5V5dE8Z2a4L90PmsmLKGCD
/pLuBVXkUTxjhj5N952m8kK+sl5/UfecyvJInjJdv093gWfE6kbwhGn29urO
85RKuuE8Zqq9Pbrd7GInO9jONs7xhIquHUYuU3xnqy6Lx1TQDeURk+1t0X2j
ibyAL6zTn9XlUl4eQg6T9Km6AhqHc8Zn1urP6DqbkykdngePdOXkwTwM51OX
ovtKo3DO+MQafaauUzjjxITnQ46urDyIB+F86pJ1X2gYzhkfWa3P0HUMZ5xS
4RnyUJcu1zefo4x5IPfDWZWT7N8ydzTn0tucRg3zCT7bz5TjwrmnQTirfGCV
fNp+trmd+Q4dwjtCyfA78cD+cbmeOYvS5h7WfAaY74V3wJzoupvmDuGZ0cvc
z/oxPAdzdWs6n1yXITcP7xH1zT3D+89s8/vwX2E+5bph1sJwXnVtrbdpb+5r
fUe8uXipKCph3s193xlgLeBY+A3s1Q3ngBg5Vu5uzqO/XFS+G95JebP/rv9z
gbTH
            "]], 
           PolygonBox[CompressedData["
1:eJwV01lQllUcx/GHTaBNbMGMRCGbymqmDYytCysqwCwCCmxKmdabbPfKSstp
tWaaaSHQuklALTNwaaUStZWl7aLtIiX29rFlQvv8L778vr9znvO+vM85p6B5
ee1tqUmSpKDSn6cPS5KZWUmyBb9OS5JZ2UmylP+NnZlJcqR+Jt+Nk/Xj9EV8
CCv0dH1SrtG3WZ+n38pT5KDxo2Wl/gOa9Jn6tfxPbNaz9UL+JrL0E/Rm/i/e
14/Si3kfKvRaOYaneIa5DL4On/vum+RBfGQux9wF/GtcrjfIn/ESzzKXy1/F
L9ZdL//CDnNHmDuD92KeXiP3414+gYd4tzW3yMSzA8Yu5t+jkS+Rf2ATL5Bv
IJMvk//gPV4kP0M5v1KO4sl4l7INgz7/RjmFD41XyK+wiNfLSbwYeyFfid/l
+e366XwXTuLVch/u4eN4kHd5rp9fxL/DNbxJ/o6NfG7sOabxHpzHP0UZv0KO
YC1Pk60Y8Hl79XL+JWr4ehwbexv/p/lt+nz+AQr53RjDav118338Qv4truad
mBN7gQz+Ls7ln6CUP4FU/gL6rd+jl/EvUM3X4Zh4/5gw362fFmcJBfwujGKV
vtV8A+9Avr4d6fwdnMM/Rgl/HCm8Jc6hNVV6W5zteG8YN9alnxr7i7n8Tozg
Af018/W8HbPjniCNn4/HkOjPx5nw3GV6K2bonXHWjc3R78Aw7o+7aiyVL8Cj
OITnYq+MjyJfvx0/4b4458bq+AacGOc37id/G2fHfUExfwQH8Wy8b2tukP/F
3Tc23VkvjXuGS/VcvS7eceyFnqnn8I44J9Yer1/HD8Q+mz9cP4X3YHacEb2K
/4jlcab0IbkyzrT1N8tD8U7iXZhbyL/BVXqj/A0v87w413EX+Vs4K+4Mivhi
OYyH+RSeiT312b28JO4ZLuEt8ft4ezxvfqv+P/Cwrqo=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV1Hf8D3UcB/BDi1SUllBGA0XaW/Zu2FLJHhXZGlbZVDSoKNqhlFVpqlBo
b9qlTUN793z98fR6ve/7+Lm7z33uqvYY1HZgyaIoSjDEP5VKF0XZUkXRRk4v
UxR1uYJPzRPlQVzMXeapshYjecU8Tu7GOVxqPkJexvv6VbIifbnRXEMOZrX+
L6308+THVNEv5Fb9MDmcF/SdZLucX3+LvfQLmKqvYDv1za3lnbycezF3YZT+
HvvrfbhBf5p/aGk+V87jeXY0t+UifQrL+ZHTHGslR3I9T/E3LRzvKueyjh3M
Z+ce9Mks4wdOdaylHMF1PMlfNM+ayQFMYinfc4rjLeRwZvEEf9Is9yT755nw
EN9xsuPN5TBm8jh/0NTxzrIfE3iQbZzkeDPZib55RixhKyf6ransSB+u5AG+
5QS/NZGNaURDGnB61j/rlHvN9eeacp78f/k7juc4juUYjuYo6nEkdamTvcPh
1KYWNbMXOJRDODh7iA70Zjz3803O4fqqy/b0yr5kMV/n3H6rJodyLY/xO02y
t2RPxrKIr3KdjleVd/ASu2YtGaJvZj+9N9foq/gt65L9Iz+isj6AW3Ltchhr
9VLyLHrkHrM/eTP3IfekG2Oyf3K9DGKheYz8MmuXd1FOk3W4nE/yfOWB2bvc
bp4iazKCF3Nvsgyd8v5ljfOusinPWO5LL642V5eX8Kj+a5519rX8kEp6f27O
85BDWaOXlGfSXX+D8vr5jNbv44s881yjXMBGSps75lz6u+yj92SG/gi/ZI9l
veRNPEcJ8xl5//XXKZfvR75V+r18nn1lriLns4FdzB2ylvo77J31Z7r+MD9n
H+f65RyepTC3yfPQX2OPfCuy3vo9bMneNVeWt7Genc3tGai/TYWsB9P0lfyU
dyXXLz/gAL0fs7Ovs7d4Rv+P1lk/+Sq75zuTb6o+Kfsy5+Bu82j5Wd6hfNv4
H2jCtFo=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1WWUlWUUBeA7dHf30N3dnSKISouCCqJ0qIBKpyAdAtIlrYKtmCAYhNgS
CordlKDwnMWPh73PO2uG+d7v3DXJ/YZ2GZKUSCR2+2d2hkSimfzBvFyuk9Nl
ZTYz2PygLMxaPjMvkPXYRltzf5mZpzhgniNr8jQLzBNkGTbwjXmJbMROapi7
yv/kC8zSqzFJHyeL87V+B0P1PBzRV5CC5uYf5XqG0I6apCQVqUlDWtKRHo+c
aOH7fpIb4ufSnlpkpKWv/Sw3MowO1Kab8//li0ymD5lo5fwXuYnh3EQduju/
Jl9iCneSmdbOf5WbGUFHBjjLwnv6QurSI14SL4up3BW/jzkvR/WVZKGN+Te5
hZE8ZC7C5/rN3Kdn5aC+iIl6Wb7V69FTT+IV/XFZnWn6I7IEJ+L7ZAP6xjPK
fKzmmHmerBPvP55TVmAj35mXySbsit/B3Fb+Hu8v9kPOkFXYwijzw7Jo7CFf
xF3I+mynk3mgzMYqDpmfkLVYrE+S5Tij16eXnoJXY6d5VC/JSb1f3L2en4/1
VWSL/TH/Ibcyms7c7yw778fu0oDe5pS8Fs/A3WSPPXL2p9wWnxtuoWHsr/NU
vK7P5B5yxG45+0tuj/dGFxqRM/bI1/6WO+JeuJXG5CI3echLPvJTgIIUojBF
KEoxkilOCUpSitKUoSzlYg/9f//InYzhNppQPvbI187LXYzldprGZ8B5avbp
s7iXCnRydkHuZhxdaRafAedpeCN2jf5UjHt2dlE+E3tHN5rHzjtPy5v6bAZQ
Ke7V2SX5bLxXutOCvs7T8ZY+J3afynGvzi7L53iMHjzgLAcf6EtpGXthTs/b
sVuxb1SJu3f2r9zDeHoyyFlOPtSX0Sr2wJyBd/S5sTuMNBfguL6aqnG35ity
LxPivs3F+FLvxWA9Fx/pT9I6dsackXf1efEceilOxbMwSi/IJ/oapuoV+V6v
Fu9Mvyqfjx3UqzIx3qdM5iu9N/HHITeH4xlkbZbrk2V5zsZ9yca0iXcuM7GS
/fGeZA3mx13J0qzntHmxbMgOBplHy0Ks4VPzfFmXraw1T5OV2MS5uAvZNOnG
367q5us1LcAD
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1nfcjmUYh/GH197ZKeW1d0NGIqOyZZRRQmnYREsipGhZiWgZWQ17K1uJ
7L1HZc+0zb7npz+Oz3n8zuu+n3Vf1/m+ye26N+2WIpFIfJwykRiSIZGYlJRI
ZMZ9qRKJD/Xyq4PkOmoV+Sp/FjXks/Id6hg5iR9Ua2EjL6o/jL/Es/Je/AYv
zz/nv3jTNWoZzNMvqP8ef4Kn4d35X7wQLvCWOMwHI7f1fnIazPE6k9UsGGWt
KlLhkFwbm/jL+NV138tlMV9ujcKYqz9FLytGy/cjNY7pz8N8LMBCLMJU12XD
R66pFp8Vx/UXY5r+TRijVx1pcUJ/Cb7Uz46xejWQDif1v8VX+jmS/n8GNZEe
p/S/w1Isw3KswEqswur4/eI74QesxY9Yh6+9Vk584nUeQAac1l+Pb/Rz4VO9
B5ERZ/R/wnT93PhM7yFkwtl4fb07sEBugyLYoD9DLw8+l2shM87FZ9G7Ewvl
trEXsFF/pl5ejJNrIwvOx+fWuwuL5CdRDJv0Z+ndjPFyndhHsRfiO+rdjcXy
UyiOzfqz9fJhglwX2XAxvrdeOSyR26EEtujP0bsFE+V6uAm/xW+hdw++lZ9G
SWzVn6t3K76Q6yM7Lulv0CuP7+RnUArbYv/o5cckuQFy4HCcJWzmr+B3122U
K2Cp/CxKY3vsPb3bMFluiJw4ItfFFt4Lf7huk1wRy+TnUAY7Yt/q3Y4p8sPI
haNyPWzlr+JP122WK2G53B5lsTP2vF4BTJUbxbnDz3J9bOO98Zfrtsj3YoXc
IWYCdsV50UvGNLkx8uAXuQG289fwt+u2ypWxUu6IO+O5yY/hCH8bu+OMyQXx
pdwEeeNcyw2xg/fBP67bFvMLq+ROuCueq/w4jvJ3sCfOpVwIX8lNcXOce/lh
7OR98a/rtstVsFrujLvjucut8DN/F3vjLMuF8bX8CK7x53CO54s5wRthF38d
l92zQ66KNXKXmBlm2/Py37xc7I+YiTEv+XvYF3NBLoJv5EdxnbfHeX4LTvDG
2M374Yp7dsr343u5K9J5nx7yP/ye2Ee8NX7l72N/zB65KKbLzXCDd8AFfitO
8ibYw/vjqnt2ydXwg9wN6b1PT/lfXj72G2+DY3wIDsR8k4thhtwcCfd0lC/y
/DjFm2IvHxDn2vqrcgLX3L9brY611rojg/UX5Mu8QuxR3hbH+dDYh9b7y2lx
MGarWhwzrbVACuud5N/4bTjNH8E+/kbMCeu95RS47v49ag38aO15ZLT+onyF
V4w9zp/EiZgN8XeVD4v9ywfwdDgU810tgVnxvtYG85Y8Je/ML/HbcYY/iv28
mLXhfCDPzl/jKXHD6+1Va2KdtULW3uc9eCb+Er/KK8WZ4U/hZMwea6P48DgP
/A2eHofjb49aErPjc1h7O84oT+Jd+O9xdvnYmBv8rNoMB3hx/RH8TZ6D9+FJ
qMDHxbOMva0+gPW8sP4Q3pNn5i/Hs44zwT+NeRNnU22HU7yM/mg+Is4aH8hr
qRnUSuqEmCXxt1MtFedZb45rC6jvxGzgqXjX+M3UP2JuqB/Lyfyc2jz2tt5B
uYT6gfwWz8n78ofUVGpFdXzsjzhH6oNx9vR+kouoQ+UXeBb+Sqyr1+Mcqp/J
DdTKMR/407G35dNyWfUjuV68d5x19U25tpoxfhN1otpQPRr/I/DSMV/kua5P
Vt+V66qt5NRqt/jN1T9jrqmfyPXVgvJ53iL2Ji+pN5IP4rn46zx17LU4w/Hd
sYG/iPti5sjP4AwfGfPCPW/JQ/2P+R9sHFTw
          "]], 
         LineBox[{1102, 482}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1WWYFXUAhfFLN5KKhDRIiYKkKAgSklJKd3cjCNIguYS00iANkkqngoAC
inR3p4Kkv/+H93nPOTN35+69s7MZm3Ss1iFaJBIpFT0SiYofiTyJFYl8he6x
I5E3uQ6f5iH8R8xIpCTv1vtyU27Dt3kUf+94Tl6m9+IK3IQv8zccjT/jP3kA
d+ZO/JDH8ACvT8GT9QJoIJ/nm/ZP5f3hevhZL6xvlGvjtfBzbf9xH6TGQX0G
cjlvuV4R0THQltI2RS6IW/oGVMXT8HshDQ7pMzEI1VAdz+xfIy0O67MwGDXw
3NYP6fCnPhtD8LprTbUVwm19I2rihd4fb+EvfQ5yO3eFXgkxMNT2hm2aXBh3
9E0oYtsUvhskwee2l+EzRXoc0Us55xe5GebqefSVcmXERFX9L+6CYY6n0qfL
RdBQvsB37eXlA3JbtJfv8WZ7UXlzuFe4Lrfg6zyCk4b3xMd5EPcM1+F/eCx/
4fWvwneBHnoGrstnwu/Mfzv+Cf8aPm9uHq7Pd3ieY+/IP8pV0FS+wrFQTT7C
XcP95rw39e/korinV9B/l9thi/6BvkWuh2SoZYvYBskZcVSfj7y2VeEeQ2wM
t6UO97v8Ae7rW1Eb0eyDbZlwTF+AEUhjn2Erhgf6NtRBdPsQW2Yc13/ASNRF
DMeG2rPghL4Qo1AP9dEADdEIjdEETdEMzdECLdEKrdEGbdEO7dEBHdEJMV1r
mOtkxUl9EUajM2I59o09G07pizEGXRDbseH27DitL0EU0tpn2j7EQ307uiKO
fYTtbZzRl2Is0tln2T7CI30HuiGufaQtB87qyzAOb9ln24rjH30nuiOefZQt
J87pyzEe6e1zbCXwr74LPRDfPtqWC+f1FZiADPa5to/xWN+NnkhgH2PLjQv6
SnyLjPZ5tpJ4ov+CL5HQHmXLg4v6j3jXtjr8DSIOJtoy2ebLpfCf/it6IZF9
rO0dXNJX4T3bmnC/Iy4m2TLbFsif4Km+B72R2D7OlheX9dXIZ1urV0c8TLZl
sf0gl8YzfS+K2bbq9ZE8/K3bXrONl9/FFX0N8tvW6TUQH1NsWW0L5TJ4rv+G
D23b9AZIgT62JLYJ8nu4qpfW94TnCdbq7+vr5ZpIgKm2bLZFclm80CuG/03h
+YR9+kf69vAcQ0r0tSW1fSvnwzW9jL5Xbol1egH9p/DcQsLw2YTnEHfDNMez
64vlcnipV9IPyh2wXy+u75AbhZ8p3+DX8YV8gr8MzzLnJdMnyvnDc0c+y9ft
ZeXf5FZYrxfUfw6vRzP5KicKn7F8lLtjuvPe1pfIn4Zryxf5lb2yfEjuGN6j
fJ8P2EvIO+XG4VryTX4DteST3Atd5X+5n/OTy5Pknvx+uBf4HN9wrJy8L5zH
rbkd3+WfHCskb5B7cy1uztd4OCcO3ycf44HcgzvzI44Kz2yvz8FLw+fG5cP7
5Us8jCNchQ9zf+4Ufk9+wKPDM97rP+Zd4R7jJtyab/FITsW1+RQP5t7he+bH
PI77e/3/u8wpzg==
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1DVsVWEABeALA6WFFncWEtyKJbDhBBYCZWHAXYu7W3Gp4u4MUFigxR0C
CQQrRUuRhQR3inz/8PU/59z3hnvfe601aFxScrEoipr5sy4uikaVjKI7MVFU
PDaK+jgL9K5U0OP0U3Jt4vTD+le5L/dKRNF2ZwwlXEt17a3ci7byLWdrLsi/
nYM57j0pzne26byRu1NXvuJsSo780euy5ars0j84e9NDfuhsxw053etGy3fl
vryQu1FKPu2swxH5vtftkEuSprfjttyGi/IJ15fK7+UZ1OOqnkiu/Mn1o3I1
dus9yZfbc1POcH1MeCZyP0pzJtwX2fID13fKsaTr7cmxLdM/yDOpz2dbJmPt
9/X+xJNn2xU+AzL0DuTalusf5Vk04Isti2T7A30ACeGZ2XaH50Km3pGTthX6
J3k2DcNna1vPOHuePpAy4V5tp1hp/6zPoRHfbBsYb3+oD6Isj2yn2cgE1/Jt
gynHY9sZNrGZLWxlW/g+hc+Jid7zyGuHUJ4ntrPhGTLJtce2oVTgqe1ceD5M
du2JbRgVeWY7zyr7F30ujfkengdT7E/14VTiue0Cq+1f9Xk04YdtD1Ptz/QR
VA6/FdtF1ti/6fNpyk/bXqbZn+sjqRK+n7ZLrLV/1xeQyC/bPqbbC/RRVKXQ
dpl19h/6QpqF35NtPzPsL/TRVOOl7Qqp9p/6IppTZDvATHuhPobqvAr3ZStN
lt4pfO9tafoveTEt+GM7yCz7S30sNXgd7tMWz3q9M9ds6fpveQkt+Ws7xGz7
Kz2ZmuH3H+7blsAGvQvXbRl6kZxCK/7Zjtmqs0dPItX/rv9pkrOF
          "]], 
         LineBox[CompressedData["
1:eJwV1HmQz3Ucx/HvOtZuB+XIfSw1OTLjLgozOVaI0rqWKYzzHyrSXykd06Fo
MsqyK/4o7Fpid1n3LTeLMuOcUVh3qqk0ocf7j+e+nq/P5/v5/n7f7+/z2Ywx
UwZNTkmSJNufrx5IktVVkuRyapIsTUuSasjRM1HGO2MX329+Hr/LP47r+UB0
5HtlG2zkCYp4fXzHb8vheIWfks/j0fQkOaTf5xNQ6N7vyIvGKpqbIi/ofVFT
b6hv5U/iQX2N/hd/FXX0cuuX8UdQRV9g/jrPwmN6H/0Y7xLPp+/W/+NjccDa
r+U9Y5+gE/bpbbGJp6CYN8D3PAsrrZmhX+KvoxGuGDuIb4zf1z/F06iAVcbf
NX6Zv4HGuGpsebwLLNRfwCFj8/UEn+nPxPtAid4QS/lg/OC69/Ry/iaaYJve
HEX8mvl8Xh25el8cNpajp2CW3jl+U94Om3klrOWNsIwPwWprZupX+FRkYLve
AsXxjs0X8BrI0/vhOH8We/gR8wt4BXyud8EB3h5beGWs442xnA/Fad4Dh/ka
69/nV/k0NMUOvSVK+A3zK2KPYJHeHyf4c/iRHzW/kFfEF3q5fCm+Hz8oO2Ar
T0Upb4J8/rvMxjB+RvbEkdjX7vcBv8bfwi+8H5rxnbIV1vKbrivktfBtfE85
GC/yn2RX7OV35TiUuT5XVsLs2Evy5XiO2BNxxrCN35GjY4/z9TIDBfwPOSLO
GT8re+FonEV7fWL8Vu7/obxubDp+5f3xON8ln8JDrl2n/81fwy1rVsb5QZq5
xfFcfAgG8J9ltzhz5vbp9/h4HLMuT1YOzM2Jvc4HxXPHPpSdUNXcdv1fPgb1
9DR9A2+KdH2F/icfidp6tn6O9469rZfF+ZST9PqyxGd/xG/Eftbflhfjvcdv
oT+h7+at8bBeqv/DR6Gu/pv1q+KzsMTcLTkUA/lJ2R37Y4+7bhFPxZd6N6Rj
Y+wFFPIROM8zMdf/2P8BGOO5Vw==
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV02W4VVUUBdCLiJS0CAbx6AZRxEBMEKRDGoGHhEqKQXenlKQSSiOidKi0
oqQtIUqJiSApOdaP8eZc+37vnnP22TcpuXPdTikSiUQXfyalSyTKcCxtItFH
zpOdZBJD6WluKjOyT3+B6voNuZlX9YK8rbeX93BYr8kT+n9yFSNpZb6D7+Ma
1NdTs1N/l1zcZz4u59OLZuZM7NdbUENPsEWfQi2eNJ+TqxlFsjk7P+ideV5P
w5f6LHJT1nxCLqA3zc2Z+VpvGfevp2CrPpXaPGU+L9cwmtbmO/lR70IDPS1f
6bPJw/3mk3Jh7G/snzkL38R+xP3rt7BN7yYLMU1/Sd7Lz3odntYvyLVxLT0/
Y/QXZQ4G8pO5hyxBV72hTEc/dpnfkEUZzhxzB5mHwfwa+y1LMZK85gfkb7Kv
XBR7KfMxjL7xPmRWBvCtubssTnLsl0zJdv01WZjp+ssyF0f0ujyjX5TrGEsb
c04OxNmikZ6e3fpckihnPiUX0y/eA/WoZP2SXM+42E/y8aD13+US+seexdkj
P+V99odcyoC4fpwXClCQQhSmCEUpRnFKUJJSlKZMnN04V/HOY+/iPuPacQ0e
4mEe4VEq8BgVeTx+K3GO44zFu459ieeJ/3N/f8oPGEjbOGdUju/z2V9yGYNo
F++cZ+M6Pvtbfshg2sdexv9Zvyw38Fa8G6rEPVn/Ry5nSJw/Gsd3Wf9fbmQ8
r1M17t/6afkRQ+O90iS+y/oV+QkT4szxXDyr9X/lxwzjlTjX1m5lhz6DpvHd
5qvyUybyJtVin6yfkSsYToc4P9ZS8bk+k2ZxLfM1+RmTYr/Md3FQ7x7PpN/O
Hv09qsf+m8/KlYygpTkb3+kd42zpt/FFPL8swjvxDDI3v+jN4z7163ITXfUC
TI73Iu9mEIfMPWVJesSeyQz0Z288ryzGCN6P68dvkSEcNfeWpRlFDfNNHZC0
Ig==
          "]]}}}], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xuInital", "(", "x", ")"}], 
       RowBox[{"xAntiuInitial", "(", "x", ")"}], 
       RowBox[{"xdInitial", "(", "x", ")"}], 
       RowBox[{"xAntidInitial", "(", "x", ")"}], 
       RowBox[{"xg", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.783880311744636*^9, 3.783880583376934*^9, 3.783881233785396*^9, {
   3.7838812698378696`*^9, 3.783881283416584*^9}, 3.783881694318551*^9, {
   3.783881985160368*^9, 3.783882000807888*^9}, 3.783920888301643*^9, 
   3.78392193308624*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"xuInital", "[", "x", "]"}], " ", "+", " ", 
    RowBox[{"xAntiuInitial", "[", "x", "]"}], " ", "+", " ", 
    RowBox[{"xdInitial", "[", "x", "]"}], " ", "+", " ", 
    RowBox[{"xAntidInitial", "[", "x", "]"}], " ", "+", " ", 
    RowBox[{"xg", "[", "x", "]"}], " ", "+", " ", 
    RowBox[{"xsInitial", "[", "x", "]"}], " ", "+", " ", 
    RowBox[{"xAntisInitial", "[", "x", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7838806872886868`*^9, 3.783880739170631*^9}, {
  3.7838808002697573`*^9, 3.783880820710559*^9}}],

Cell[BoxData["1.0000196372882872`"], "Output",
 CellChangeTimes->{3.7838807715495033`*^9, 3.783880821609453*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xcInitial", "[", "x_", "]"}], " ", ":=", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "8"}], "*", 
       RowBox[{"T15", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "40"}], "*", 
       RowBox[{"T24", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"Sigma0", "[", "x", "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xAnticInitial", "[", "x_", "]"}], " ", ":=", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "8"}], "*", 
       RowBox[{"T15", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "40"}], "*", 
       RowBox[{"T24", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"Sigma0", "[", "x", "]"}]}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783923720398666*^9, 3.783923737763723*^9}, {
  3.783923770474177*^9, 3.783923818819079*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xbInitial", "[", "x_", "]"}], " ", ":=", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "10"}], "*", 
       RowBox[{"T24", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"Sigma0", "[", "x", "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xAntibInitial", "[", "x_", "]"}], " ", ":=", 
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "10"}], "*", 
       RowBox[{"T24", "[", "x", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"1", "/", "10"}], "*", 
       RowBox[{"Sigma0", "[", "x", "]"}]}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.78392374319413*^9, 3.7839237580679703`*^9}, {
  3.783923823254046*^9, 3.783923852579637*^9}, {3.78392391104186*^9, 
  3.7839239114632587`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"zero", "[", "x_", "]"}], " ", ":=", " ", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.783923917565681*^9, 3.7839239230181313`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xsInitial", "[", "x", "]"}], ",", " ", 
     RowBox[{"xAntisInitial", "[", "x", "]"}], ",", " ", 
     RowBox[{"xcInitial", "[", "x", "]"}], ",", " ", 
     RowBox[{"xAnticInitial", "[", "x", "]"}], ",", " ", 
     RowBox[{"xbInitial", "[", "x", "]"}], ",", " ", 
     RowBox[{"xAntibInitial", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", ".3"}], "}"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", " ", 
      RowBox[{"Directive", "[", 
       RowBox[{"Orange", ",", " ", "Dashed"}], "]"}], ",", " ", "Red"}], 
     "}"}]}], ",", " ", 
   RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783923956186517*^9, 3.783924019565579*^9}, {
  3.783924132445241*^9, 3.783924133212758*^9}, {3.7839243904579973`*^9, 
  3.783924390684969*^9}, {3.7839249430470552`*^9, 3.7839249579394703`*^9}, {
  3.783925546525794*^9, 3.7839256049133*^9}, {3.7839258395063467`*^9, 
  3.783925848576929*^9}, {3.783926158975513*^9, 3.783926196386931*^9}, {
  3.783926308322728*^9, 3.7839263096110497`*^9}, {3.783926449789831*^9, 
  3.783926449938202*^9}, {3.783926989248999*^9, 3.783927023844914*^9}, {
  3.783927079962566*^9, 3.783927089831582*^9}, {3.783927195880616*^9, 
  3.783927208777721*^9}, {3.7839274554186783`*^9, 3.783927462521099*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0, 0, 1], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwt0uc3FwAUBuAfDWlJUYqGEtEgDZW0KBkJRUNlZKSMUhSJjBQlLUklFeGc
/kmPc3x4znvP/XTPe25sVXNxU3AgEAji/2K2W3SQap5jkGmaeMVvrlHPS35w
niLu0sEoxzlDPndo5QMHSSGZA+xnH3tJIpE9JBDPbuLYxU5i2cF2trGVGKLZ
wmai2MRGIolgA+sJZx1hrGUNq1nFSkJZQQjHOE0et3nCCMtJ4xS53OIx71lG
FoVULfTJF46SQQ5ltDDMUjK5TCXP+MwRrlLLC75xkovc5BHvWEIp9+jmO+co
oIKnfOIwV6ihkzHSeUAvE2Rzg4e8ZeE3Sqiji3HO0kAfv7hEOW185BCN9DNJ
Ma/5SzXP+coJ3jDFfWbo4ScXmGWAP1znH80M0eqweTK+O0M=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 0.5, 0], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl0tlWj1EYwOF/kyaheVCSQpMGQ1JR19AluACd0b10BRQpigplyJRoJMqQ
kpSSStGAx3LwrPf97X3yrb2+rLN1teeCA4FAEA1c5IKDet7Ya1wcpIpdZFHO
prsoM4PjfNXr7LCnUsKknmWFYJ1IIa/1GK94ySgjDDPEIAO84Dn9PKOPpzzh
MY94SC8PuM897tJDN3e4zS266KSDm9ygnTauc41WWrhKMx/4zPK/N/LtCRRw
Rb9nhu+B/w8YTz6X5Ts+scQf4pzn0WSfZ40wnUIxb/U03/hNrLNcGu1z/CBU
J1PEhP5FhH0vR5nSi2yzRx/mkn2DSHs6x/iid5qZlLGqQ8wkjjCuY8z9nOSn
zjYrCCeNUj46zzErieYM+zjBgrtq8wCn2NKnzd0c4rz/6y8tG1Qp
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwl0ldXyAEAxuF/SZFESFaIEmUnSVFoWNESSUUpJA2VSraEkAqV0VCJj+k5
p4vn/G7fizehrrW0JSQIgn90hQbBoLbyh2v8ZoC/FPCLlyzQxBzvOM4Yfdxm
lreUMk0/D0hjhEfUUsQUr2nmFN95xh2uYFbwgTYqKWSSV9wni3Ge0EAZRxil
m5tc4jQ/eM5dKljCR9q5zlmymeApjZSTzhd6uMVlzhDGJx5SxTlOcJSv9FJH
MXksZYgObnCek2QQzmc6qeYCORwjgmUsJ5IVRLGSaFaxmhjWsJZ1xLKeODaw
kU1sZgvxbGUb20lgBztJJIldJLObPaSQyl72sZ8DHOQQw3RRw0VyyeQbj6mn
hHx+8oJ7XGWGN7Qwz/tg8ZuH+Q/KsjpG
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwV0OdaiHEYwOG3pZSWtLStjKZKEeoYHIIDyDfH4hiMrGQV7UJTRUrKSFu0
JInbh/t6nt/z//Jeb97lK5fqQoIguMbV0CA4JuK5wI7bWfMQNSzrCjObi8RQ
zRE+eSs1DxLJOQ6z5V5p5hLLhC40UwhjXZ8xc9jHvC4zM9nLtr5Ovj2BP/Zv
fOa0ziCKX/o9RfZUwtnQC9zguE5k177CFyYpdksjgk29yE1O6P38tX9nhg/c
4qR70v+fxg/jK1PUc8rtACGs6lmmuc0d7nKP+zTwgEYe8ojHPOEpTTTzjOe0
0Eob7XTQSRfd9PCCl7yilz76GWCQIV4zzAijvOEtY7yjwLcnE8qanuMjJTqd
PfzUS5Tbs4jmt64y84jjPEepZdzbP863Uog=
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwVz9lWQQEAQNHbp/gUDSoSbsoQGUuD0iCSUgpR+mfbw17rvJ5IvRPebQRB
kCQqfhjzxgvPPLHJFtvsEGOXPfaJk+CAJIekSJMh5Igsx5yQI0+BIqeUKHNG
hSo16jRocs4FLS654pob2tyynupwzwNzvnhnQI8uC74Z8UqfXyZ8MOSPKZ8s
mfHPIyvnUSFJ
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwNxls2QgEAAMBrKS2oH0toAdlJIakkCuVRpKiQSHklJUliNeZjzplQZGU5
uhQEQZiYzBgz4IkeXeKsssY6CTZIskmKNBm2yLJNjh12yVNgj30OKFLikCOO
OaFMhVPOqHJOjToXXNKgSYsrrrmhzS0d7vjmgzee6fPAnAlDXnjkh0/eeWXB
lBG/fPHHPf8FLjhy
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwVztk2gmEAheHvT1IRaVBJKNPVdOISXAAXnAZjhpCxiPR08Ky119onb/3k
7Pg0CiE0aRn1WAhVNsixRoZzX5sOXXpccMkV19xwS5877nngkQFPPPPCkFfe
eOeDT74YMeabHyb88seU/3mwpogYC8RZJMESSVKkWabBFiXyZFlljxplCqyz
zzYVihywwyaH7HLECjMCFCfD
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwNw+kyQmEAANCPN+mfKEJlSVlKIldc2VWKqNCNvP84Z+akBkk8XQghRC4t
hjB15Ks9n3007bIrZsy66po5191w07wFi2657Y67ltyzbMV9Dzz0yKo1j617
YsNTz2x6buSFLS+9Mvbatjfeeue9iWPffLHjkzMnDu3b9cdP3x3465cfzv32
zwf/AYCoGhE=
          "]]}}}], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, 
     PlotRange -> {{0., 0.299999993877551}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"xsInitial", "(", "x", ")"}], 
       RowBox[{"xAntisInitial", "(", "x", ")"}], 
       RowBox[{"xcInitial", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.783924021800494*^9, 3.783924134245172*^9, 3.783924392346612*^9, {
   3.783924949870007*^9, 3.7839249598453712`*^9}, 3.783925579568797*^9, 
   3.783925610064892*^9, 3.7839258515624027`*^9, 3.783926186499753*^9, {
   3.783926292889049*^9, 3.783926310637763*^9}, 3.783926452724869*^9, {
   3.7839269976462507`*^9, 3.783927025195882*^9}, 3.783927090659605*^9, 
   3.783927211287447*^9, 3.783927463487546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "dataxsFinal", ",", " ", "dataxAntisFinal", ",", " ", "dataxcFinal", ",", 
     " ", "dataxAnticFinal", ",", "dataxbFinal", ",", " ", 
     "dataxAntibFinal"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", " ", 
      RowBox[{"Directive", "[", 
       RowBox[{"Orange", ",", " ", "Dashed"}], "]"}], ",", " ", "Red", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Green", ",", " ", "Dashed"}], "]"}], ",", " ", "Yellow", ",", 
      
      RowBox[{"Directive", "[", 
       RowBox[{"Magenta", ",", " ", "Dashed"}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{".007", ",", ".3"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783924193652768*^9, 3.783924228596694*^9}, {
  3.7839249666903057`*^9, 3.783924967765543*^9}, {3.783925651411338*^9, 
  3.783925653818057*^9}, {3.783925860071109*^9, 3.783925866339944*^9}, {
  3.78392591290788*^9, 3.783925921558622*^9}, {3.7839266740280323`*^9, 
  3.7839267195352592`*^9}, {3.783926750026469*^9, 3.7839268165529737`*^9}, {
  3.7839268964418097`*^9, 3.78392696377874*^9}, {3.783927954594906*^9, 
  3.783927972056541*^9}, {3.783928096580196*^9, 3.783928139102984*^9}, {
  3.78392851930674*^9, 3.783928528236277*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0, 0, 1], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwt0UVTggEABNDPxCbsljSwuzFQsRW7FfWq///mY8bDm93Z68ZLv8WfyiAI
Kvj+z5LhS36WOx+888YrLzzzxCMP3HPHLTdcc0WRSy4454xTTjjmiEMKHLDP
Hnl22WGbLXJsssE6a6yywjJLLLLAPHPMMsM0U0wywThZxhhlhGEypEmRJEGc
IQYZoJ8+eumhmy466aCdNlqJESVCmBaaaaKRBuqpI0QtNVRTRfmbP2RPFjk=

            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 0.5, 0], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtyFVSQgEAQNGnO2FL7kBnsAm7UMRC7G5ERbG7u2NZnA8/ztyZG6qIlUVL
gyAoIfyv3PjTX3745otPPnjnjVdeeOaJRx64545bbrjmiksuOOeMU0445ohD
Dthnj10K7LBNni022SDHOlnWWGWFZZZYZIF55phlhmmmmGSCccYYZYQMw6QZ
YpAB+ukjRS9JeugmQReddNBOG6200EwTjTQQJ0aUCPXUUUsN1VRRSRE4wD1I

            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 0, 0], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwlz8dOQgEARNH3ULErYC+oIFb+xp07Y+JWv9NesYu9997Rk7A4meTuJjU+
NTIZCYIgZIJpxoRRsuIwQwwyQD99ZOglTYoeuukiSScdtNNGKy0000QjDSSI
E6OeOmqpoZoqKqmgnChllFJChDAsHvgzBX754ZsvPvngnTdeeeGZJx554J47
brnhmisuueCcM0454ZgjDjlgnzx77LLDNltsssE6OdZYZYVlllhkgXnmmGWG
f2MlN7I=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0, 1, 0], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwVz1VSggEAhdFfd8ICFExQsBuxEAsbRREl7O7uLXt8ODPf3LcbylXS5dog
CGrIUydWDVl+9Q/ffPHJB++88coLzzzxyAP33HHLDddccckF55xxygnHHHHI
AftUqVCmxB67FNmhwDZb5NlkgxzrrP3/YIVlllgkywLzzDHLDBmmSTPFJBOM
M0aKUZKMMMwQgwzQTx+99NBNF510kCBOO23EiNJKC8000UgDEcLU8wftfSeV

            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 1, 0], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwNyEVSggEAgNFfb8KV3Drjghm3ehYDxS4UMcHuRgwUu7u7uIBv8Wa++ULh
8qKywiAICiilQpQYxeT1H7/88M0Xn3zwzhuvvPDME488cM8dt9xwzRWXXHDO
GaeccMwRhxywzx677JBjmy2ybLLBOmtkWCXNCsssscgC88wxywzTTDHJBOOM
McoIwwyRIskgA/TTRy89JOgmThedxOignTZaaaGZJhppoJ46otRSQ4Rqqqjk
HyjKTkE=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[1, 0, 1], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0Fc3wgEAxuF/hcxsmZHMMrKzhcgm64Yb57jl08sej4vnnPe8l7/kw3Pp
KRwEQYhHXox7xx233HDNFZeUuOCcM0454ZgjDjmgyD57FNhlh23ybLHJBuus
scoKy+RYYpEF5pljlhmyTDPFJBNkSDPOGKOMMMwQKQZJMkA/CfropYduuugk
TgfttNFKC8000UiMBuqpo5YaqolSRSUVRAgT+g/Or9Y/fPPFJx+888YrZf4A
ujsdRQ==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
          113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
          126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
          139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
          152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
          165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
          178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
          191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwNz9c6AmAAANC/Ijsjm5Cd3sadW59rntPeUWTvvXc4F+cBTnpyZnw6EkKY
YpY55llgkSWWWWGVNdbZYJMcW2yTp8AOuxTZY58DDjnimBNOOeOcCy654pob
brnjngceeeKZF155450PPvnimx9K/PJHkIwQJUYZ5cSpoJIqqqmhljoS1NNA
I00kaaaFVtpop4NOuugmRQ+99JGmnwEGGWKYEUbJMEaWiWgI/2F8N00=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwV0FVWAlAARdGnM3EAKmKBih1gi2JgI3YgdmB3T9nNx17r/N5blSukDypC
CHmqRQ21RKgjSj0NNNJEMzHitNBKGwna6aCTLrrpoZc++hkgSYpBhhhmhFHG
GGeCNJNMkWGaGWaZI8s8CyyyxDIrrJJjjTzrbLDJFtvssMse+5TPKHBIkSOO
OeGUM8654JIrrilxwy133PPAI08888Irb7zzwSdffPPDL3/lXZUh/AOzNScx

          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1:eJwNxkVWAlAAAMCvN/FKbN35WOtZTOwWGwvsTmwFxe7uuoCzmPemoKgkUpwX
QohSKmWUU0ElVcSopoZa6qingUaaaKaFVtpop4M4nXTRTQ+99NFPggEGGWKY
EZKkGGWMcSaYZIppZphljnkWWGSJZVZYZY0062ywyRbb7LDLHvtkyHLAITmO
OOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHX/4ozA/hH4YaTd4=

          "]]}, {
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwVy1c3AmAAgOGvjLIjmyRl772F7C3rxpXjml9vE4+L55z35s08PBefIiGE
R17EK2+888EnX3zzQ4nf/yEaQoQoZZRTQSUx4lRRTQ211FFPAwkaaSJJMy20
0kY7HXTSRTcpekjTS4Y+suToZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaF
VdZYZ4M8m2yxTYEddtljnwMOOeKYE04545wLLilyxTU33HLHPX8DlRzj
          
          "]]}}}], {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0.008465, 0}, PlotRange -> {{0.007, 0.3}, {0, 1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.008465, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0.007, 0.3}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["5", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["6", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.783924232137239*^9, 3.783924968324788*^9, 3.783925655098392*^9, 
   3.783925868412404*^9, {3.783926797238208*^9, 3.7839268170723553`*^9}, {
   3.783926897639576*^9, 3.783926964501658*^9}, 3.783927955457306*^9, 
   3.783928006188924*^9, 3.783928107523402*^9, 3.78392814034801*^9, 
   3.78392852911866*^9, 3.785666301372485*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.784297696407118*^9, 3.784297736328987*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mellingf", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.784298020520213*^9, 3.784298030160429*^9}}],

Cell[BoxData["0.4901241739799983`"], "Output",
 CellChangeTimes->{3.784298072761702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Melling", "[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.784298099492832*^9, 3.7842981139531517`*^9}}],

Cell[BoxData["0.3622381877848266`"], "Output",
 CellChangeTimes->{{3.784298107816229*^9, 3.784298114521933*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Mellinu", "[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7842993433058567`*^9, 3.784299352934279*^9}}],

Cell[BoxData[
 RowBox[{"Mellinu", "[", "2.`", "]"}]], "Output",
 CellChangeTimes->{{3.78429935031487*^9, 3.784299354557164*^9}}]
}, Open  ]]
},
WindowSize->{808, 689},
WindowMargins->{{Automatic, 213}, {Automatic, 16}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 73, 1, 32, "Input"],
Cell[634, 23, 8695, 230, 551, "Input"],
Cell[CellGroupData[{
Cell[9354, 257, 868, 22, 54, "Input"],
Cell[10225, 281, 110835, 1949, 248, "Output"]
}, Open  ]],
Cell[121075, 2233, 1027, 27, 138, "Input"],
Cell[122105, 2262, 379, 10, 32, "Input"],
Cell[122487, 2274, 903, 21, 138, "Input"],
Cell[123393, 2297, 1664, 38, 117, "Input"],
Cell[125060, 2337, 240, 5, 32, "Input"],
Cell[125303, 2344, 445, 11, 54, "Input"],
Cell[125751, 2357, 163, 3, 32, "Input"],
Cell[125917, 2362, 932, 28, 54, "Input"],
Cell[126852, 2392, 2179, 63, 138, "Input"],
Cell[129034, 2457, 170, 3, 32, "Input"],
Cell[129207, 2462, 4507, 132, 453, "Input"],
Cell[CellGroupData[{
Cell[133739, 2598, 316, 8, 32, "Input"],
Cell[134058, 2608, 4367, 86, 231, "Output"]
}, Open  ]],
Cell[138440, 2697, 766, 25, 75, "Input"],
Cell[139209, 2724, 280, 6, 32, "Input"],
Cell[139492, 2732, 2040, 62, 117, "Input"],
Cell[141535, 2796, 1008, 28, 117, "Input"],
Cell[142546, 2826, 230, 5, 32, "Input"],
Cell[142779, 2833, 1886, 59, 117, "Input"],
Cell[144668, 2894, 961, 27, 117, "Input"],
Cell[145632, 2923, 231, 5, 32, "Input"],
Cell[145866, 2930, 1889, 59, 117, "Input"],
Cell[147758, 2991, 953, 27, 117, "Input"],
Cell[148714, 3020, 191, 4, 32, "Input"],
Cell[148908, 3026, 427, 9, 54, "Input"],
Cell[149338, 3037, 1100, 31, 96, "Input"],
Cell[CellGroupData[{
Cell[150463, 3072, 628, 14, 32, "Input"],
Cell[151094, 3088, 15582, 343, 246, "Output"]
}, Open  ]],
Cell[166691, 3434, 1096, 31, 96, "Input"],
Cell[CellGroupData[{
Cell[167812, 3469, 479, 12, 32, "Input"],
Cell[168294, 3483, 30947, 584, 247, "Output"]
}, Open  ]],
Cell[199256, 4070, 1098, 31, 96, "Input"],
Cell[CellGroupData[{
Cell[200379, 4105, 435, 11, 32, "Input"],
Cell[200817, 4118, 31452, 596, 242, "Output"]
}, Open  ]],
Cell[232284, 4717, 165, 3, 32, "Input"],
Cell[232452, 4722, 2507, 71, 117, "Input"],
Cell[234962, 4795, 273, 6, 32, "Input"],
Cell[235238, 4803, 2250, 68, 96, "Input"],
Cell[237491, 4873, 1088, 28, 96, "Input"],
Cell[238582, 4903, 225, 5, 32, "Input"],
Cell[238810, 4910, 2226, 67, 96, "Input"],
Cell[241039, 4979, 1041, 27, 96, "Input"],
Cell[242083, 5008, 224, 5, 32, "Input"],
Cell[242310, 5015, 2236, 67, 96, "Input"],
Cell[244549, 5084, 1031, 27, 96, "Input"],
Cell[245583, 5113, 193, 4, 32, "Input"],
Cell[245779, 5119, 1096, 31, 96, "Input"],
Cell[CellGroupData[{
Cell[246900, 5154, 457, 12, 32, "Input"],
Cell[247360, 5168, 30608, 576, 246, "Output"]
}, Open  ]],
Cell[277983, 5747, 1096, 31, 96, "Input"],
Cell[CellGroupData[{
Cell[279104, 5782, 457, 12, 32, "Input"],
Cell[279564, 5796, 30545, 574, 246, "Output"]
}, Open  ]],
Cell[310124, 6373, 1222, 34, 75, "Input"],
Cell[311349, 6409, 549, 15, 32, "Input"],
Cell[311901, 6426, 1222, 34, 75, "Input"],
Cell[313126, 6462, 219, 5, 32, "Input"],
Cell[313348, 6469, 210, 5, 32, "Input"],
Cell[313561, 6476, 2319, 71, 117, "Input"],
Cell[315883, 6549, 2998, 91, 201, "Input"],
Cell[318884, 6642, 219, 4, 32, "Input"],
Cell[319106, 6648, 427, 11, 54, "Input"],
Cell[319536, 6661, 681, 18, 54, "Input"],
Cell[320220, 6681, 622, 16, 32, "Input"],
Cell[320845, 6699, 867, 22, 54, "Input"],
Cell[321715, 6723, 859, 22, 54, "Input"],
Cell[322577, 6747, 869, 20, 54, "Input"],
Cell[323449, 6769, 659, 17, 54, "Input"],
Cell[324111, 6788, 571, 13, 54, "Input"],
Cell[324685, 6803, 465, 12, 54, "Input"],
Cell[325153, 6817, 860, 24, 75, "Input"],
Cell[326016, 6843, 251, 6, 32, "Input"],
Cell[326270, 6851, 784, 17, 96, "Input"],
Cell[327057, 6870, 1647, 44, 96, "Input"],
Cell[328707, 6916, 240, 5, 32, "Input"],
Cell[328950, 6923, 700, 17, 54, "Input"],
Cell[329653, 6942, 217, 5, 32, "Input"],
Cell[329873, 6949, 1196, 36, 54, "Input"],
Cell[331072, 6987, 603, 16, 54, "Input"],
Cell[331678, 7005, 609, 18, 32, "Input"],
Cell[332290, 7025, 1349, 35, 96, "Input"],
Cell[CellGroupData[{
Cell[333664, 7064, 459, 12, 32, "Input"],
Cell[334126, 7078, 30472, 572, 246, "Output"]
}, Open  ]],
Cell[364613, 7653, 167, 3, 32, "Input"],
Cell[364783, 7658, 279, 6, 32, "Input"],
Cell[365065, 7666, 618, 15, 54, "Input"],
Cell[365686, 7683, 504, 14, 32, "Input"],
Cell[366193, 7699, 740, 20, 54, "Input"],
Cell[366936, 7721, 833, 21, 54, "Input"],
Cell[367772, 7744, 717, 18, 75, "Input"],
Cell[368492, 7764, 714, 18, 54, "Input"],
Cell[369209, 7784, 877, 22, 96, "Input"],
Cell[370089, 7808, 221, 5, 32, "Input"],
Cell[370313, 7815, 693, 19, 54, "Input"],
Cell[371009, 7836, 252, 6, 32, "Input"],
Cell[371264, 7844, 734, 17, 96, "Input"],
Cell[372001, 7863, 340, 8, 32, "Input"],
Cell[372344, 7873, 938, 25, 54, "Input"],
Cell[373285, 7900, 1099, 31, 96, "Input"],
Cell[CellGroupData[{
Cell[374409, 7935, 459, 12, 32, "Input"],
Cell[374871, 7949, 30415, 570, 246, "Output"]
}, Open  ]],
Cell[405301, 8522, 186, 4, 32, "Input"],
Cell[405490, 8528, 602, 15, 54, "Input"],
Cell[406095, 8545, 555, 15, 32, "Input"],
Cell[406653, 8562, 793, 21, 54, "Input"],
Cell[407449, 8585, 786, 21, 54, "Input"],
Cell[408238, 8608, 678, 17, 75, "Input"],
Cell[408919, 8627, 717, 18, 54, "Input"],
Cell[409639, 8647, 832, 21, 96, "Input"],
Cell[410474, 8670, 154, 4, 32, "Input"],
Cell[410631, 8676, 697, 19, 54, "Input"],
Cell[411331, 8697, 304, 7, 32, "Input"],
Cell[411638, 8706, 554, 14, 54, "Input"],
Cell[412195, 8722, 1105, 31, 96, "Input"],
Cell[CellGroupData[{
Cell[413325, 8757, 178, 3, 32, "Input"],
Cell[413506, 8762, 110, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413653, 8768, 464, 12, 32, "Input"],
Cell[414120, 8782, 17818, 379, 246, "Output"]
}, Open  ]],
Cell[431953, 9164, 1144, 32, 96, "Input"],
Cell[433100, 9198, 227, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[433352, 9207, 457, 12, 32, "Input"],
Cell[433812, 9221, 17778, 378, 246, "Output"]
}, Open  ]],
Cell[451605, 9602, 411, 10, 54, "Input"],
Cell[452019, 9614, 462, 12, 32, "Input"],
Cell[452484, 9628, 1028, 27, 183, "Input"],
Cell[453515, 9657, 129, 3, 32, "Input"],
Cell[453647, 9662, 84, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[453756, 9668, 79, 1, 32, "Input"],
Cell[453838, 9671, 2692, 87, 263, "Output"]
}, Open  ]],
Cell[456545, 9761, 590, 15, 54, "Input"],
Cell[457138, 9778, 2534, 64, 327, "Input"],
Cell[459675, 9844, 226, 5, 32, "Input"],
Cell[459904, 9851, 502, 12, 54, "Input"],
Cell[460409, 9865, 404, 11, 54, "Input"],
Cell[460816, 9878, 191, 4, 32, "Input"],
Cell[461010, 9884, 308, 8, 32, "Input"],
Cell[461321, 9894, 159, 3, 32, "Input"],
Cell[461483, 9899, 392, 8, 32, "Input"],
Cell[461878, 9909, 171, 3, 32, "Input"],
Cell[462052, 9914, 1253, 34, 96, "Input"],
Cell[463308, 9950, 1204, 33, 96, "Input"],
Cell[464515, 9985, 1036, 29, 96, "Input"],
Cell[465554, 10016, 750, 22, 54, "Input"],
Cell[466307, 10040, 595, 18, 54, "Input"],
Cell[466905, 10060, 173, 3, 32, "Input"],
Cell[467081, 10065, 2268, 67, 243, "Input"],
Cell[469352, 10134, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[469471, 10139, 1773, 33, 75, "Input"],
Cell[471247, 10174, 34119, 678, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505403, 10857, 740, 14, 54, "Input"],
Cell[506146, 10873, 17332, 338, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523515, 11216, 103, 1, 32, "Input"],
Cell[523621, 11219, 8827, 219, 526, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532485, 11443, 697, 13, 54, "Input"],
Cell[533185, 11458, 16830, 329, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550052, 11792, 701, 13, 54, "Input"],
Cell[550756, 11807, 15976, 315, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566769, 12127, 699, 13, 54, "Input"],
Cell[567471, 12142, 15845, 313, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[583353, 12460, 653, 12, 54, "Input"],
Cell[584009, 12474, 11018, 191, 241, 3896, 73, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[595042, 12668, 216, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[595283, 12676, 128, 2, 32, "Input"],
Cell[595414, 12680, 90, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595541, 12686, 130, 2, 32, "Input"],
Cell[595674, 12690, 87, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595798, 12696, 208, 4, 32, "Input"],
Cell[596009, 12702, 161, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596207, 12709, 157, 3, 32, "Input"],
Cell[596367, 12714, 111, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596515, 12720, 3573, 94, 243, "Input"],
Cell[600091, 12816, 157, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600285, 12823, 4154, 114, 285, "Input"],
Cell[604442, 12939, 87, 1, 32, "Output"]
}, Open  ]],
Cell[604544, 12943, 1899, 53, 138, "Input"],
Cell[606446, 12998, 1898, 53, 138, "Input"],
Cell[608347, 13053, 1672, 47, 96, "Input"],
Cell[CellGroupData[{
Cell[610044, 13104, 1200, 27, 75, "Input"],
Cell[611247, 13133, 83526, 1498, 256, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[694810, 14636, 673, 14, 54, "Input"],
Cell[695486, 14652, 112, 1, 32, "Output"]
}, Open  ]],
Cell[695613, 14656, 1155, 35, 54, "Input"],
Cell[696771, 14693, 986, 30, 54, "Input"],
Cell[697760, 14725, 179, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[697964, 14733, 1787, 37, 96, "Input"],
Cell[699754, 14772, 24697, 497, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[724488, 15274, 1740, 37, 117, "Input"],
Cell[726231, 15313, 37083, 762, 247, "Output"]
}, Open  ]],
Cell[763329, 16078, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[763446, 16083, 127, 2, 32, "Input"],
Cell[763576, 16087, 88, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[763701, 16093, 156, 3, 32, "Input"],
Cell[763860, 16098, 112, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764009, 16104, 156, 3, 32, "Input"],
Cell[764168, 16109, 128, 2, 32, "Output"]
}, Open  ]]
}
]
*)

